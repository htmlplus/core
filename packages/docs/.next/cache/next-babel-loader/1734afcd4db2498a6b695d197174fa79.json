{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useMemo } from 'react';\nimport Prism from 'prismjs';\nimport { HpGrid, HpGridItem } from '@htmlplus/react';\nimport { FrameworkSelector, Link, Section, Sidebar } from 'components';\nimport { components } from 'data';\nimport { useRouter } from 'hooks';\nimport { Utils } from 'utils';\nimport styles from './default.module.scss';\nexport const LayoutDefault = ({\n  children\n}) => {\n  const router = useRouter(); // TODO\n\n  useEffect(() => Prism.highlightAll());\n  const items = useMemo(() => [{\n    title: 'UI Components',\n    items: components.filter(item => item.parent).map(component => ({\n      // @ts-ignore\n      title: component.title + (component.development ? ' (development)' : ''),\n      route: {\n        to: 'ROUTE:COMPONENT:DETAILS',\n        params: {\n          key: component.key\n        }\n      }\n    }))\n  }, {\n    title: 'Framework Integrations',\n    items: [{\n      title: 'Overview',\n      route: {\n        to: 'ROUTE:FRAMEWORK:OVERVIEW'\n      }\n    }, {\n      title: 'React',\n      route: {\n        to: 'ROUTE:FRAMEWORK:REACT'\n      }\n    }, {\n      title: 'Angular',\n      route: {\n        to: 'ROUTE:FRAMEWORK:ANGULAR'\n      }\n    }, {\n      title: 'Vue',\n      route: {\n        to: 'ROUTE:FRAMEWORK:VUE'\n      }\n    }, {\n      title: 'JavaScript',\n      route: {\n        to: 'ROUTE:FRAMEWORK:JAVASCRIPT'\n      }\n    }]\n  }], [components]);\n  const all = useMemo(() => {\n    return items.map(item => {\n      if (!item.items) return null;\n      return (item.items || []).map(subItem => _objectSpread(_objectSpread({}, subItem), {}, {\n        category: item.title\n      }));\n    }).flat();\n  }, [items]);\n  const index = useMemo(() => all.findIndex(item => item.path === router.location.path), [all, router.location.path]);\n  const next = useMemo(() => all[index + 1], [all, index]);\n  const prev = useMemo(() => all[index - 1], []);\n  const classes = Utils.classes({\n    [styles['layout-default']]: true\n  });\n  return __jsx(\"div\", {\n    className: classes\n  }, __jsx(FrameworkSelector, null), __jsx(HpGrid, {\n    wrap: \"off\"\n  }, __jsx(HpGridItem, {\n    xs: \"auto\"\n  }, __jsx(Sidebar, {\n    items: items\n  })), __jsx(HpGridItem, {\n    xs: \"grow\"\n  }, __jsx(\"div\", {\n    className: styles['layout-default__content']\n  }, children, __jsx(Section, {\n    size: \"page\"\n  }, __jsx(HpGrid, {\n    justify: \"between\"\n  }, __jsx(HpGridItem, {\n    xs: \"auto\"\n  }, !!prev && __jsx(Link, {\n    to: prev.route.name,\n    params: prev.route.params\n  }, \"PREV\", __jsx(\"br\", null), prev.title, __jsx(\"br\", null), prev.category)), __jsx(HpGridItem, {\n    xs: \"auto\"\n  }, !!next && __jsx(Link, {\n    to: next.route.name,\n    params: next.route.params\n  }, \"NEXT\", __jsx(\"br\", null), next.title, __jsx(\"br\", null), next.category))))))));\n};","map":null,"metadata":{},"sourceType":"module"}