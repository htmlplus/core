{"ast":null,"code":"import React from 'react';\nimport { Alert, Text } from 'components';\nconst mapper = {\n  p: {\n    name: Text,\n    props: {\n      size: 'body'\n    }\n  },\n  h1: {\n    name: Text,\n    props: {\n      size: 'header'\n    }\n  },\n  blockquote: {\n    name: Alert,\n    props: {\n      type: element => {\n        const text = (element.textContent || '').trim();\n        const types = ['[ERROR]', '[INFO]', '[SUCCESS]', '[WARNING]'];\n\n        for (let i = 0; i < types.length; i++) {\n          const type = types[i];\n          if (text.indexOf(type) === -1) continue;\n          element.innerHTML = element.innerHTML.replace(type, '');\n          return type.replace(/\\[|\\]/g, '').toLowerCase();\n        }\n      }\n    }\n  }\n};\n\nconst convert = input => {\n  const map = mapper[input.localName] || {};\n  const name = map.name || input.localName;\n  const props = map.props || {};\n  props.key = Math.random();\n  const children = [];\n  Object.keys(props).forEach(key => {\n    if (typeof props[key] !== 'function') return null;\n    props[key] = props[key](input);\n  });\n  Array.from(input.children).map(child => children.push(convert(child)));\n  return /*#__PURE__*/React.createElement(name, props, children.length ? children : input.textContent);\n};\n\nexport const parser = input => {\n  // TODO\n  return 'markup'; // const value = Markup.parse((input || '').toString(), { headerIds: false });\n  // const wapper = document.createElement('div');\n  // wapper.innerHTML = value;\n  // return convert(wapper);\n};","map":null,"metadata":{},"sourceType":"module"}