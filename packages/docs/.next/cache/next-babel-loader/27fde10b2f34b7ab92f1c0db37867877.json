{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\toc\\\\toc\\\\toc.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Box, Text } from '@app/components';\nimport { useStore } from '@app/hooks';\nimport { Utils } from '@app/utils';\nexport const Toc = observer(() => {\n  const store = useStore();\n  const items = store.toc.items;\n  const classes = Utils.classes('toc');\n  return __jsx(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, !!items.length && __jsx(React.Fragment, null, __jsx(Box, {\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    color: \"main-lighten-1\",\n    size: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"CONTENTS\")), __jsx(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, items.map(item => __jsx(\"div\", {\n    key: item.key,\n    className: Utils.classes({\n      ['active']: item.active,\n      [`level-${item.level || 0}`]: true\n    }),\n    onClick: () => item.scrollTo(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, __jsx(Text, {\n    color: \"main\",\n    size: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, item.value))))));\n});","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/toc/toc/toc.tsx"],"names":["React","observer","Box","Text","useStore","Utils","Toc","store","items","toc","classes","length","map","item","key","active","level","scrollTo","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,KAAT,QAAsB,YAAtB;AAGA,OAAO,MAAMC,GAAuB,GAAGL,QAAQ,CAAC,MAAM;AAEpD,QAAMM,KAAK,GAAGH,QAAQ,EAAtB;AAEA,QAAMI,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAUD,KAAxB;AAEA,QAAME,OAAO,GAAGL,KAAK,CAACK,OAAN,CACd,KADc,CAAhB;AAIA,SACE;AAAK,IAAA,SAAS,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAACF,KAAK,CAACG,MAAR,IACC,4BACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,gBAAZ;AAA6B,IAAA,IAAI,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,GAAN,CAAWC,IAAD,IACT;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,IAAA,SAAS,EAAET,KAAK,CAACK,OAAN,CAAc;AACvB,OAAC,QAAD,GAAYG,IAAI,CAACE,MADM;AAEvB,OAAE,SAAQF,IAAI,CAACG,KAAL,IAAc,CAAE,EAA1B,GAA8B;AAFP,KAAd,CAFb;AAME,IAAA,OAAO,EAAE,MAAMH,IAAI,CAACI,QAAL,EANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,KADR,CARF,CADD,CADH,CANF,CAFJ,CADF;AA6BD,CAvC8C,CAAxC","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Box, Text } from '@app/components';\nimport { useStore } from '@app/hooks';\nimport { Utils } from '@app/utils';\nimport { TocProps } from './toc.types';\n\nexport const Toc: React.FC<TocProps> = observer(() => {\n\n  const store = useStore();\n\n  const items = store.toc.items;\n\n  const classes = Utils.classes(\n    'toc'\n  );\n\n  return (\n    <div className={classes}>\n      {!!items.length && (\n        <>\n          <Box mb={3}>\n            <Text color=\"main-lighten-1\" size=\"caption\">\n              CONTENTS\n          </Text>\n          </Box>\n          <div className=\"body\">\n            {items.map((item) => (\n              <div\n                key={item.key}\n                className={Utils.classes({\n                  ['active']: item.active,\n                  [`level-${item.level || 0}`]: true\n                })}\n                onClick={() => item.scrollTo()}\n              >\n                <Text color=\"main\" size=\"label\">\n                  {item.value}\n                </Text>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}