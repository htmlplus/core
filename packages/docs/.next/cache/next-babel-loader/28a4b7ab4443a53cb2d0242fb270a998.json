{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo, useState } from 'react';\nimport { Example, Markup, Page, Parameters, Section, Text, PlusGrid, PlusGridItem, PlusTabs, PlusTabsBar, PlusTabsPanel, PlusTabsPanels, PlusTabsTab } from 'components';\nimport { components } from 'data';\nimport { useStore } from 'hooks';\nimport { observer } from 'mobx-react-lite';\nimport { Utils } from 'utils'; // TODO\n\nimport items from '@htmlplus/examples'; // TODO\n\nexport var ComponentDetails = observer(function (_ref) {\n  var item = _ref.item;\n  var store = useStore();\n\n  var _useState = useState(undefined),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var parent = item;\n  var children = useMemo(function () {\n    var result = [];\n    result.push(parent);\n    components.filter(function (component) {\n      return !component.main && component.group === (parent === null || parent === void 0 ? void 0 : parent.group);\n    }).map(function (component) {\n      return result.push(component);\n    });\n    return result;\n  }, [parent]);\n  var current = useMemo(function () {\n    return components.find(function (_ref2) {\n      var key = _ref2.key;\n      return key === (selected || (parent === null || parent === void 0 ? void 0 : parent.key));\n    });\n  }, [parent, selected]);\n  var tabs = useMemo(function () {\n    var properties = current.properties,\n        slots = current.slots,\n        events = current.events,\n        styles = current.styles,\n        methods = current.methods;\n    return [{\n      key: 'properties',\n      value: 'Properties',\n      items: properties.map(function (property) {\n        return _objectSpread(_objectSpread({}, property), {}, {\n          name: store.ui.framework === 'react' ? Utils.toCamelCase(property.name) : property.name\n        });\n      })\n    }, {\n      key: 'slots',\n      value: 'Slots',\n      items: slots\n    }, {\n      key: 'events',\n      value: 'Events',\n      items: events.map(function (event) {\n        return _objectSpread(_objectSpread({}, event), {}, {\n          value: event.detail,\n          // TODO\n          name: \"on\".concat(process.env.PLATFORM_EVENT_PREFIX).concat(Utils.toCapitalCase(event.name))\n        });\n      })\n    }, {\n      key: 'styles',\n      value: 'Styles',\n      items: styles\n    }, {\n      key: 'methods',\n      value: 'Methods',\n      items: methods.map(function (method) {\n        return _objectSpread(_objectSpread({}, method), {}, {\n          value: method.signature\n        });\n      })\n    }];\n  }, [current, store.ui.framework]); // TODO:\n\n  var examples = useMemo(function () {\n    var examples = [];\n    var current = items.find(function (example) {\n      return example.key === parent.key;\n    });\n    parent.examples.map(function (example) {\n      var _example$codes$find;\n\n      example = JSON.parse(JSON.stringify(example));\n      var item = current.examples.find(function (x) {\n        return x.key === example.key;\n      });\n      var preview = item.ports.preview.script;\n      var port = item.ports[store.ui.framework];\n      var style = ((_example$codes$find = example.codes.find(function (code) {\n        return code.key === 'style';\n      })) === null || _example$codes$find === void 0 ? void 0 : _example$codes$find.value) || '';\n      example.code = _objectSpread(_objectSpread({\n        preview: preview\n      }, port), {}, {\n        style: style\n      });\n      examples.push(example);\n    });\n    return examples;\n  }, [store.ui.framework, parent.key]);\n\n  var isDisabled = function isDisabled(key) {\n    return !current[key].length;\n  };\n\n  var isActive = function isActive(key) {\n    return (tabs.find(function (tab) {\n      return !isDisabled(tab.key);\n    }) || {}).key === key;\n  };\n\n  var hasApi = !!tabs.filter(function (tab) {\n    return isActive(tab.key);\n  }).length;\n  var hasExamples = !!examples.length;\n  var hasReadme = !!parent.readme;\n  if (!current) return null;\n  return __jsx(Page, {\n    layout: \"default\"\n  }, process.env.GLOBAL_CONFIG_NAME, __jsx(Section, {\n    size: \"page\"\n  }, __jsx(Text, null, parent.title), __jsx(Markup, null, parent.description)), hasReadme && __jsx(Section, {\n    size: \"page\"\n  }, __jsx(Markup, null, parent.readme)), hasApi && __jsx(Section, {\n    size: \"page\"\n  }, __jsx(PlusGrid, {\n    \"align-items\": \"center\",\n    justify: \"between\"\n  }, __jsx(PlusGridItem, null, __jsx(Text, null, \"API\")), __jsx(PlusGridItem, null, __jsx(\"select\", {\n    value: selected,\n    disabled: children.length < 2,\n    onChange: function onChange(event) {\n      return setSelected(event.target.value);\n    }\n  }, children.map(function (item) {\n    return __jsx(\"option\", {\n      key: item.key,\n      value: item.key\n    }, item.tag);\n  })))), __jsx(Text, null, \"Select your desired component from below and see the available properties, slots, events, styles and methods.\"), __jsx(PlusTabs, {\n    value: \"properties\"\n  }, __jsx(PlusTabsBar, {\n    grow: true\n  }, tabs.map(function (tab) {\n    return __jsx(PlusTabsTab, {\n      key: tab.key,\n      disabled: isDisabled(tab.key),\n      value: tab.key\n    }, __jsx(Text, null, tab.value));\n  })), __jsx(PlusTabsPanels, null, tabs.map(function (tab) {\n    return __jsx(PlusTabsPanel, {\n      key: tab.key,\n      value: tab.key\n    }, __jsx(Parameters, {\n      items: tab.items\n    }));\n  })))), hasExamples && __jsx(Section, {\n    size: \"page\"\n  }, __jsx(Text, null, \"Examples\"), __jsx(Text, null, \"Below is a collection of simple to complex examples.\")), examples.map(function (example) {\n    return __jsx(Section, {\n      key: example.key,\n      size: \"page\"\n    }, __jsx(Text, null, example.title), __jsx(Markup, null, example.readme), __jsx(Example, {\n      value: example\n    }));\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}