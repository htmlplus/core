{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\views\\\\component\\\\details\\\\details.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo, useState } from 'react';\nimport { Example, Markup, Page, Parameters, Section, Text, PlusGrid, PlusGridItem, PlusTabs, PlusTabsBar, PlusTabsPanel, PlusTabsPanels, PlusTabsTab } from 'components';\nimport { components } from 'data';\nimport { useStore } from 'hooks';\nimport { observer } from 'mobx-react-lite';\nimport { Utils } from 'utils'; // TODO\n\nimport items from '@htmlplus/examples'; // TODO\n\nexport const ComponentDetails = observer(_c = _s(({\n  item\n}) => {\n  _s();\n\n  const store = useStore();\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(undefined);\n  const parent = item;\n  const children = useMemo(() => {\n    const result = [];\n    result.push(parent);\n    components.filter(component => !component.main && component.group === (parent === null || parent === void 0 ? void 0 : parent.group)).map(component => result.push(component));\n    return result;\n  }, [parent]);\n  const current = useMemo(() => {\n    return components.find(({\n      key\n    }) => key === (selected || (parent === null || parent === void 0 ? void 0 : parent.key)));\n  }, [parent, selected]);\n  const tabs = useMemo(() => {\n    const {\n      properties,\n      slots,\n      events,\n      styles,\n      methods\n    } = current;\n    return [{\n      key: 'properties',\n      value: 'Properties',\n      items: properties.map(property => {\n        return _objectSpread(_objectSpread({}, property), {}, {\n          name: store.ui.framework === 'react' ? Utils.toCamelCase(property.name) : property.name\n        });\n      })\n    }, {\n      key: 'slots',\n      value: 'Slots',\n      items: slots\n    }, {\n      key: 'events',\n      value: 'Events',\n      items: events.map(event => _objectSpread(_objectSpread({}, event), {}, {\n        value: event.detail,\n        // TODO\n        name: `on${process.env.PLATFORM_EVENT_PREFIX}${Utils.toCapitalCase(event.name)}`\n      }))\n    }, {\n      key: 'styles',\n      value: 'Styles',\n      items: styles\n    }, {\n      key: 'methods',\n      value: 'Methods',\n      items: methods.map(method => _objectSpread(_objectSpread({}, method), {}, {\n        value: method.signature\n      }))\n    }];\n  }, [current, store.ui.framework]); // TODO:\n\n  const examples = useMemo(() => {\n    const examples = [];\n    const current = items.find(example => example.key === parent.key);\n    parent.examples.map(example => {\n      var _example$codes$find;\n\n      example = JSON.parse(JSON.stringify(example));\n      const item = current.examples.find(x => x.key === example.key);\n      const preview = item.ports.preview.script;\n      const port = item.ports[store.ui.framework];\n      const style = ((_example$codes$find = example.codes.find(code => code.key === 'style')) === null || _example$codes$find === void 0 ? void 0 : _example$codes$find.value) || '';\n      example.code = _objectSpread(_objectSpread({\n        preview\n      }, port), {}, {\n        style\n      });\n      examples.push(example);\n    });\n    return examples;\n  }, [store.ui.framework, parent.key]);\n\n  const isDisabled = key => !current[key].length;\n\n  const isActive = key => (tabs.find(tab => !isDisabled(tab.key)) || {}).key === key;\n\n  const hasApi = !!tabs.filter(tab => isActive(tab.key)).length;\n  const hasExamples = !!examples.length;\n  const hasReadme = !!parent.readme;\n  if (!current) return null;\n  return __jsx(Page, {\n    layout: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, process.env.GLOBAL_CONFIG_NAME, __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, parent.title), __jsx(Markup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, parent.description)), hasReadme && __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, __jsx(Markup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, parent.readme)), hasApi && __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, __jsx(PlusGrid, {\n    \"align-items\": \"center\",\n    justify: \"between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, __jsx(PlusGridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"API\")), __jsx(PlusGridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(\"select\", {\n    value: selected,\n    disabled: children.length < 2,\n    onChange: event => setSelected(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, children.map(item => __jsx(\"option\", {\n    key: item.key,\n    value: item.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, item.tag))))), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"Select your desired component from below and see the available properties, slots, events, styles and methods.\"), __jsx(PlusTabs, {\n    value: \"properties\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, __jsx(PlusTabsBar, {\n    grow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, tabs.map(tab => __jsx(PlusTabsTab, {\n    key: tab.key,\n    disabled: isDisabled(tab.key),\n    value: tab.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, tab.value)))), __jsx(PlusTabsPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, tabs.map(tab => __jsx(PlusTabsPanel, {\n    key: tab.key,\n    value: tab.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, __jsx(Parameters, {\n    items: tab.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  })))))), hasExamples && __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"Examples\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"Below is a collection of simple to complex examples.\")), examples.map(example => __jsx(Section, {\n    key: example.key,\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, example.title), __jsx(Markup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, example.readme), __jsx(Example, {\n    value: example,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }))));\n}, \"9SJMBQIPAulBmfGeG0iwtRUvIv0=\", false, function () {\n  return [useStore];\n}));\n_c2 = ComponentDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComponentDetails$observer\");\n$RefreshReg$(_c2, \"ComponentDetails\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/views/component/details/details.tsx"],"names":["React","useMemo","useState","Example","Markup","Page","Parameters","Section","Text","PlusGrid","PlusGridItem","PlusTabs","PlusTabsBar","PlusTabsPanel","PlusTabsPanels","PlusTabsTab","components","useStore","observer","Utils","items","ComponentDetails","item","store","selected","setSelected","undefined","parent","children","result","push","filter","component","main","group","map","current","find","key","tabs","properties","slots","events","styles","methods","value","property","name","ui","framework","toCamelCase","event","detail","process","env","PLATFORM_EVENT_PREFIX","toCapitalCase","method","signature","examples","example","JSON","parse","stringify","x","preview","ports","script","port","style","codes","code","isDisabled","length","isActive","tab","hasApi","hasExamples","hasReadme","readme","GLOBAL_CONFIG_NAME","title","description","target","tag"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { Example, Markup, Page, Parameters, Section, Text, PlusGrid, PlusGridItem, PlusTabs, PlusTabsBar, PlusTabsPanel, PlusTabsPanels, PlusTabsTab, } from 'components';\nimport { components } from 'data';\nimport { useStore } from 'hooks';\nimport { observer } from 'mobx-react-lite';\nimport { Utils } from 'utils';\n\n// TODO\nimport items from '@htmlplus/examples';\n\n// TODO\ninterface ComponentDetailsProps {\n  item: any;\n}\n\nexport const ComponentDetails: React.FC<ComponentDetailsProps> = observer(({ item }) => {\n\n  const store = useStore();\n\n  const [selected, setSelected] = useState(undefined);\n\n  const parent = item;\n\n  const children: Array<any> = useMemo(\n    () => {\n\n      const result = [];\n\n      result.push(parent);\n\n      components\n        .filter((component) => !component.main && component.group === parent?.group)\n        .map((component) => result.push(component));\n\n      return result;\n    },\n    [parent]\n  );\n\n  const current: any = useMemo(\n    () => {\n      return components.find(({ key }) => key === (selected || parent?.key));\n    },\n    [parent, selected]\n  );\n\n  const tabs = useMemo(\n    () => {\n\n      const { properties, slots, events, styles, methods } = current;\n\n      return [\n        {\n          key: 'properties',\n          value: 'Properties',\n          items: properties.map((property) => {\n\n            return {\n              ...property,\n              name: store.ui.framework === 'react' ? Utils.toCamelCase(property.name) : property.name\n            }\n          }),\n        },\n        {\n          key: 'slots',\n          value: 'Slots',\n          items: slots,\n        },\n        {\n          key: 'events',\n          value: 'Events',\n          items: events.map((event: any) => ({\n            ...event,\n            value: event.detail,\n            // TODO\n            name: `on${process.env.PLATFORM_EVENT_PREFIX}${Utils.toCapitalCase(event.name)}`,\n          })),\n        },\n        {\n          key: 'styles',\n          value: 'Styles',\n          items: styles,\n        },\n        {\n          key: 'methods',\n          value: 'Methods',\n          items: methods.map((method: any) => ({ ...method, value: method.signature })),\n        },\n      ];\n    },\n    [current, store.ui.framework]\n  );\n\n  // TODO:\n  const examples = useMemo(\n    () => {\n\n      const examples = [];\n\n      const current = items.find((example) => example.key === parent.key);\n\n      parent.examples.map((example) => {\n\n        example = JSON.parse(JSON.stringify(example));\n\n        const item = current.examples.find((x) => x.key === example.key);\n\n        const preview = item.ports.preview.script;\n\n        const port = item.ports[store.ui.framework];\n\n        const style = example.codes.find((code) => code.key === 'style')?.value || '';\n\n        example.code = { preview, ...port, style };\n\n        examples.push(example);\n      });\n\n      return examples;\n    },\n    [store.ui.framework, parent.key]\n  );\n\n  const isDisabled = (key: string) => !current[key].length;\n\n  const isActive = (key: string) => (tabs.find((tab) => !isDisabled(tab.key)) || {}).key === key;\n\n  const hasApi = !!tabs.filter((tab) => isActive(tab.key)).length;\n\n  const hasExamples = !!examples.length;\n\n  const hasReadme = !!parent.readme;\n\n  if (!current) return null;\n\n  return (\n    <Page layout=\"default\">\n\n      {process.env.GLOBAL_CONFIG_NAME}\n\n      <Section size=\"page\">\n        <Text>{parent.title}</Text>\n        <Markup>{parent.description}</Markup>\n      </Section>\n\n      {hasReadme && (\n        <Section size=\"page\">\n          <Markup>{parent.readme}</Markup>\n        </Section>\n      )}\n\n      {hasApi && (\n        <Section size=\"page\">\n          <PlusGrid align-items=\"center\" justify=\"between\">\n            <PlusGridItem>\n              <Text>API</Text>\n            </PlusGridItem>\n            <PlusGridItem>\n              <select\n                value={selected}\n                disabled={children.length < 2}\n                onChange={(event: any) => setSelected(event.target.value)}\n              >\n                {children.map((item) => (\n                  <option key={item.key} value={item.key}>\n                    {item.tag}\n                  </option>\n                ))}\n              </select>\n            </PlusGridItem>\n          </PlusGrid>\n          <Text>\n            Select your desired component from below and see the available properties, slots,\n            events, styles and methods.\n          </Text>\n          <PlusTabs value=\"properties\">\n            <PlusTabsBar grow>\n              {tabs.map((tab) => (\n                <PlusTabsTab key={tab.key} disabled={isDisabled(tab.key)} value={tab.key}>\n                  <Text>{tab.value}</Text>\n                </PlusTabsTab>\n              ))}\n            </PlusTabsBar>\n            <PlusTabsPanels>\n              {tabs.map((tab) => (\n                <PlusTabsPanel key={tab.key} value={tab.key}>\n                  <Parameters items={tab.items} />\n                </PlusTabsPanel>\n              ))}\n            </PlusTabsPanels>\n          </PlusTabs>\n        </Section>\n      )}\n\n      {hasExamples && (\n        <Section size=\"page\">\n          <Text>Examples</Text>\n          <Text>Below is a collection of simple to complex examples.</Text>\n        </Section>\n      )}\n\n      {examples.map((example: any) => (\n        <Section key={example.key} size=\"page\">\n          <Text>{example.title}</Text>\n          <Markup>{example.readme}</Markup>\n          <Example value={example} />\n        </Section>\n      ))}\n    </Page>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}