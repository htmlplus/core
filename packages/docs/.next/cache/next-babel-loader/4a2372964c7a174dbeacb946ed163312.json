{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\link\\\\link.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport NextLink from 'next/link';\nimport { router } from '@app/services';\nconst Anchor = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const {\n    children\n  } = props,\n        args = _objectWithoutProperties(props, [\"children\"]);\n\n  return __jsx(\"a\", _extends({\n    ref: ref\n  }, args, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }), children);\n});\n_c2 = Anchor;\nexport const Link = props => {\n  _s();\n\n  const {\n    children,\n    params,\n    to\n  } = props,\n        attributes = _objectWithoutProperties(props, [\"children\", \"params\", \"to\"]);\n\n  const path = useMemo(() => router.path(to, params), [to, params]);\n\n  if (attributes.target === '_blank' && !attributes.rel) {\n    attributes.rel = 'noopener noreferrer';\n  }\n\n  if (!path) return __jsx(Anchor, _extends({\n    href: to\n  }, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }), children);\n  return __jsx(NextLink, {\n    href: path,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Anchor, _extends({}, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), children));\n};\n\n_s(Link, \"tVZ0VVCJ8bzlhGxkhG2pXz9vmR4=\");\n\n_c3 = Link;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Anchor$React.forwardRef\");\n$RefreshReg$(_c2, \"Anchor\");\n$RefreshReg$(_c3, \"Link\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/link/link.tsx"],"names":["React","useMemo","NextLink","router","Anchor","forwardRef","props","ref","children","args","Link","params","to","attributes","path","target","rel"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,eAAvB;AAGA,MAAMC,MAAqB,gBAAGJ,KAAK,CAACK,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAE7D,QAAM;AAAEC,IAAAA;AAAF,MAAwBF,KAA9B;AAAA,QAAqBG,IAArB,4BAA8BH,KAA9B;;AAEA,SACE;AAAG,IAAA,GAAG,EAAEC;AAAR,KAAiBE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,QADH,CADF;AAKD,CAT6B,CAA9B;MAAMJ,M;AAWN,OAAO,MAAMM,IAAyB,GAAIJ,KAAD,IAAW;AAAA;;AAElD,QAAM;AAAEE,IAAAA,QAAF;AAAYG,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAA0CN,KAAhD;AAAA,QAAiCO,UAAjC,4BAAgDP,KAAhD;;AAEA,QAAMQ,IAAI,GAAGb,OAAO,CAAC,MAAME,MAAM,CAACW,IAAP,CAAYF,EAAZ,EAAgBD,MAAhB,CAAP,EAAgC,CAACC,EAAD,EAAKD,MAAL,CAAhC,CAApB;;AAEA,MAAIE,UAAU,CAACE,MAAX,KAAsB,QAAtB,IAAkC,CAACF,UAAU,CAACG,GAAlD,EAAuD;AAErDH,IAAAA,UAAU,CAACG,GAAX,GAAiB,qBAAjB;AACD;;AAED,MAAI,CAACF,IAAL,EAAW,OAAO,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF;AAAd,KAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAmCL,QAAnC,CAAP;AAEX,SACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEM,IAAhB;AAAsB,IAAA,QAAQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,eAAYD,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyBL,QAAzB,CADF,CADF;AAKD,CAlBM;;GAAME,I;;MAAAA,I","sourcesContent":["import React, { useMemo } from 'react';\nimport NextLink from 'next/link';\nimport { router } from '@app/services';\nimport { LinkProps } from './link.types';\n\nconst Anchor: React.FC<any> = React.forwardRef((props, ref) => {\n\n  const { children, ...args } = props;\n\n  return (\n    <a ref={ref} {...args}>\n      {children}\n    </a>\n  )\n});\n\nexport const Link: React.FC<LinkProps> = (props) => {\n\n  const { children, params, to, ...attributes } = props;\n\n  const path = useMemo(() => router.path(to, params), [to, params]);\n\n  if (attributes.target === '_blank' && !attributes.rel) {\n\n    attributes.rel = 'noopener noreferrer';\n  }\n\n  if (!path) return <Anchor href={to} {...attributes}>{children}</Anchor>;\n\n  return (\n    <NextLink href={path} passHref>\n      <Anchor {...attributes}>{children}</Anchor>\n    </NextLink>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}