{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\parameters\\\\parameters.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Code, Markup, Text, PlusGrid, PlusGridItem } from 'components';\nimport { Utils } from 'utils';\nimport styles from './parameters.module.scss';\nexport const Parameters = ({\n  items = []\n}) => {\n  const hasDefault = !!items.filter(item => typeof item.default !== 'undefined').length;\n  const hasType = !!items.filter(item => typeof item.type !== 'undefined').length;\n  const hasValue = !!items.filter(item => typeof item.value !== 'undefined').length;\n  const classes = Utils.classes({\n    [styles.parameters]: true\n  });\n  return __jsx(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, items.map((item, index, items) => __jsx(PlusGrid, {\n    className: styles.item,\n    key: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(PlusGridItem, {\n    xs: \"grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    size: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Name\"), __jsx(Text, {\n    size: \"body\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, item.name)), __jsx(PlusGridItem, {\n    xs: \"12\",\n    sm: \"6\",\n    lg: \"grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, hasType && __jsx(Text, {\n    size: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \"Type\"), hasType && __jsx(Text, {\n    size: \"body\",\n    truncate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, item.type)), __jsx(PlusGridItem, {\n    className: styles.default,\n    xs: \"12\",\n    lg: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, hasDefault && __jsx(Text, {\n    size: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 28\n    }\n  }, \"Default\"), hasDefault && __jsx(Text, {\n    size: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }\n  }, item.default)), __jsx(PlusGridItem, {\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    size: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Description\"), __jsx(Text, {\n    size: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(Markup, {\n    ignoreParagraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, item.description))), hasValue && __jsx(PlusGridItem, {\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    size: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Value\"), __jsx(Code, {\n    language: \"js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, item.value)))));\n};\n_c = Parameters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Parameters\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/parameters/parameters.tsx"],"names":["React","Code","Markup","Text","PlusGrid","PlusGridItem","Utils","styles","Parameters","items","hasDefault","filter","item","default","length","hasType","type","hasValue","value","classes","parameters","map","index","name","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Code, Markup, Text, PlusGrid, PlusGridItem } from 'components';\nimport { Utils } from 'utils';\nimport { ParametersProps } from './parameters.types';\nimport styles from './parameters.module.scss';\n\nexport const Parameters: React.FC<ParametersProps> = ({ items = [] }) => {\n\n  const hasDefault = !!items.filter((item) => typeof item.default !== 'undefined').length;\n\n  const hasType = !!items.filter((item) => typeof item.type !== 'undefined').length;\n\n  const hasValue = !!items.filter((item) => typeof item.value !== 'undefined').length;\n\n  const classes = Utils.classes({\n    [styles.parameters]: true,\n  });\n\n  return (\n    <div className={classes}>\n      {items.map((item, index, items) => (\n        <PlusGrid className={styles.item} key={item.name}>\n          <PlusGridItem xs=\"grow\">\n            <Text size=\"body\">Name</Text>\n            <Text size=\"body\" color=\"error\">{item.name}</Text>\n          </PlusGridItem>\n          <PlusGridItem xs=\"12\" sm=\"6\" lg=\"grow\">\n            {hasType && <Text size=\"body\">Type</Text>}\n            {hasType && (\n              <Text size=\"body\" truncate>\n                {item.type}\n                {/* TODO */}\n              </Text>\n            )}\n          </PlusGridItem>\n          <PlusGridItem className={styles.default} xs=\"12\" lg=\"auto\">\n            {hasDefault && <Text size=\"body\">Default</Text>}\n            {hasDefault && <Text size=\"body\">{item.default}</Text>}\n          </PlusGridItem>\n          <PlusGridItem xs=\"12\">\n            <Text size=\"body\">Description</Text>\n            <Text size=\"body\">\n              <Markup ignoreParagraph>{item.description}</Markup>\n            </Text>\n          </PlusGridItem>\n          {hasValue && (\n            <PlusGridItem xs=\"12\">\n              <Text size=\"body\">Value</Text>\n              <Code language=\"js\">{item.value}</Code>\n            </PlusGridItem>\n          )}\n        </PlusGrid>\n      ))}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}