{"ast":null,"code":"import React from 'react';\nimport { Alert, Text } from 'components';\nvar mapper = {\n  p: {\n    name: Text,\n    props: {\n      size: 'body'\n    }\n  },\n  h1: {\n    name: Text,\n    props: {\n      size: 'header'\n    }\n  },\n  blockquote: {\n    name: Alert,\n    props: {\n      type: function type(element) {\n        var text = (element.textContent || '').trim();\n        var types = ['[ERROR]', '[INFO]', '[SUCCESS]', '[WARNING]'];\n\n        for (var i = 0; i < types.length; i++) {\n          var type = types[i];\n          if (text.indexOf(type) === -1) continue;\n          element.innerHTML = element.innerHTML.replace(type, '');\n          return type.replace(/\\[|\\]/g, '').toLowerCase();\n        }\n      }\n    }\n  }\n};\n\nvar convert = function convert(input) {\n  var map = mapper[input.localName] || {};\n  var name = map.name || input.localName;\n  var props = map.props || {};\n  props.key = Math.random();\n  var children = [];\n  Object.keys(props).forEach(function (key) {\n    if (typeof props[key] !== 'function') return null;\n    props[key] = props[key](input);\n  });\n  Array.from(input.children).map(function (child) {\n    return children.push(convert(child));\n  });\n  return /*#__PURE__*/React.createElement(name, props, children.length ? children : input.textContent);\n};\n\nexport var parser = function parser(input) {\n  // TODO\n  return 'markup'; // const value = Markup.parse((input || '').toString(), { headerIds: false });\n  // const wapper = document.createElement('div');\n  // wapper.innerHTML = value;\n  // return convert(wapper);\n};","map":null,"metadata":{},"sourceType":"module"}