{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useMemo } from 'react';\nimport NextLink from 'next/link';\nimport { router } from 'services';\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    href,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"href\", \"children\"]);\n\n  return __jsx(\"a\", _extends({\n    ref: ref,\n    href: href\n  }, props), children);\n});\nexport const Link = props => {\n  const {\n    to,\n    query,\n    params,\n    href,\n    children\n  } = props,\n        anchorProps = _objectWithoutProperties(props, [\"to\", \"query\", \"params\", \"href\", \"children\"]);\n\n  const route = useMemo(() => router.get(to), [to]);\n  const path = useMemo(() => router.path(to, params, query), [to, query, params]);\n  if (!route && !href) console.error(`Invalid route \"${to}\"`);\n\n  const {\n    className,\n    onClick\n  } = anchorProps,\n        nextProps = _objectWithoutProperties(anchorProps, [\"className\", \"onClick\"]);\n\n  if (route) {\n    return __jsx(NextLink, _extends({}, nextProps, {\n      href: route.path,\n      as: path,\n      passHref: true\n    }), __jsx(Anchor, anchorProps, children));\n  }\n\n  return __jsx(Anchor, _extends({\n    href: href\n  }, anchorProps), children);\n};","map":null,"metadata":{},"sourceType":"module"}