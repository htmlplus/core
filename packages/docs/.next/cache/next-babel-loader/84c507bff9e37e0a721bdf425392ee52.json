{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport { Code, PlusTabs, PlusTabsBar, PlusTabsTab, PlusTabsPanels, PlusTabsPanel } from 'components';\nimport { Utils } from 'utils';\nimport { ExampleLanguage } from './example.types';\nimport styles from './example.module.scss';\nexport var Example = function Example(_ref) {\n  var value = _ref.value;\n  var code = value.code || {};\n  var style = useMemo(function () {\n    var rules = code.style || '';\n    var className = \".ex-\".concat(value.key);\n\n    try {\n      var classLen = className.length,\n          char,\n          nextChar,\n          isAt,\n          isIn;\n      className += ' ';\n      rules = rules.replace(/\\/\\*(?:(?!\\*\\/)[\\s\\S])*\\*\\/|[\\r\\n\\t]+/g, '');\n      rules = rules.replace(/}(\\s*)@/g, '}@');\n      rules = rules.replace(/}(\\s*)}/g, '}}');\n\n      for (var i = 0; i < rules.length - 2; i++) {\n        char = rules[i];\n        nextChar = rules[i + 1];\n        if (char === '@') isAt = true;\n        if (!isAt && char === '{') isIn = true;\n        if (isIn && char === '}') isIn = false;\n\n        if (!isIn && nextChar !== '@' && nextChar !== '}' && (char === '}' || char === ',' || (char === '{' || char === ';') && isAt)) {\n          rules = rules.slice(0, i + 1) + className + rules.slice(i + 1);\n          i += classLen;\n          isAt = false;\n        }\n      }\n\n      ;\n      if (rules.indexOf(className) !== 0 && rules.indexOf('@') !== 0) rules = className + rules;\n      return rules;\n    } catch (_unused) {}\n  }, [value.key, code.style]);\n  var tabs = useMemo(function () {\n    var tabs = [];\n    Object.keys(code).map(function (key) {\n      var tab = {\n        key: key,\n        title: Utils.toCapitalCase(key)\n      };\n\n      if (key === 'preview') {\n        tab.content = function () {\n          return __jsx(\"div\", {\n            className: \"ex-\".concat(value.key)\n          }, code[key](), style && __jsx(\"style\", null, style));\n        };\n      } else {\n        var language = ExampleLanguage[key];\n\n        tab.content = function () {\n          return __jsx(Code, {\n            language: language\n          }, code[key]);\n        };\n      }\n\n      tabs.push(tab);\n    });\n    return tabs;\n  }, [code]);\n  var classes = Utils.classes(_defineProperty({}, styles.example, true));\n  return __jsx(\"div\", {\n    className: classes\n  }, (value.links || []).map(function (link) {\n    return __jsx(\"a\", {\n      key: link.key,\n      href: link.path,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, \"GO TO \", link.value);\n  }), __jsx(PlusTabs, {\n    value: \"preview\"\n  }, __jsx(PlusTabsBar, null, tabs.map(function (item) {\n    return __jsx(PlusTabsTab, {\n      key: item.key,\n      disabled: !item.content,\n      value: item.key\n    }, item.title);\n  })), __jsx(PlusTabsPanels, null, tabs.map(function (item) {\n    return __jsx(PlusTabsPanel, {\n      key: item.key,\n      value: item.key\n    }, item.content && item.content());\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}