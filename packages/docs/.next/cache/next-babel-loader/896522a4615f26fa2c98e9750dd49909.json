{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\code\\\\code.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport Prism from 'prismjs';\nimport { Utils } from 'utils';\nimport styles from './code.module.scss';\nexport const Code = ({\n  children,\n  language\n}) => {\n  _s();\n\n  const element = useRef(null);\n  useEffect(() => {\n    Prism.highlightAllUnder(element.current);\n  });\n  const classes = Utils.classes({\n    [styles.code]: true\n  });\n  const classesCode = `${true ? ' ' : ''}language-${language}`;\n  return __jsx(\"div\", {\n    ref: element,\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"pre\", {\n    className: classesCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"code\", {\n    className: classesCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, (children || '').toString())));\n};\n\n_s(Code, \"SpBhasJPVJrZGxeF9Xbi1q4ov4I=\");\n\n_c = Code;\n\nvar _c;\n\n$RefreshReg$(_c, \"Code\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/code/code.tsx"],"names":["React","useEffect","useRef","Prism","Utils","styles","Code","children","language","element","highlightAllUnder","current","classes","code","classesCode","toString"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,KAAT,QAAsB,OAAtB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAO,MAAMC,IAAyB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAAA;;AAEnE,QAAMC,OAAO,GAAGP,MAAM,CAAC,IAAD,CAAtB;AAEAD,EAAAA,SAAS,CACP,MAAM;AACJE,IAAAA,KAAK,CAACO,iBAAN,CAAwBD,OAAO,CAACE,OAAhC;AACD,GAHM,CAAT;AAMA,QAAMC,OAAO,GAAGR,KAAK,CAACQ,OAAN,CAAc;AAC5B,KAACP,MAAM,CAACQ,IAAR,GAAe;AADa,GAAd,CAAhB;AAIA,QAAMC,WAAW,GAAI,GAAE,OAAkB,GAAlB,GAAwB,EAAG,YAAWN,QAAS,EAAtE;AAEA,SACE;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,SAAS,EAAEG,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACP,QAAQ,IAAI,EAAb,EAAiBQ,QAAjB,EADH,CADF,CADF,CADF;AASD,CAzBM;;GAAMT,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Prism from 'prismjs';\nimport { Utils } from 'utils';\nimport { CodeProps } from './code.types';\nimport styles from './code.module.scss';\n\nexport const Code: React.FC<CodeProps> = ({ children, language }) => {\n\n  const element = useRef(null);\n\n  useEffect(\n    () => {\n      Prism.highlightAllUnder(element.current);\n    }\n  );\n\n  const classes = Utils.classes({\n    [styles.code]: true,\n  });\n\n  const classesCode = `${process.browser ? ' ' : ''}language-${language}`;\n\n  return (\n    <div ref={element} className={classes}>\n      <pre className={classesCode}>\n        <code className={classesCode}>\n          {(children || '').toString()}\n        </code>\n      </pre>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}