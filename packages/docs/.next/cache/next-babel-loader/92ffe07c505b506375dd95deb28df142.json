{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\pages\\\\component\\\\[key].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo, useState } from 'react';\nimport { Box, Example, Link, Markup, Page, Parameters, PlusGrid, PlusGridItem, PlusTabs, PlusTabsBar, PlusTabsPanel, PlusTabsPanels, PlusTabsTab, Section, Text, TocItem, Icon } from 'components';\nimport * as Constants from '../../../constants';\nimport { components } from 'data';\nimport { useStore } from 'hooks';\nimport { observer } from 'mobx-react-lite';\nimport { Framework, Utils } from 'utils'; // TODO\n\nimport items from '@htmlplus/examples'; // TODO\n\nconst ComponentDetails = observer(_c = _s(({\n  item\n}) => {\n  _s();\n\n  const store = useStore();\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(undefined);\n  const parent = item;\n  const children = useMemo(() => {\n    const result = [];\n    result.push(parent);\n    components.filter(component => !component.main && component.group === (parent === null || parent === void 0 ? void 0 : parent.group)).map(component => result.push(component));\n    return result;\n  }, [parent]);\n  const current = useMemo(() => {\n    return components.find(({\n      key\n    }) => key === (selected || (parent === null || parent === void 0 ? void 0 : parent.key)));\n  }, [parent, selected]);\n  const tabs = useMemo(() => {\n    const {\n      properties,\n      slots,\n      events,\n      styles,\n      methods\n    } = current;\n    return [{\n      key: 'properties',\n      value: 'Properties',\n      items: properties.map(property => _objectSpread(_objectSpread({}, property), {}, {\n        name: Framework.getPropertyName(store.ui.framework, property.name)\n      }))\n    }, {\n      key: 'slots',\n      value: 'Slots',\n      items: slots\n    }, {\n      key: 'events',\n      value: 'Events',\n      items: events.map(event => _objectSpread(_objectSpread({}, event), {}, {\n        value: event.detail,\n        name: Framework.getEventName(store.ui.framework, event.name)\n      }))\n    }, {\n      key: 'styles',\n      value: 'Styles',\n      items: styles\n    }, {\n      key: 'methods',\n      value: 'Methods',\n      items: methods.map(method => _objectSpread(_objectSpread({}, method), {}, {\n        value: method.signature\n      }))\n    }];\n  }, [current, store.ui.framework]); // TODO:\n\n  const examples = useMemo(() => {\n    const examples = [];\n    const current = items.find(example => example.key === parent.key);\n    parent.examples.map(example => {\n      var _example$codes$find;\n\n      example = JSON.parse(JSON.stringify(example));\n      const item = current.examples.find(x => x.key === example.key);\n      const preview = item.ports.preview.script;\n      const port = item.ports[store.ui.framework];\n      const style = ((_example$codes$find = example.codes.find(code => code.key === 'style')) === null || _example$codes$find === void 0 ? void 0 : _example$codes$find.value) || '';\n      example.code = _objectSpread(_objectSpread({\n        preview\n      }, port), {}, {\n        style\n      });\n      examples.push(example);\n    });\n    return examples;\n  }, [store.ui.framework, parent.key]);\n\n  const isDisabled = key => !current[key].length;\n\n  const isActive = key => (tabs.find(tab => !isDisabled(tab.key)) || {}).key === key;\n\n  const hasApi = !!tabs.filter(tab => isActive(tab.key)).length;\n  const hasExamples = !!examples.length;\n  const hasReadme = !!parent.readme;\n  if (!current) return null;\n  return __jsx(Page, {\n    layout: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    size: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, parent.title)), __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, __jsx(PlusGrid, {\n    alignContent: \"center\",\n    gutter: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, __jsx(PlusGridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    size: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Last update: \", new Date(parent.lastModified).toDateString(), \",\")), __jsx(PlusGridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    size: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Size: \", (parent.size / 1024).toFixed(2), \" KB\")), __jsx(PlusGridItem, {\n    xs: \"grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }), __jsx(PlusGridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: \"git\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })), __jsx(PlusGridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    size: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"github.com/htmlplus/.../components/\", parent.key))), __jsx(Box, {\n    mb: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  })), __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, __jsx(Markup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, parent.description)), hasReadme && __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, __jsx(Markup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, parent.readme)), __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    size: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, __jsx(TocItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"Usage\")), __jsx(Text, {\n    size: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"Follow the tutorials\\xA0\", __jsx(Link, {\n    to: `ROUTE:FRAMEWORK:${store.ui.framework.toUpperCase()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, \"here\"), \"\\xA0 to use the \", __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 22\n    }\n  }, Constants.PLATFORM_NAME), \" library on\\xA0\", __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, Utils.toCapitalCase(store.ui.framework), \"-based\"), \" projects.\")), hasApi && __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, __jsx(PlusGrid, {\n    \"align-items\": \"center\",\n    justify: \"between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, __jsx(PlusGridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    dense: true,\n    size: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, __jsx(TocItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, \"API\"))), __jsx(PlusGridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, __jsx(\"select\", {\n    value: selected,\n    disabled: children.length < 2,\n    onChange: event => setSelected(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, children.map(item => __jsx(\"option\", {\n    key: item.key,\n    value: item.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, Framework.getComponentName(store.ui.framework, item.tag)))))), __jsx(Text, {\n    size: \"paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, \"Select your desired component from below and see the available properties, slots, events, styles and methods.\"), __jsx(PlusTabs, {\n    value: \"properties\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, __jsx(PlusTabsBar, {\n    grow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, tabs.map(tab => __jsx(PlusTabsTab, {\n    key: tab.key,\n    disabled: isDisabled(tab.key),\n    value: tab.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, tab.value)))), __jsx(PlusTabsPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, tabs.map(tab => __jsx(PlusTabsPanel, {\n    key: tab.key,\n    value: tab.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, __jsx(Parameters, {\n    items: tab.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  })))))), hasExamples && __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    size: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, __jsx(TocItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \"Examples\")), __jsx(Text, {\n    size: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, \"Below is a collection of simple to complex examples.\")), examples.map(example => __jsx(Section, {\n    key: example.key,\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    size: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, __jsx(TocItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, example.title)), __jsx(Text, {\n    size: \"paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, __jsx(Markup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, example.readme)), __jsx(Example, {\n    value: example,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }))), __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }, __jsx(PlusGrid, {\n    justify: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, __jsx(PlusGridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, \"Last updated:\"), \" \", new Date(parent.lastModified).toDateString())))));\n}, \"9SJMBQIPAulBmfGeG0iwtRUvIv0=\", false, function () {\n  return [useStore];\n}));\n_c2 = ComponentDetails;\nexport var __N_SSG = true;\nexport default ComponentDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComponentDetails$observer\");\n$RefreshReg$(_c2, \"ComponentDetails\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/pages/component/[key].tsx"],"names":["React","useMemo","useState","Box","Example","Link","Markup","Page","Parameters","PlusGrid","PlusGridItem","PlusTabs","PlusTabsBar","PlusTabsPanel","PlusTabsPanels","PlusTabsTab","Section","Text","TocItem","Icon","Constants","components","useStore","observer","Framework","Utils","items","ComponentDetails","item","store","selected","setSelected","undefined","parent","children","result","push","filter","component","main","group","map","current","find","key","tabs","properties","slots","events","styles","methods","value","property","name","getPropertyName","ui","framework","event","detail","getEventName","method","signature","examples","example","JSON","parse","stringify","x","preview","ports","script","port","style","codes","code","isDisabled","length","isActive","tab","hasApi","hasExamples","hasReadme","readme","title","Date","lastModified","toDateString","size","toFixed","description","toUpperCase","PLATFORM_NAME","toCapitalCase","target","getComponentName","tag"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport {\n  Box,\n  Example,\n  Link,\n  Markup,\n  Page,\n  Parameters,\n  PlusGrid,\n  PlusGridItem,\n  PlusTabs,\n  PlusTabsBar,\n  PlusTabsPanel,\n  PlusTabsPanels,\n  PlusTabsTab,\n  Section,\n  Text,\n  TocItem,\n  Icon\n} from 'components';\nimport * as Constants from '../../../constants';\nimport { components } from 'data';\nimport { useStore } from 'hooks';\nimport { observer } from 'mobx-react-lite';\nimport { Framework, Utils } from 'utils';\n\n// TODO\nimport items from '@htmlplus/examples';\n\n// TODO\ninterface ComponentDetailsProps {\n  item: any;\n}\n\nconst ComponentDetails: React.FC<ComponentDetailsProps> = observer(({ item }) => {\n\n  const store = useStore();\n\n  const [selected, setSelected] = useState(undefined);\n\n  const parent = item;\n\n  const children: Array<any> = useMemo(\n    () => {\n\n      const result = [];\n\n      result.push(parent);\n\n      components\n        .filter((component) => !component.main && component.group === parent?.group)\n        .map((component) => result.push(component));\n\n      return result;\n    },\n    [parent]\n  );\n\n  const current: any = useMemo(\n    () => {\n      return components.find(({ key }) => key === (selected || parent?.key));\n    },\n    [parent, selected]\n  );\n\n  const tabs = useMemo(\n    () => {\n\n      const { properties, slots, events, styles, methods } = current;\n\n      return [\n        {\n          key: 'properties',\n          value: 'Properties',\n          items: properties.map((property) => ({\n            ...property,\n            name: Framework.getPropertyName(store.ui.framework, property.name)\n          })),\n        },\n        {\n          key: 'slots',\n          value: 'Slots',\n          items: slots,\n        },\n        {\n          key: 'events',\n          value: 'Events',\n          items: events.map((event: any) => ({\n            ...event,\n            value: event.detail,\n            name: Framework.getEventName(store.ui.framework, event.name)\n          })),\n        },\n        {\n          key: 'styles',\n          value: 'Styles',\n          items: styles,\n        },\n        {\n          key: 'methods',\n          value: 'Methods',\n          items: methods.map((method: any) => ({ ...method, value: method.signature })),\n        },\n      ];\n    },\n    [current, store.ui.framework]\n  );\n\n  // TODO:\n  const examples = useMemo(\n    () => {\n\n      const examples = [];\n\n      const current = items.find((example) => example.key === parent.key);\n\n      parent.examples.map((example) => {\n\n        example = JSON.parse(JSON.stringify(example));\n\n        const item = current.examples.find((x) => x.key === example.key);\n\n        const preview = item.ports.preview.script;\n\n        const port = item.ports[store.ui.framework];\n\n        const style = example.codes.find((code) => code.key === 'style')?.value || '';\n\n        example.code = { preview, ...port, style };\n\n        examples.push(example);\n      });\n\n      return examples;\n    },\n    [store.ui.framework, parent.key]\n  );\n\n  const isDisabled = (key: string) => !current[key].length;\n\n  const isActive = (key: string) => (tabs.find((tab) => !isDisabled(tab.key)) || {}).key === key;\n\n  const hasApi = !!tabs.filter((tab) => isActive(tab.key)).length;\n\n  const hasExamples = !!examples.length;\n\n  const hasReadme = !!parent.readme;\n\n  if (!current) return null;\n\n  return (\n    <Page layout=\"default\">\n\n      <Section size=\"page\">\n        <Text size=\"1\">\n          {parent.title}\n        </Text>\n      </Section>\n\n      <Section size=\"page\">\n        <PlusGrid alignContent=\"center\" gutter=\"xs\">\n          <PlusGridItem>\n            <Text size=\"label\">\n              Last update: {new Date(parent.lastModified).toDateString()},\n            </Text>\n          </PlusGridItem>\n          <PlusGridItem>\n            <Text size=\"label\">\n              Size: {(parent.size / 1024).toFixed(2)} KB\n            </Text>\n          </PlusGridItem>\n          <PlusGridItem xs=\"grow\" />\n          <PlusGridItem>\n            <Icon name=\"git\" />\n            {/* <img src=\"/assets/logo/github.png\" alt=\"github logo\" height=\"16px\" width=\"16px\" /> */}\n          </PlusGridItem>\n          <PlusGridItem>\n            <Text size=\"label\">github.com/htmlplus/.../components/{parent.key}</Text>\n          </PlusGridItem>\n        </PlusGrid>\n        <Box mb={16} />\n      </Section>\n\n      <Section size=\"page\">\n        <Markup>{parent.description}</Markup>\n      </Section>\n\n      {hasReadme && (\n        <Section size=\"page\">\n          <Markup>{parent.readme}</Markup>\n        </Section>\n      )}\n\n      <Section size=\"page\">\n        <Text size=\"2\">\n          <TocItem>Usage</TocItem>\n        </Text>\n        <Text size=\"body\">\n          Follow the tutorials&nbsp;\n          <Link to={`ROUTE:FRAMEWORK:${store.ui.framework.toUpperCase()}`}>here</Link>&nbsp;\n          to use the <code>{Constants.PLATFORM_NAME}</code> library on&nbsp;\n          <code>{Utils.toCapitalCase(store.ui.framework)}-based</code> projects.\n        </Text>\n      </Section>\n\n      {hasApi && (\n        <Section size=\"page\">\n          <PlusGrid align-items=\"center\" justify=\"between\">\n            <PlusGridItem>\n              <Text dense size=\"2\">\n                <TocItem>API</TocItem>\n              </Text>\n            </PlusGridItem>\n            <PlusGridItem>\n              <select\n                value={selected}\n                disabled={children.length < 2}\n                onChange={(event: any) => setSelected(event.target.value)}\n              >\n                {children.map((item) => (\n                  <option key={item.key} value={item.key}>\n                    {Framework.getComponentName(store.ui.framework, item.tag)}\n                  </option>\n                ))}\n              </select>\n            </PlusGridItem>\n          </PlusGrid>\n          <Text size=\"paragraph\">\n            Select your desired component from below and see the available properties, slots,\n            events, styles and methods.\n          </Text>\n          <PlusTabs value=\"properties\">\n            <PlusTabsBar grow>\n              {tabs.map((tab) => (\n                <PlusTabsTab key={tab.key} disabled={isDisabled(tab.key)} value={tab.key}>\n                  <Text>{tab.value}</Text>\n                </PlusTabsTab>\n              ))}\n            </PlusTabsBar>\n            <PlusTabsPanels>\n              {tabs.map((tab) => (\n                <PlusTabsPanel key={tab.key} value={tab.key}>\n                  <Parameters items={tab.items} />\n                </PlusTabsPanel>\n              ))}\n            </PlusTabsPanels>\n          </PlusTabs>\n        </Section>\n      )}\n\n      {hasExamples && (\n        <Section size=\"page\">\n          <Text size=\"2\">\n            <TocItem>\n              Examples\n            </TocItem>\n          </Text>\n          <Text size=\"body\">Below is a collection of simple to complex examples.</Text>\n        </Section>\n      )}\n\n      {examples.map((example: any) => (\n        <Section key={example.key} size=\"page\">\n          <Text size=\"3\">\n            <TocItem>\n              {example.title}\n            </TocItem>\n          </Text>\n          <Text size=\"paragraph\">\n            <Markup>{example.readme}</Markup>\n          </Text>\n          <Example value={example} />\n        </Section>\n      ))}\n\n      <Section size=\"page\">\n        <PlusGrid justify=\"end\">\n          <PlusGridItem>\n            <Text>\n              <b>Last updated:</b> {new Date(parent.lastModified).toDateString()}\n            </Text>\n          </PlusGridItem>\n        </PlusGrid>\n      </Section>\n      {/* size: {((parent.size || 1024) / 1024).toFixed(1)} KB */}\n    </Page>\n  );\n});\n\nexport default ComponentDetails;\n\nexport const getStaticProps = async ({ params }) => {\n\n  const { key } = params;\n\n  const component = components.find((item) => item.key === key);\n\n  return {\n    props: {\n      item: component,\n    },\n  };\n}\n\nexport const getStaticPaths = async () => {\n  return {\n    paths: components.map((item) => `/component/${item.key}`),\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}