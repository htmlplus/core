{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\toc\\\\toc-item\\\\toc-item.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport { Link } from 'components';\nimport { useStore } from 'hooks';\nimport { observer } from 'mobx-react-lite';\nimport { Utils } from 'utils';\nimport styles from './toc-item.module.scss';\nexport const TocItem = observer(_c = _s(({\n  children,\n  level\n}) => {\n  _s();\n\n  const store = useStore();\n  const element = useRef(null);\n  const key = Utils.toKebabCase((children || '').toString());\n\n  const onClick = event => {\n    event && event.preventDefault();\n    element.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'nearest'\n    });\n    setTimeout(() => window.location.hash = `#${key}`, 500);\n  };\n\n  useEffect(() => {\n    if (!level) {\n      const value = parseInt(element.current.parentElement.localName.replace('h', ''));\n      if (!isNaN(value)) level = value;\n    }\n\n    store.toc.add({\n      key,\n      level,\n      value: children,\n      scrollTo: onClick\n    });\n    return () => store.toc.remove(key);\n  }, []);\n  const classes = Utils.classes({\n    [styles['toc-item']]: true\n  });\n  return __jsx(\"div\", {\n    ref: element,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    className: classes,\n    href: '#' + key,\n    id: key,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, children));\n}, \"nNCl8mzfg3h4Ho+twROGgDyq2Wk=\", false, function () {\n  return [useStore];\n}));\n_c2 = TocItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TocItem$observer\");\n$RefreshReg$(_c2, \"TocItem\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/toc/toc-item/toc-item.tsx"],"names":["React","useEffect","useRef","Link","useStore","observer","Utils","styles","TocItem","children","level","store","element","key","toKebabCase","toString","onClick","event","preventDefault","current","scrollIntoView","behavior","block","inline","setTimeout","window","location","hash","value","parseInt","parentElement","localName","replace","isNaN","toc","add","scrollTo","remove","classes"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,KAAT,QAAsB,OAAtB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,MAAMC,OAA+B,GAAGH,QAAQ,SAAC,CAAC;AAAEI,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAAA;;AAE/E,QAAMC,KAAK,GAAGP,QAAQ,EAAtB;AAEA,QAAMQ,OAAO,GAAGV,MAAM,CAAC,IAAD,CAAtB;AAEA,QAAMW,GAAG,GAAGP,KAAK,CAACQ,WAAN,CAAkB,CAACL,QAAQ,IAAI,EAAb,EAAiBM,QAAjB,EAAlB,CAAZ;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzBA,IAAAA,KAAK,IAAIA,KAAK,CAACC,cAAN,EAAT;AAEAN,IAAAA,OAAO,CAACO,OAAR,CAAgBC,cAAhB,CAA+B;AAC7BC,MAAAA,QAAQ,EAAE,QADmB;AAE7BC,MAAAA,KAAK,EAAE,OAFsB;AAG7BC,MAAAA,MAAM,EAAE;AAHqB,KAA/B;AAMAC,IAAAA,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,IAAGd,GAAI,EAAtC,EAAyC,GAAzC,CAAV;AACD,GAXD;;AAaAZ,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAI,CAACS,KAAL,EAAY;AAEV,YAAMkB,KAAK,GAAGC,QAAQ,CAACjB,OAAO,CAACO,OAAR,CAAgBW,aAAhB,CAA8BC,SAA9B,CAAwCC,OAAxC,CAAgD,GAAhD,EAAqD,EAArD,CAAD,CAAtB;AAEA,UAAI,CAACC,KAAK,CAACL,KAAD,CAAV,EAAmBlB,KAAK,GAAGkB,KAAR;AACpB;;AAEDjB,IAAAA,KAAK,CAACuB,GAAN,CAAUC,GAAV,CAAc;AACZtB,MAAAA,GADY;AAEZH,MAAAA,KAFY;AAGZkB,MAAAA,KAAK,EAAEnB,QAHK;AAIZ2B,MAAAA,QAAQ,EAAEpB;AAJE,KAAd;AAOA,WAAO,MAAML,KAAK,CAACuB,GAAN,CAAUG,MAAV,CAAiBxB,GAAjB,CAAb;AACD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAMyB,OAAO,GAAGhC,KAAK,CAACgC,OAAN,CAAc;AAC5B,KAAC/B,MAAM,CAAC,UAAD,CAAP,GAAsB;AADM,GAAd,CAAhB;AAIA,SACE;AAAK,IAAA,GAAG,EAAEK,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,SAAS,EAAE0B,OADb;AAEE,IAAA,IAAI,EAAE,MAAMzB,GAFd;AAGE,IAAA,EAAE,EAAEA,GAHN;AAIE,IAAA,OAAO,EAAEG,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGP,QANH,CADF,CADF;AAYD,CAxDsD;AAAA,UAEvCL,QAFuC;AAAA,GAAhD;MAAMI,O","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Link } from 'components';\nimport { useStore } from 'hooks';\nimport { observer } from 'mobx-react-lite';\nimport { Utils } from 'utils';\nimport { TocItemProps } from './toc-item.types';\nimport styles from './toc-item.module.scss';\n\nexport const TocItem: React.FC<TocItemProps> = observer(({ children, level }) => {\n\n  const store = useStore();\n\n  const element = useRef(null);\n\n  const key = Utils.toKebabCase((children || '').toString());\n\n  const onClick = (event) => {\n\n    event && event.preventDefault();\n\n    element.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'nearest'\n    });\n\n    setTimeout(() => window.location.hash = `#${key}`, 500);\n  }\n\n  useEffect(() => {\n\n    if (!level) {\n\n      const value = parseInt(element.current.parentElement.localName.replace('h', ''));\n\n      if (!isNaN(value)) level = value;\n    }\n\n    store.toc.add({\n      key,\n      level,\n      value: children,\n      scrollTo: onClick\n    });\n\n    return () => store.toc.remove(key);\n  }, []);\n\n  const classes = Utils.classes({\n    [styles['toc-item']]: true\n  });\n\n  return (\n    <div ref={element}>\n      <Link\n        className={classes}\n        href={'#' + key}\n        id={key}\n        onClick={onClick}\n      >\n        {children}\n      </Link>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}