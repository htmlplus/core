{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\parameters\\\\parameters.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { HpGrid, HpGridItem } from '@htmlplus/react';\nimport { Code, Markup, Text } from 'components';\nimport { Utils } from 'utils';\nimport styles from './parameters.module.scss';\nexport const Parameters = ({\n  items = []\n}) => {\n  const hasDefault = !!items.filter(item => typeof item.default !== 'undefined').length;\n  const hasType = !!items.filter(item => typeof item.type !== 'undefined').length;\n  const hasValue = !!items.filter(item => typeof item.value !== 'undefined').length;\n  const classes = Utils.classes({\n    [styles.parameters]: true\n  });\n  return __jsx(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, items.map((item, index, items) => __jsx(HpGrid, {\n    key: item.name,\n    className: Utils.classes('last' && items.length - 1 === index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(HpGridItem, {\n    xs: \"12\",\n    sm: \"6\",\n    lg: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Name\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, item.name)), __jsx(HpGridItem, {\n    xs: \"12\",\n    sm: \"6\",\n    lg: \"grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, hasType && __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"Type\"), hasType && __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, item.type)), __jsx(HpGridItem, {\n    class: \"default\",\n    xs: \"12\",\n    lg: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, hasDefault && __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }\n  }, \"Default\"), hasDefault && __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 28\n    }\n  }, item.default)), __jsx(HpGridItem, {\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Description\"), __jsx(Markup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, item.description)), hasValue && __jsx(HpGridItem, {\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Value\"), __jsx(Code, {\n    language: \"js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, item.value)))));\n};","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/parameters/parameters.tsx"],"names":["React","HpGrid","HpGridItem","Code","Markup","Text","Utils","styles","Parameters","items","hasDefault","filter","item","default","length","hasType","type","hasValue","value","classes","parameters","map","index","name","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { HpGrid, HpGridItem } from '@htmlplus/react';\nimport { Code, Markup, Text } from 'components';\nimport { Utils } from 'utils';\nimport { ParametersProps } from './parameters.types';\nimport styles from './parameters.module.scss';\n\nexport const Parameters: React.FC<ParametersProps> = ({ items = [] }) => {\n\n  const hasDefault = !!items.filter((item) => typeof item.default !== 'undefined').length;\n\n  const hasType = !!items.filter((item) => typeof item.type !== 'undefined').length;\n\n  const hasValue = !!items.filter((item) => typeof item.value !== 'undefined').length;\n\n  const classes = Utils.classes({\n    [styles.parameters]: true,\n  });\n\n  return (\n    <div className={classes}>\n      {items.map((item, index, items) => (\n        <HpGrid key={item.name} className={Utils.classes('last' && items.length - 1 === index)}>\n          <HpGridItem xs=\"12\" sm=\"6\" lg=\"3\">\n            <Text>Name</Text>\n            <Text>{item.name}</Text>\n          </HpGridItem>\n          <HpGridItem xs=\"12\" sm=\"6\" lg=\"grow\">\n            {hasType && <Text>Type</Text>}\n            {hasType && <Text>{item.type}</Text>}\n          </HpGridItem>\n          <HpGridItem class=\"default\" xs=\"12\" lg=\"auto\">\n            {hasDefault && <Text>Default</Text>}\n            {hasDefault && <Text>{item.default}</Text>}\n          </HpGridItem>\n          <HpGridItem xs=\"12\">\n            <Text>Description</Text>\n            <Markup>{item.description}</Markup>\n          </HpGridItem>\n          {hasValue && (\n            <HpGridItem xs=\"12\">\n              <Text>Value</Text>\n              <Code language=\"js\">{item.value}</Code>\n            </HpGridItem>\n          )}\n        </HpGrid>\n      ))}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}