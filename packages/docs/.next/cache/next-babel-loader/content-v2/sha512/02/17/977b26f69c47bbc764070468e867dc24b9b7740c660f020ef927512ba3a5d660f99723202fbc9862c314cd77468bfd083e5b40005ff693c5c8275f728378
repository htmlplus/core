{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\pages\\\\component\\\\[key].tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Button, Example, Link, Markup, Page, Parameters, PlusGrid, PlusGridItem, PlusTabs, PlusTabsBar, PlusTabsPanel, PlusTabsPanels, PlusTabsTab, Section, Text, TocItem, Icon } from '@app/components';\nimport * as Constants from '@app/constants';\nimport { components } from '@app/data';\nimport { useStore } from '@app/hooks';\nimport * as Utils from '@app/utils'; // TODO\n\nimport items from '@htmlplus/examples'; // TODO\n\nconst ComponentDetails = observer(_c = _s(props => {\n  _s();\n\n  const {\n    item\n  } = props;\n  const store = useStore();\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(undefined);\n  const parent = item;\n  const children = useMemo(() => {\n    const result = [];\n    result.push(parent);\n    components.filter(component => !component.main && component.group === (parent === null || parent === void 0 ? void 0 : parent.group)).map(component => result.push(component));\n    return result;\n  }, [parent]);\n  const current = useMemo(() => {\n    return components.find(item => item.key === (selected || (parent === null || parent === void 0 ? void 0 : parent.key)));\n  }, [parent, selected]);\n  const tabs = useMemo(() => {\n    const {\n      properties,\n      slots,\n      events,\n      styles,\n      methods\n    } = current;\n    return [{\n      key: 'properties',\n      value: 'Properties',\n      items: properties.map(property => _objectSpread(_objectSpread({}, property), {}, {\n        name: Utils.getPropertyName(store.ui.framework, property.name)\n      }))\n    }, {\n      key: 'slots',\n      value: 'Slots',\n      items: slots\n    }, {\n      key: 'events',\n      value: 'Events',\n      items: events.map(event => _objectSpread(_objectSpread({}, event), {}, {\n        value: event.detail,\n        name: Utils.getEventName(store.ui.framework, event.name)\n      }))\n    }, {\n      key: 'styles',\n      value: 'Styles',\n      items: styles\n    }, {\n      key: 'methods',\n      value: 'Methods',\n      items: methods.map(method => _objectSpread(_objectSpread({}, method), {}, {\n        value: method.signature\n      }))\n    }];\n  }, [current, store.ui.framework]); // TODO:\n\n  const examples = useMemo(() => {\n    const examples = [];\n    const current = items.find(example => example.key === parent.key);\n    parent.examples.map(example => {\n      var _example$codes$find;\n\n      example = JSON.parse(JSON.stringify(example));\n      const item = current.examples.find(x => x.key === example.key);\n      const preview = item.ports.preview.script;\n      const port = item.ports[store.ui.framework];\n      const style = ((_example$codes$find = example.codes.find(code => code.key === 'style')) === null || _example$codes$find === void 0 ? void 0 : _example$codes$find.value) || '';\n      example.code = _objectSpread(_objectSpread({\n        preview\n      }, port), {}, {\n        style\n      });\n      examples.push(example);\n    });\n    return examples;\n  }, [store.ui.framework, parent.key]);\n\n  const isDisabled = key => !current[key].length;\n\n  const isActive = key => {\n    var _tabs$find;\n\n    return ((_tabs$find = tabs.find(tab => !isDisabled(tab.key))) === null || _tabs$find === void 0 ? void 0 : _tabs$find.key) === key;\n  };\n\n  const hasApi = !!tabs.filter(tab => isActive(tab.key)).length;\n  const hasExamples = !!examples.length;\n  const hasReadme = !!parent.readme;\n  if (!current) return null;\n  return /*#__PURE__*/_jsxDEV(Page, {\n    layout: \"default\",\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      size: \"page\",\n      children: /*#__PURE__*/_jsxDEV(PlusGrid, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(PlusGridItem, {\n          xs: \"grow\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            size: \"1\",\n            children: parent.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlusGridItem, {\n          xs: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(PlusGrid, {\n            justify: \"end\",\n            gutterX: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(PlusGridItem, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                target: \"_blank\",\n                to: `${Constants.SOCIAL_GITHUB_COMPONENTS}/${parent.key}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"github\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this), \"Github\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PlusGridItem, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                target: \"_blank\",\n                to: Constants.SOCIAL_GITHUB,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  outlined: true,\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"sandbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, this), \"Try It on Sandbox\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      size: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'justify'\n        },\n        children: /*#__PURE__*/_jsxDEV(Markup, {\n          children: parent.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), hasReadme && /*#__PURE__*/_jsxDEV(Section, {\n      size: \"page\",\n      children: /*#__PURE__*/_jsxDEV(Markup, {\n        children: parent.readme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      size: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"2\",\n        children: /*#__PURE__*/_jsxDEV(TocItem, {\n          children: \"Usage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"body\",\n        children: [\"Follow the tutorials\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          to: `ROUTE:FRAMEWORK:${store.ui.framework.toUpperCase()}`,\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), \"\\xA0 to use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: Constants.PLATFORM_NAME\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 22\n        }, this), \" library on\\xA0\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: [Utils.toCapitalCase(store.ui.framework), \"-based\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), \"\\xA0 projects.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), hasApi && /*#__PURE__*/_jsxDEV(Section, {\n      size: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(PlusGrid, {\n        \"align-items\": \"center\",\n        justify: \"between\",\n        children: [/*#__PURE__*/_jsxDEV(PlusGridItem, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            dense: true,\n            size: \"2\",\n            children: /*#__PURE__*/_jsxDEV(TocItem, {\n              children: \"API\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PlusGridItem, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selected,\n            disabled: children.length < 2,\n            onChange: event => setSelected(event.target.value),\n            children: children.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item.key,\n              children: Utils.getComponentName(store.ui.framework, item.tag)\n            }, item.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"paragraph\",\n        children: \"Select your desired component from below and see the available properties, slots, events, styles and methods.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlusTabs, {\n        value: \"properties\",\n        children: [/*#__PURE__*/_jsxDEV(PlusTabsBar, {\n          grow: true,\n          children: tabs.map(tab => /*#__PURE__*/_jsxDEV(PlusTabsTab, {\n            disabled: isDisabled(tab.key),\n            value: tab.key,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: tab.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)\n          }, tab.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PlusTabsPanels, {\n          children: tabs.map(tab => /*#__PURE__*/_jsxDEV(PlusTabsPanel, {\n            value: tab.key,\n            children: /*#__PURE__*/_jsxDEV(Parameters, {\n              items: tab.items\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)\n          }, tab.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), hasExamples && /*#__PURE__*/_jsxDEV(Section, {\n      size: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"2\",\n        children: /*#__PURE__*/_jsxDEV(TocItem, {\n          children: \"Examples\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"body\",\n        children: \"Below is a collection of simple to complex examples.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), examples.map(example => /*#__PURE__*/_jsxDEV(Section, {\n      size: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"3\",\n        children: /*#__PURE__*/_jsxDEV(TocItem, {\n          children: example.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"paragraph\",\n        children: /*#__PURE__*/_jsxDEV(Markup, {\n          children: example.readme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Example, {\n        value: example\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, example.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}, \"9SJMBQIPAulBmfGeG0iwtRUvIv0=\", false, function () {\n  return [useStore];\n}));\n_c2 = ComponentDetails;\nexport var __N_SSG = true;\nexport default ComponentDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComponentDetails$observer\");\n$RefreshReg$(_c2, \"ComponentDetails\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/pages/component/[key].tsx"],"names":["React","useMemo","useState","observer","Button","Example","Link","Markup","Page","Parameters","PlusGrid","PlusGridItem","PlusTabs","PlusTabsBar","PlusTabsPanel","PlusTabsPanels","PlusTabsTab","Section","Text","TocItem","Icon","Constants","components","useStore","Utils","items","ComponentDetails","props","item","store","selected","setSelected","undefined","parent","children","result","push","filter","component","main","group","map","current","find","key","tabs","properties","slots","events","styles","methods","value","property","name","getPropertyName","ui","framework","event","detail","getEventName","method","signature","examples","example","JSON","parse","stringify","x","preview","ports","script","port","style","codes","code","isDisabled","length","isActive","tab","hasApi","hasExamples","hasReadme","readme","title","SOCIAL_GITHUB_COMPONENTS","SOCIAL_GITHUB","textAlign","description","toUpperCase","PLATFORM_NAME","toCapitalCase","target","getComponentName","tag"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Button, Example, Link, Markup, Page, Parameters, PlusGrid, PlusGridItem, PlusTabs, PlusTabsBar, PlusTabsPanel, PlusTabsPanels, PlusTabsTab, Section, Text, TocItem, Icon, } from '@app/components';\nimport * as Constants from '@app/constants';\nimport { components } from '@app/data';\nimport { useStore } from '@app/hooks';\nimport * as Utils from '@app/utils';\n\n// TODO\nimport items from '@htmlplus/examples';\n\n// TODO\ninterface ComponentDetailsProps {\n  item: any;\n}\n\nconst ComponentDetails: React.FC<ComponentDetailsProps> = observer((props) => {\n\n  const { item } = props;\n\n  const store = useStore();\n\n  const [selected, setSelected] = useState(undefined);\n\n  const parent = item;\n\n  const children: Array<any> = useMemo(() => {\n\n    const result = [];\n\n    result.push(parent);\n\n    components\n      .filter((component) => !component.main && component.group === parent?.group)\n      .map((component) => result.push(component));\n\n    return result;\n  }, [parent]);\n\n  const current: any = useMemo(() => {\n    return components.find((item) => item.key === (selected || parent?.key));\n  }, [parent, selected]);\n\n  const tabs = useMemo(() => {\n\n    const { properties, slots, events, styles, methods } = current;\n\n    return [\n      {\n        key: 'properties',\n        value: 'Properties',\n        items: properties.map((property) => ({\n          ...property,\n          name: Utils.getPropertyName(store.ui.framework, property.name),\n        })),\n      },\n      {\n        key: 'slots',\n        value: 'Slots',\n        items: slots,\n      },\n      {\n        key: 'events',\n        value: 'Events',\n        items: events.map((event: any) => ({\n          ...event,\n          value: event.detail,\n          name: Utils.getEventName(store.ui.framework, event.name),\n        })),\n      },\n      {\n        key: 'styles',\n        value: 'Styles',\n        items: styles,\n      },\n      {\n        key: 'methods',\n        value: 'Methods',\n        items: methods.map((method: any) => ({\n          ...method,\n          value: method.signature,\n        })),\n      },\n    ];\n  }, [current, store.ui.framework]);\n\n  // TODO:\n  const examples = useMemo(() => {\n\n    const examples = [];\n\n    const current = items.find((example) => example.key === parent.key);\n\n    parent.examples.map((example) => {\n\n      example = JSON.parse(JSON.stringify(example));\n\n      const item = current.examples.find((x) => x.key === example.key);\n\n      const preview = item.ports.preview.script;\n\n      const port = item.ports[store.ui.framework];\n\n      const style = example.codes.find((code) => code.key === 'style')?.value || '';\n\n      example.code = { preview, ...port, style };\n\n      examples.push(example);\n    });\n\n    return examples;\n  }, [store.ui.framework, parent.key]);\n\n  const isDisabled = (key: string) => !current[key].length;\n\n  const isActive = (key: string) => tabs.find((tab) => !isDisabled(tab.key))?.key === key;\n\n  const hasApi = !!tabs.filter((tab) => isActive(tab.key)).length;\n\n  const hasExamples = !!examples.length;\n\n  const hasReadme = !!parent.readme;\n\n  if (!current) return null;\n\n  return (\n    <Page layout=\"default\">\n\n      <Section size=\"page\">\n        <PlusGrid alignItems=\"center\">\n          <PlusGridItem xs=\"grow\">\n            <Text size=\"1\">{parent.title}</Text>\n          </PlusGridItem>\n          <PlusGridItem xs=\"auto\">\n            <PlusGrid justify=\"end\" gutterX=\"sm\">\n              <PlusGridItem>\n                <Link target=\"_blank\" to={`${Constants.SOCIAL_GITHUB_COMPONENTS}/${parent.key}`}>\n                  <Button size=\"sm\">\n                    <Icon name=\"github\" />\n                    Github\n                  </Button>\n                </Link>\n              </PlusGridItem>\n              <PlusGridItem>\n                <Link target=\"_blank\" to={Constants.SOCIAL_GITHUB}>\n                  <Button size=\"sm\" outlined>\n                    <Icon name=\"sandbox\" />\n                    Try It on Sandbox\n                  </Button>\n                </Link>\n              </PlusGridItem>\n            </PlusGrid>\n          </PlusGridItem>\n        </PlusGrid>\n      </Section>\n\n      <Section size=\"page\">\n        {/* TODO */}\n        <div style={{ textAlign: 'justify' }}>\n          <Markup>{parent.description}</Markup>\n        </div>\n      </Section>\n\n      {hasReadme && (\n        <Section size=\"page\">\n          <Markup>{parent.readme}</Markup>\n        </Section>\n      )}\n\n      <Section size=\"page\">\n        <Text size=\"2\">\n          <TocItem>Usage</TocItem>\n        </Text>\n        <Text size=\"body\">\n          Follow the tutorials&nbsp;\n          <Link to={`ROUTE:FRAMEWORK:${store.ui.framework.toUpperCase()}`}>\n            here\n          </Link>\n          &nbsp;\n          to use the <code>{Constants.PLATFORM_NAME}</code> library on&nbsp;\n          <code>{Utils.toCapitalCase(store.ui.framework)}-based</code>\n          &nbsp;\n          projects.\n        </Text>\n      </Section>\n\n      {hasApi && (\n        <Section size=\"page\">\n          <PlusGrid align-items=\"center\" justify=\"between\">\n            <PlusGridItem>\n              <Text dense size=\"2\">\n                <TocItem>API</TocItem>\n              </Text>\n            </PlusGridItem>\n            <PlusGridItem>\n              <select\n                value={selected}\n                disabled={children.length < 2}\n                onChange={(event: any) => setSelected(event.target.value)}\n              >\n                {children.map((item) => (\n                  <option key={item.key} value={item.key}>\n                    {Utils.getComponentName(store.ui.framework, item.tag)}\n                  </option>\n                ))}\n              </select>\n            </PlusGridItem>\n          </PlusGrid>\n          <Text size=\"paragraph\">\n            Select your desired component from below and see the available properties, slots, events, styles and methods.\n          </Text>\n          <PlusTabs value=\"properties\">\n            <PlusTabsBar grow>\n              {tabs.map((tab) => (\n                <PlusTabsTab\n                  key={tab.key}\n                  disabled={isDisabled(tab.key)}\n                  value={tab.key}\n                >\n                  <Text>{tab.value}</Text>\n                </PlusTabsTab>\n              ))}\n            </PlusTabsBar>\n            <PlusTabsPanels>\n              {tabs.map((tab) => (\n                <PlusTabsPanel key={tab.key} value={tab.key}>\n                  <Parameters items={tab.items} />\n                </PlusTabsPanel>\n              ))}\n            </PlusTabsPanels>\n          </PlusTabs>\n        </Section>\n      )}\n\n      {hasExamples && (\n        <Section size=\"page\">\n          <Text size=\"2\">\n            <TocItem>Examples</TocItem>\n          </Text>\n          <Text size=\"body\">\n            Below is a collection of simple to complex examples.\n          </Text>\n        </Section>\n      )}\n\n      {examples.map((example: any) => (\n        <Section key={example.key} size=\"page\">\n          <Text size=\"3\">\n            <TocItem>{example.title}</TocItem>\n          </Text>\n          <Text size=\"paragraph\">\n            <Markup>{example.readme}</Markup>\n          </Text>\n          <Example value={example} />\n        </Section>\n      ))}\n\n      {/* TODO */}\n      {/* <Section size=\"page\">\n        <Text size=\"2\">\n          <TocItem>Global Config</TocItem>\n        </Text>\n        <Text size=\"body\">\n          Goto <Link to={''}> Global Config </Link> to more information\n        </Text>\n      </Section> */}\n\n      {/* \n      <PlusGrid justify=\"between\">\n        <PlusGridItem>\n          <Text size=\"label\">\n            Last update: {new Date(parent.lastModified).toDateString()}\n          </Text>\n        </PlusGridItem>\n        <PlusGridItem>\n          <Text size=\"label\">\n            Component Size: {((parent.size / 1024) || 1).toFixed(2)} KB\n              </Text>\n        </PlusGridItem>\n      </PlusGrid> */}\n    </Page>\n  );\n}\n);\n\nexport default ComponentDetails;\n\nexport const getStaticProps = async ({ params }) => {\n\n  const { key } = params;\n\n  const component = components.find((item) => item.key === key);\n\n  return {\n    props: {\n      item: component,\n    },\n  };\n};\n\nexport const getStaticPaths = async () => {\n  return {\n    paths: components.map((item) => `/component/${item.key}`),\n    fallback: false,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}