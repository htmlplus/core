{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\sidebar\\\\sidebar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// TODO\nimport React, { useMemo, useState } from 'react';\nimport { Link, Text } from '@app/components';\nimport { useRouter } from '@app/hooks';\nimport * as Utils from '@app/utils';\nimport { Icon } from '../icon';\nexport const Sidebar = props => {\n  const {\n    items = []\n  } = props;\n  const router = useRouter();\n  const {\n    0: current,\n    1: setCurrent\n  } = useState([]);\n  const actives = useMemo(() => {\n    const run = (input, ...parent) => {\n      if (Array.isArray(input)) {\n        let result = [];\n        input.map(item => {\n          const items = run(item, ...parent);\n          if (items.length) result = items;\n        });\n        return result;\n      } else if (input.items) {\n        return run(input.items, input, ...parent);\n      } else {\n        const route = input.route;\n        if (!route) return [];\n        if (router.isActive(route.to, route.params)) return [input, ...parent];\n        return [];\n      }\n    };\n\n    const result = run(items, null).filter(item => item);\n    setCurrent(result);\n    return result;\n  }, [items, router.asPath]);\n\n  const isActive = item => actives.some(active => item === active);\n\n  const isExpand = parent => {\n    if (!parent) return true;\n    return current.some(item => item === parent);\n  };\n\n  const toggle = (item, ...parents) => {\n    const indexOf = current.findIndex(x => x === item);\n\n    if (indexOf !== -1) {\n      setCurrent([...current.slice(indexOf + 1)]);\n    } else {\n      setCurrent([item, ...parents]);\n    }\n  };\n\n  const menu = (items, level = 0, ...parents) => {\n    const isCollapsed = !isExpand(parents[0]);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: Utils.classes({\n        ['menu']: true,\n        [`level-${level}`]: true,\n        ['collapsed']: false // TODO isCollapsed\n\n      }),\n      children: items.map(item => {\n        var _item$items;\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: Utils.classes({\n            'item': true,\n            'active': isActive(item)\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            size: \"body\",\n            children: [item.route && /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, item.route), {}, {\n              children: item.title\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), !item.route &&\n            /*#__PURE__*/\n            // TODO\n            _jsxDEV(\"div\", {\n              style: {\n                fontWeight: 400\n              },\n              onClick: () => toggle(item, ...parents),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [item.icon && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: item.icon,\n                    size: \"sm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 25\n                  }, this), \"\\xA0\"]\n                }, void 0, true), item.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), !!((_item$items = item.items) !== null && _item$items !== void 0 && _item$items.length) && menu(item.items, level + 1, item, ...parents)]\n        }, item.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n\n  const classes = Utils.classes('sidebar');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: menu(items)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/sidebar/sidebar.tsx"],"names":["React","useMemo","useState","Link","Text","useRouter","Utils","Icon","Sidebar","props","items","router","current","setCurrent","actives","run","input","parent","Array","isArray","result","map","item","length","route","isActive","to","params","filter","asPath","some","active","isExpand","toggle","parents","indexOf","findIndex","x","slice","menu","level","isCollapsed","classes","title","fontWeight","icon"],"mappings":"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","sourcesContent":["// TODO\nimport React, { useMemo, useState } from 'react';\nimport { Link, Text } from '@app/components';\nimport { useRouter } from '@app/hooks';\nimport * as Utils from '@app/utils';\nimport { SidebarItem, SidebarProps } from './sidebar.types';\nimport { Icon } from '../icon';\n\nexport const Sidebar: React.FC<SidebarProps> = (props) => {\n\n  const { items = [] } = props;\n\n  const router = useRouter();\n\n  const [current, setCurrent] = useState([]);\n\n  const actives = useMemo(\n    () => {\n\n      const run = (input, ...parent) => {\n\n        if (Array.isArray(input)) {\n\n          let result = [];\n\n          input.map((item) => {\n\n            const items = run(item, ...parent);\n\n            if (items.length) result = items;\n          });\n\n          return result;\n        }\n        else if (input.items) {\n\n          return run(input.items, input, ...parent);\n        }\n        else {\n\n          const route = input.route;\n\n          if (!route) return [];\n\n          if (router.isActive(route.to, route.params)) return [input, ...parent];\n\n          return [];\n        }\n      }\n\n      const result = run(items, null).filter((item) => item);\n\n      setCurrent(result);\n\n      return result;\n    },\n    [items, router.asPath]\n  );\n\n  const isActive = (item) => actives.some((active) => item === active);\n\n  const isExpand = (parent) => {\n\n    if (!parent) return true;\n\n    return current.some((item) => item === parent);\n  }\n\n  const toggle = (item, ...parents) => {\n\n    const indexOf = current.findIndex((x) => x === item);\n\n    if (indexOf !== -1) {\n\n      setCurrent([...current.slice(indexOf + 1)]);\n    }\n    else {\n\n      setCurrent([item, ...parents]);\n    }\n  }\n\n  const menu = (items: Array<SidebarItem>, level = 0, ...parents) => {\n\n    const isCollapsed = !isExpand(parents[0]);\n\n    return (\n      <ul\n        className={Utils.classes({\n          ['menu']: true,\n          [`level-${level}`]: true,\n          ['collapsed']: false // TODO isCollapsed\n        })}\n      >\n        {items.map((item) => (\n          <li\n            key={item.title}\n            className={Utils.classes({\n              'item': true,\n              'active': isActive(item)\n            })}\n          >\n            <Text size=\"body\">\n              {item.route && (\n                <Link {...item.route}>{item.title}</Link>\n              )}\n              {!item.route && (\n                // TODO\n                <div style={{ fontWeight: 400 }} onClick={() => toggle(item, ...parents)}>\n                  <span>\n                    {item.icon && (\n                      <>\n                        <Icon name={item.icon as any} size=\"sm\" />\n                        &nbsp;\n                      </>\n                    )}\n                    {item.title}\n                  </span>\n                  {/* TODO */}\n                  {/* <Icon name={isExpand(item) ? 'animations' : 'aspect-ratio'} /> */}\n                </div>\n              )}\n            </Text>\n            {!!item.items?.length && menu(item.items, level + 1, item, ...parents)}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const classes = Utils.classes(\n    'sidebar'\n  );\n\n  return (\n    <div className={classes}>\n      {menu(items)}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}