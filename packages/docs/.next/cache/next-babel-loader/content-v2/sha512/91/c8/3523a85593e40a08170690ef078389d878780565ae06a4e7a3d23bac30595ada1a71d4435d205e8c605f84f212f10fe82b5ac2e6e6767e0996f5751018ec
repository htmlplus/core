{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\code\\\\code.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-jsx';\nimport { Button, Icon } from '@app/components';\nimport * as Utils from '@app/utils';\nexport const Code = props => {\n  _s();\n\n  const {\n    children,\n    copy = true,\n    language\n  } = props;\n  const element = useRef(null);\n  const content = (children || '').toString();\n  useEffect(() => Prism.highlightAllUnder(element.current));\n  const classesCode = `${true ? ' ' : ''}language-${language}`;\n  const classes = Utils.classes('code');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: element,\n    className: classes,\n    children: [copy && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: true,\n        onClick: () => Utils.copyToClipboard(content),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: classesCode,\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        className: classesCode,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Code, \"SpBhasJPVJrZGxeF9Xbi1q4ov4I=\");\n\n_c = Code;\n\nvar _c;\n\n$RefreshReg$(_c, \"Code\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/code/code.tsx"],"names":["React","useEffect","useRef","Prism","Button","Icon","Utils","Code","props","children","copy","language","element","content","toString","highlightAllUnder","current","classesCode","classes","copyToClipboard"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,8BAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,YAAvB;AAGA,OAAO,MAAMC,IAAyB,GAAIC,KAAD,IAAW;AAAA;;AAElD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAI,GAAG,IAAnB;AAAyBC,IAAAA;AAAzB,MAAsCH,KAA5C;AAEA,QAAMI,OAAO,GAAGV,MAAM,CAAC,IAAD,CAAtB;AAEA,QAAMW,OAAO,GAAG,CAACJ,QAAQ,IAAI,EAAb,EAAiBK,QAAjB,EAAhB;AAEAb,EAAAA,SAAS,CAAC,MAAME,KAAK,CAACY,iBAAN,CAAwBH,OAAO,CAACI,OAAhC,CAAP,CAAT;AAEA,QAAMC,WAAW,GAAI,GAAE,OAAkB,GAAlB,GAAwB,EAAG,YAAWN,QAAS,EAAtE;AAEA,QAAMO,OAAO,GAAGZ,KAAK,CAACY,OAAN,CACd,MADc,CAAhB;AAIA,sBACE;AAAK,IAAA,GAAG,EAAEN,OAAV;AAAmB,IAAA,SAAS,EAAEM,OAA9B;AAAA,eACGR,IAAI,iBACH;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,EAAE,MAAMJ,KAAK,CAACa,eAAN,CAAsBN,OAAtB,CAA5B;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE;AAAK,MAAA,SAAS,EAAEI,WAAhB;AAAA,6BACE;AAAM,QAAA,SAAS,EAAEA,WAAjB;AAAA,kBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAhCM;;GAAMN,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-jsx';\nimport { Button, Icon } from '@app/components';\nimport * as Utils from '@app/utils';\nimport { CodeProps } from './code.types';\n\nexport const Code: React.FC<CodeProps> = (props) => {\n\n  const { children, copy = true, language } = props;\n\n  const element = useRef(null);\n\n  const content = (children || '').toString();\n\n  useEffect(() => Prism.highlightAllUnder(element.current));\n\n  const classesCode = `${process.browser ? ' ' : ''}language-${language}`;\n\n  const classes = Utils.classes(\n    'code'\n  );\n\n  return (\n    <div ref={element} className={classes}>\n      {copy && (\n        <div className=\"button\">\n          <Button icon onClick={() => Utils.copyToClipboard(content)}>\n            <Icon name=\"copy\" />\n          </Button>\n        </div>\n      )}\n      <pre className={classesCode}>\n        <code className={classesCode}>\n          {content}\n        </code>\n      </pre>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}