{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\toc\\\\toc-item\\\\toc-item.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Link } from '@app/components';\nimport { useStore } from '@app/hooks';\nimport * as Utils from '@app/utils';\nexport const TocItem = observer(props => {\n  var _children$, _children$$props;\n\n  const {\n    children,\n    level\n  } = props;\n  const store = useStore();\n  const element = useRef(null);\n  const key = Utils.toKebabCase((((_children$ = children[0]) === null || _children$ === void 0 ? void 0 : (_children$$props = _children$.props) === null || _children$$props === void 0 ? void 0 : _children$$props.children) || children || '').toString());\n\n  const scrollTo = () => {\n    if (!element.current) return;\n    element.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'nearest'\n    });\n  };\n\n  const onClick = event => {\n    event && event.preventDefault();\n    scrollTo();\n    setTimeout(() => window.location.hash = `#${key}`, 500);\n  };\n\n  useEffect(() => {\n    let depth = level;\n\n    if (!depth) {\n      const value = parseInt(element.current.parentElement.localName.replace('h', ''));\n      if (!isNaN(value)) depth = value;\n    }\n\n    store.toc.add({\n      key,\n      level: depth,\n      value: children,\n      scrollTo: onClick\n    });\n    const observer = new IntersectionObserver(entries => store.toc.update(key, entries[0]));\n    observer.observe(element.current);\n    return () => {\n      observer.disconnect();\n      store.toc.remove(key);\n    };\n  }, []);\n  const classes = Utils.classes('toc-item');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: element,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      className: classes,\n      to: `#${key}`,\n      onClick: onClick,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n});","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/toc/toc-item/toc-item.tsx"],"names":["React","useEffect","useRef","observer","Link","useStore","Utils","TocItem","props","children","level","store","element","key","toKebabCase","toString","scrollTo","current","scrollIntoView","behavior","block","inline","onClick","event","preventDefault","setTimeout","window","location","hash","depth","value","parseInt","parentElement","localName","replace","isNaN","toc","add","IntersectionObserver","entries","update","observe","disconnect","remove","classes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,YAAvB;AAGA,OAAO,MAAMC,OAA+B,GAAGJ,QAAQ,CAAEK,KAAD,IAAW;AAAA;;AAEjE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBF,KAA5B;AAEA,QAAMG,KAAK,GAAGN,QAAQ,EAAtB;AAEA,QAAMO,OAAO,GAAGV,MAAM,CAAC,IAAD,CAAtB;AAEA,QAAMW,GAAG,GAAGP,KAAK,CAACQ,WAAN,CAAkB,CAAC,eAAAL,QAAQ,CAAC,CAAD,CAAR,8EAAaD,KAAb,sEAAoBC,QAApB,KAAgCA,QAAhC,IAA4C,EAA7C,EAAiDM,QAAjD,EAAlB,CAAZ;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AAErB,QAAI,CAACJ,OAAO,CAACK,OAAb,EAAsB;AAEtBL,IAAAA,OAAO,CAACK,OAAR,CAAgBC,cAAhB,CAA+B;AAC7BC,MAAAA,QAAQ,EAAE,QADmB;AAE7BC,MAAAA,KAAK,EAAE,OAFsB;AAG7BC,MAAAA,MAAM,EAAE;AAHqB,KAA/B;AAKD,GATD;;AAWA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzBA,IAAAA,KAAK,IAAIA,KAAK,CAACC,cAAN,EAAT;AAEAR,IAAAA,QAAQ;AAERS,IAAAA,UAAU,CAAC,MAAMC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,IAAGf,GAAI,EAAtC,EAAyC,GAAzC,CAAV;AACD,GAPD;;AASAZ,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAI4B,KAAK,GAAGnB,KAAZ;;AAEA,QAAI,CAACmB,KAAL,EAAY;AAEV,YAAMC,KAAK,GAAGC,QAAQ,CAACnB,OAAO,CAACK,OAAR,CAAgBe,aAAhB,CAA8BC,SAA9B,CAAwCC,OAAxC,CAAgD,GAAhD,EAAqD,EAArD,CAAD,CAAtB;AAEA,UAAI,CAACC,KAAK,CAACL,KAAD,CAAV,EAAmBD,KAAK,GAAGC,KAAR;AACpB;;AAEDnB,IAAAA,KAAK,CAACyB,GAAN,CAAUC,GAAV,CAAc;AACZxB,MAAAA,GADY;AAEZH,MAAAA,KAAK,EAAEmB,KAFK;AAGZC,MAAAA,KAAK,EAAErB,QAHK;AAIZO,MAAAA,QAAQ,EAAEM;AAJE,KAAd;AAOA,UAAMnB,QAAQ,GAAG,IAAImC,oBAAJ,CAA0BC,OAAD,IAAa5B,KAAK,CAACyB,GAAN,CAAUI,MAAV,CAAiB3B,GAAjB,EAAsB0B,OAAO,CAAC,CAAD,CAA7B,CAAtC,CAAjB;AAEApC,IAAAA,QAAQ,CAACsC,OAAT,CAAiB7B,OAAO,CAACK,OAAzB;AAEA,WAAO,MAAM;AAEXd,MAAAA,QAAQ,CAACuC,UAAT;AAEA/B,MAAAA,KAAK,CAACyB,GAAN,CAAUO,MAAV,CAAiB9B,GAAjB;AACD,KALD;AAMD,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,QAAM+B,OAAO,GAAGtC,KAAK,CAACsC,OAAN,CACd,UADc,CAAhB;AAIA,sBACE;AAAK,IAAA,GAAG,EAAEhC,OAAV;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,SAAS,EAAEgC,OADb;AAEE,MAAA,EAAE,EAAG,IAAG/B,GAAI,EAFd;AAGE,MAAA,OAAO,EAAES,OAHX;AAAA,gBAKGb;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3EsD,CAAhD","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Link } from '@app/components';\nimport { useStore } from '@app/hooks';\nimport * as Utils from '@app/utils';\nimport { TocItemProps } from './toc-item.types';\n\nexport const TocItem: React.FC<TocItemProps> = observer((props) => {\n\n  const { children, level } = props;\n\n  const store = useStore();\n\n  const element = useRef(null);\n\n  const key = Utils.toKebabCase((children[0]?.props?.children || children || '').toString());\n\n  const scrollTo = () => {\n\n    if (!element.current) return;\n\n    element.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'nearest'\n    });\n  }\n\n  const onClick = (event) => {\n\n    event && event.preventDefault();\n\n    scrollTo();\n\n    setTimeout(() => window.location.hash = `#${key}`, 500);\n  }\n\n  useEffect(() => {\n\n    let depth = level;\n\n    if (!depth) {\n\n      const value = parseInt(element.current.parentElement.localName.replace('h', ''));\n\n      if (!isNaN(value)) depth = value;\n    }\n\n    store.toc.add({\n      key,\n      level: depth,\n      value: children,\n      scrollTo: onClick\n    });\n\n    const observer = new IntersectionObserver((entries) => store.toc.update(key, entries[0]));\n\n    observer.observe(element.current);\n\n    return () => {\n\n      observer.disconnect();\n\n      store.toc.remove(key);\n    }\n  }, []);\n\n  const classes = Utils.classes(\n    'toc-item'\n  );\n\n  return (\n    <div ref={element}>\n      <Link\n        className={classes}\n        to={`#${key}`}\n        onClick={onClick}\n      >\n        {children}\n      </Link>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}