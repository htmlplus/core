{"ast":null,"code":"import * as Utils from '@app/utils';\nexport const classes = (...input) => {\n  const names = [];\n\n  for (let i = 0; i < input.length; i++) {\n    const element = input[i];\n    const type = Object.prototype.toString.call(element);\n\n    switch (type) {\n      case '[object Array]':\n        names.push(classes(element));\n        break;\n\n      case '[object Object]':\n        const keys = Object.keys(element);\n\n        for (let i = 0; i < keys.length; i++) {\n          let key = keys[i];\n          const value = element[key];\n          key = Utils.toKebabCase(key);\n          const type = Object.prototype.toString.call(value);\n\n          switch (type) {\n            case '[object Boolean]':\n              value && names.push(`${key}`);\n              break;\n\n            case '[object Number]':\n              names.push(`${key}-${value}`);\n              break;\n\n            case '[object String]':\n              switch (value) {\n                case '':\n                case 'true':\n                  names.push(`${key}`);\n                  break;\n\n                case 'false':\n                  break;\n\n                default:\n                  names.push(`${key}-${value}`);\n                  break;\n              }\n\n              break;\n          }\n        }\n\n        break;\n\n      case '[object String]':\n        names.push(element);\n        break;\n    }\n  }\n\n  return names.join(' ');\n};","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/utils/classes.ts"],"names":["Utils","classes","input","names","i","length","element","type","Object","prototype","toString","call","push","keys","key","value","toKebabCase","join"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,YAAvB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC,GAAGC,KAAJ,KAAsB;AAEzC,QAAMC,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAEnC,UAAME,OAAO,GAAGJ,KAAK,CAACE,CAAD,CAArB;AAEA,UAAMG,IAAI,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,OAA/B,CAAb;;AAEA,YAAQC,IAAR;AAEI,WAAK,gBAAL;AACIJ,QAAAA,KAAK,CAACS,IAAN,CAAWX,OAAO,CAACK,OAAD,CAAlB;AACA;;AAEJ,WAAK,iBAAL;AAEI,cAAMO,IAAI,GAAGL,MAAM,CAACK,IAAP,CAAYP,OAAZ,CAAb;;AAEA,aAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,IAAI,CAACR,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAElC,cAAIU,GAAG,GAAGD,IAAI,CAACT,CAAD,CAAd;AAEA,gBAAMW,KAAK,GAAGT,OAAO,CAACQ,GAAD,CAArB;AAEAA,UAAAA,GAAG,GAAGd,KAAK,CAACgB,WAAN,CAAkBF,GAAlB,CAAN;AAEA,gBAAMP,IAAI,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BI,KAA/B,CAAb;;AAEA,kBAAQR,IAAR;AAEI,iBAAK,kBAAL;AACIQ,cAAAA,KAAK,IAAIZ,KAAK,CAACS,IAAN,CAAY,GAAEE,GAAI,EAAlB,CAAT;AACA;;AAEJ,iBAAK,iBAAL;AACIX,cAAAA,KAAK,CAACS,IAAN,CAAY,GAAEE,GAAI,IAAGC,KAAM,EAA3B;AACA;;AAEJ,iBAAK,iBAAL;AAEI,sBAAQA,KAAR;AAEI,qBAAK,EAAL;AACA,qBAAK,MAAL;AACIZ,kBAAAA,KAAK,CAACS,IAAN,CAAY,GAAEE,GAAI,EAAlB;AACA;;AAEJ,qBAAK,OAAL;AACI;;AAEJ;AACIX,kBAAAA,KAAK,CAACS,IAAN,CAAY,GAAEE,GAAI,IAAGC,KAAM,EAA3B;AACA;AAZR;;AAeA;AA3BR;AA6BH;;AAED;;AAEJ,WAAK,iBAAL;AACIZ,QAAAA,KAAK,CAACS,IAAN,CAAWN,OAAX;AACA;AAvDR;AAyDH;;AAED,SAAOH,KAAK,CAACc,IAAN,CAAW,GAAX,CAAP;AACH,CAtEM","sourcesContent":["import * as Utils from '@app/utils';\n\nexport const classes = (...input): string => {\n\n    const names = [];\n\n    for (let i = 0; i < input.length; i++) {\n\n        const element = input[i];\n\n        const type = Object.prototype.toString.call(element);\n\n        switch (type) {\n\n            case '[object Array]':\n                names.push(classes(element));\n                break;\n\n            case '[object Object]':\n\n                const keys = Object.keys(element);\n\n                for (let i = 0; i < keys.length; i++) {\n\n                    let key = keys[i];\n\n                    const value = element[key];\n\n                    key = Utils.toKebabCase(key);\n\n                    const type = Object.prototype.toString.call(value);\n\n                    switch (type) {\n\n                        case '[object Boolean]':\n                            value && names.push(`${key}`);\n                            break;\n\n                        case '[object Number]':\n                            names.push(`${key}-${value}`);\n                            break;\n\n                        case '[object String]':\n\n                            switch (value) {\n\n                                case '':\n                                case 'true':\n                                    names.push(`${key}`);\n                                    break;\n\n                                case 'false':\n                                    break;\n\n                                default:\n                                    names.push(`${key}-${value}`);\n                                    break;\n                            }\n\n                            break;\n                    }\n                }\n\n                break;\n\n            case '[object String]':\n                names.push(element);\n                break;\n        }\n    }\n\n    return names.join(' ');\n};"]},"metadata":{},"sourceType":"module"}