{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\framework-selector\\\\framework-selector.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useRouter } from 'next/router';\nimport Select, { components } from 'react-select';\nimport { Box, PlusGrid, PlusGridItem, Text } from '@app/components';\nimport { frameworks } from '@app/data';\nimport { useStore } from '@app/hooks';\n\nconst Option = props => {\n  const {\n    Option\n  } = components;\n  return /*#__PURE__*/_jsxDEV(Option, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(SingleValue, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nconst SingleValue = props => /*#__PURE__*/_jsxDEV(PlusGrid, {\n  alignItems: \"center\",\n  gutterX: \"sm\",\n  children: [/*#__PURE__*/_jsxDEV(PlusGridItem, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: '1.5rem',\n        height: '1.5rem',\n        objectFit: 'contain',\n        display: 'block'\n      },\n      src: `/assets/logo/${props.data.logo}`,\n      alt: `${props.data.label} logo`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(PlusGridItem, {\n    children: /*#__PURE__*/_jsxDEV(Text, {\n      children: props.data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n\nexport const FrameworkSelector = observer(() => {\n  const store = useStore(); // TODO\n\n  const router = useRouter();\n  const items = frameworks.filter(framework => !framework.disabled).map(framework => ({\n    value: framework.key,\n    label: framework.title,\n    logo: framework.logo\n  }));\n\n  const change = framework => {\n    store.ui.setFramework(framework.value); // TODO\n\n    router.replace(router.asPath);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 3,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        color: \"main-lighten-1\",\n        size: \"caption\",\n        children: \"SELECT YOUR FRAMEWORK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: items,\n      value: items.find(framework => framework.value === store.ui.framework),\n      components: {\n        Option,\n        SingleValue\n      },\n      onChange: change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n});","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/framework-selector/framework-selector.tsx"],"names":["React","observer","useRouter","Select","components","Box","PlusGrid","PlusGridItem","Text","frameworks","useStore","Option","props","SingleValue","width","height","objectFit","display","data","logo","label","FrameworkSelector","store","router","items","filter","framework","disabled","map","value","key","title","change","ui","setFramework","replace","asPath","find"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useRouter } from 'next/router';\nimport Select, { components } from 'react-select'\nimport { Box, PlusGrid, PlusGridItem, Text } from '@app/components';\nimport { frameworks } from '@app/data';\nimport { useStore } from '@app/hooks';\n\nconst Option = (props) => {\n\n  const { Option } = components;\n\n  return (\n    <Option {...props}>\n      <SingleValue {...props} />\n    </Option>\n  )\n}\n\nconst SingleValue = (props) => (\n  <PlusGrid alignItems=\"center\" gutterX=\"sm\">\n    <PlusGridItem>\n      <img\n        style={{ width: '1.5rem', height: '1.5rem', objectFit: 'contain', display: 'block' }}\n        src={`/assets/logo/${props.data.logo}`}\n        alt={`${props.data.label} logo`}\n      />\n    </PlusGridItem>\n    <PlusGridItem>\n      <Text>\n        {props.data.label}\n      </Text>\n    </PlusGridItem>\n  </PlusGrid>\n)\n\nexport const FrameworkSelector: React.FC<any> = observer(() => {\n\n  const store = useStore();\n\n  // TODO\n  const router = useRouter();\n\n  const items = frameworks\n    .filter((framework) => !framework.disabled)\n    .map((framework) => ({\n      value: framework.key,\n      label: framework.title,\n      logo: framework.logo,\n    }));\n\n  const change = (framework: any) => {\n\n    store.ui.setFramework(framework.value);\n\n    // TODO\n    router.replace(router.asPath);\n  }\n\n  return (\n    <>\n      <Box mb={3}>\n        <Text color=\"main-lighten-1\" size=\"caption\">\n          SELECT YOUR FRAMEWORK\n        </Text>\n      </Box>\n      <Select\n        options={items}\n        value={items.find((framework) => framework.value === store.ui.framework)}\n        components={{ Option, SingleValue }}\n        onChange={change}\n      />\n    </>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}