{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\parameters\\\\parameters.tsx\";\nimport React from 'react';\nimport { Code, Markup, Text, PlusGrid, PlusGridItem } from '@app/components';\nimport * as Utils from '@app/utils';\nexport const Parameters = props => {\n  const {\n    items = []\n  } = props;\n  const hasDefault = !!items.filter(item => typeof item.default !== 'undefined').length;\n  const hasType = !!items.filter(item => typeof item.type !== 'undefined').length;\n  const hasValue = !!items.filter(item => typeof item.value !== 'undefined').length;\n  const classes = Utils.classes('parameters');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: items.map(item => /*#__PURE__*/_jsxDEV(PlusGrid, {\n      className: \"item\",\n      gutterX: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(PlusGridItem, {\n        xs: \"grow\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          size: \"body\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: \"body\",\n          color: \"error\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlusGridItem, {\n        xs: \"12\",\n        sm: \"6\",\n        lg: \"grow\",\n        children: [hasType && /*#__PURE__*/_jsxDEV(Text, {\n          size: \"body\",\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), hasType && /*#__PURE__*/_jsxDEV(Text, {\n          size: \"body\",\n          truncate: true,\n          children: item.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlusGridItem, {\n        className: \"default\",\n        xs: \"12\",\n        lg: \"auto\",\n        children: [hasDefault && /*#__PURE__*/_jsxDEV(Text, {\n          size: \"body\",\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 28\n        }, this), hasDefault && /*#__PURE__*/_jsxDEV(Text, {\n          size: \"body\",\n          children: item.default || 'undefined'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlusGridItem, {\n        xs: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          size: \"body\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          size: \"body\",\n          children: /*#__PURE__*/_jsxDEV(Markup, {\n            ignoreParagraph: true,\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), hasValue && /*#__PURE__*/_jsxDEV(PlusGridItem, {\n        xs: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          size: \"body\",\n          children: \"Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Code, {\n          language: \"js\",\n          copy: false,\n          children: item.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, item.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/parameters/parameters.tsx"],"names":["React","Code","Markup","Text","PlusGrid","PlusGridItem","Utils","Parameters","props","items","hasDefault","filter","item","default","length","hasType","type","hasValue","value","classes","map","name","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuCC,YAAvC,QAA2D,iBAA3D;AACA,OAAO,KAAKC,KAAZ,MAAuB,YAAvB;AAGA,OAAO,MAAMC,UAAqC,GAAIC,KAAD,IAAW;AAE9D,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAiBD,KAAvB;AAEA,QAAME,UAAU,GAAG,CAAC,CAACD,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAU,OAAOA,IAAI,CAACC,OAAZ,KAAwB,WAA/C,EAA4DC,MAAjF;AAEA,QAAMC,OAAO,GAAG,CAAC,CAACN,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAU,OAAOA,IAAI,CAACI,IAAZ,KAAqB,WAA5C,EAAyDF,MAA3E;AAEA,QAAMG,QAAQ,GAAG,CAAC,CAACR,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAU,OAAOA,IAAI,CAACM,KAAZ,KAAsB,WAA7C,EAA0DJ,MAA7E;AAEA,QAAMK,OAAO,GAAGb,KAAK,CAACa,OAAN,CACd,YADc,CAAhB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEA,OAAhB;AAAA,cACGV,KAAK,CAACW,GAAN,CAAWR,IAAD,iBACT,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,MAApB;AAA2C,MAAA,OAAO,EAAC,IAAnD;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,EAAE,EAAC,MAAjB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAC,OAAxB;AAAA,oBAAiCA,IAAI,CAACS;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,YAAD;AAAc,QAAA,EAAE,EAAC,IAAjB;AAAsB,QAAA,EAAE,EAAC,GAAzB;AAA6B,QAAA,EAAE,EAAC,MAAhC;AAAA,mBACGN,OAAO,iBAAI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADd,EAEGA,OAAO,iBACN,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,QAAQ,MAA1B;AAAA,oBAEGH,IAAI,CAACI;AAFR;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAcE,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC,SAAxB;AAAkC,QAAA,EAAE,EAAC,IAArC;AAA0C,QAAA,EAAE,EAAC,MAA7C;AAAA,mBACGN,UAAU,iBAAI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADjB,EAEGA,UAAU,iBAAI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA,oBAAmBE,IAAI,CAACC,OAAL,IAAgB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAkBE,QAAC,YAAD;AAAc,QAAA,EAAE,EAAC,IAAjB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,eAAe,MAAvB;AAAA,sBAAyBD,IAAI,CAACU;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,EAwBGL,QAAQ,iBACP,QAAC,YAAD;AAAc,QAAA,EAAE,EAAC,IAAjB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,IAAf;AAAoB,UAAA,IAAI,EAAE,KAA1B;AAAA,oBAAkCL,IAAI,CAACM;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA,OAAgCN,IAAI,CAACS,IAArC;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAnDM","sourcesContent":["import React from 'react';\nimport { Code, Markup, Text, PlusGrid, PlusGridItem } from '@app/components';\nimport * as Utils from '@app/utils';\nimport { ParametersProps } from './parameters.types';\n\nexport const Parameters: React.FC<ParametersProps> = (props) => {\n\n  const { items = [] } = props;\n\n  const hasDefault = !!items.filter((item) => typeof item.default !== 'undefined').length;\n\n  const hasType = !!items.filter((item) => typeof item.type !== 'undefined').length;\n\n  const hasValue = !!items.filter((item) => typeof item.value !== 'undefined').length;\n\n  const classes = Utils.classes(\n    'parameters'\n  );\n\n  return (\n    <div className={classes}>\n      {items.map((item) => (\n        <PlusGrid className=\"item\" key={item.name} gutterX=\"md\">\n          <PlusGridItem xs=\"grow\">\n            <Text size=\"body\">Name</Text>\n            <Text size=\"body\" color=\"error\">{item.name}</Text>\n          </PlusGridItem>\n          <PlusGridItem xs=\"12\" sm=\"6\" lg=\"grow\">\n            {hasType && <Text size=\"body\">Type</Text>}\n            {hasType && (\n              <Text size=\"body\" truncate>\n                {/* TODO: see all types */}\n                {item.type}\n              </Text>\n            )}\n          </PlusGridItem>\n          <PlusGridItem className=\"default\" xs=\"12\" lg=\"auto\">\n            {hasDefault && <Text size=\"body\">Default</Text>}\n            {hasDefault && <Text size=\"body\">{item.default || 'undefined'}</Text>}\n          </PlusGridItem>\n          <PlusGridItem xs=\"12\">\n            <Text size=\"body\">Description</Text>\n            <Text size=\"body\">\n              <Markup ignoreParagraph>{item.description}</Markup>\n            </Text>\n          </PlusGridItem>\n          {hasValue && (\n            <PlusGridItem xs=\"12\">\n              <Text size=\"body\">Value</Text>\n              <Code language=\"js\" copy={false}>{item.value}</Code>\n            </PlusGridItem>\n          )}\n        </PlusGrid>\n      ))}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}