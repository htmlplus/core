{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\layouts\\\\default\\\\default.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useMemo } from 'react';\nimport { FrameworkSelector, Link, Section, Sidebar, PlusGrid, PlusGridItem } from 'components';\nimport { components } from 'data';\nimport { useRouter } from 'hooks';\nimport { Utils } from 'utils';\nimport styles from './default.module.scss';\nexport const LayoutDefault = ({\n  children\n}) => {\n  const router = useRouter();\n  const items = useMemo(() => [{\n    title: 'UI Components',\n    items: components.filter(item => item.main).map(component => ({\n      // @ts-ignore\n      title: component.title + (component.development ? ' (development)' : ''),\n      route: {\n        to: 'ROUTE:COMPONENT:DETAILS',\n        params: {\n          key: component.key\n        }\n      }\n    }))\n  }, {\n    title: 'Framework Integrations',\n    items: [{\n      title: 'Overview',\n      route: {\n        to: 'ROUTE:FRAMEWORK:OVERVIEW'\n      }\n    }, {\n      title: 'React',\n      route: {\n        to: 'ROUTE:FRAMEWORK:REACT'\n      }\n    }, {\n      title: 'Angular',\n      route: {\n        to: 'ROUTE:FRAMEWORK:ANGULAR'\n      }\n    }, {\n      title: 'Vue',\n      route: {\n        to: 'ROUTE:FRAMEWORK:VUE'\n      }\n    }, {\n      title: 'JavaScript',\n      route: {\n        to: 'ROUTE:FRAMEWORK:JAVASCRIPT'\n      }\n    }]\n  }], [components]);\n  const all = items.map(item => {\n    if (!item.items) return null;\n    return (item.items || []).map(subItem => _objectSpread(_objectSpread({}, subItem), {}, {\n      category: item.title\n    }));\n  }).flat(); // TODO: route service\n\n  const index = all.findIndex(({\n    route\n  }) => router.location.path === router.path(route.to, route.params));\n  const next = all[index + 1];\n  const prev = all[index - 1];\n  const classes = Utils.classes({\n    [styles['layout-default']]: true\n  });\n  return __jsx(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(FrameworkSelector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), __jsx(PlusGrid, {\n    wrap: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(PlusGridItem, {\n    xs: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(Sidebar, {\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), __jsx(PlusGridItem, {\n    xs: \"grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles['layout-default__content'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, children, __jsx(Section, {\n    size: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(PlusGrid, {\n    justify: \"between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, __jsx(PlusGridItem, {\n    xs: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, !!prev && __jsx(Link, _extends({}, prev.route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), \"PREV\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }), prev.title, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }), prev.category)), __jsx(PlusGridItem, {\n    xs: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, !!next && __jsx(Link, _extends({}, next.route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }), \"NEXT\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }\n  }), next.title, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }), next.category))))))));\n};","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/layouts/default/default.tsx"],"names":["React","useMemo","FrameworkSelector","Link","Section","Sidebar","PlusGrid","PlusGridItem","components","useRouter","Utils","styles","LayoutDefault","children","router","items","title","filter","item","main","map","component","development","route","to","params","key","all","subItem","category","flat","index","findIndex","location","path","next","prev","classes"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { FrameworkSelector, Link, Section, Sidebar, PlusGrid, PlusGridItem } from 'components';\nimport { components } from 'data';\nimport { useRouter } from 'hooks';\nimport { Utils } from 'utils';\nimport styles from './default.module.scss';\n\nexport const LayoutDefault: React.FC = ({ children }) => {\n\n  const router = useRouter();\n\n  const items = useMemo(\n    () => ([\n      {\n        title: 'UI Components',\n        items: components\n          .filter((item) => item.main)\n          .map((component) => ({\n            // @ts-ignore\n            title: component.title + (component.development ? ' (development)' : ''),\n            route: {\n              to: 'ROUTE:COMPONENT:DETAILS',\n              params: {\n                key: component.key,\n              },\n            }\n          })),\n      },\n      {\n        title: 'Framework Integrations',\n        items: [\n          {\n            title: 'Overview',\n            route: {\n              to: 'ROUTE:FRAMEWORK:OVERVIEW',\n            },\n          },\n          {\n            title: 'React',\n            route: {\n              to: 'ROUTE:FRAMEWORK:REACT',\n            },\n          },\n          {\n            title: 'Angular',\n            route: {\n              to: 'ROUTE:FRAMEWORK:ANGULAR',\n            },\n          },\n          {\n            title: 'Vue',\n            route: {\n              to: 'ROUTE:FRAMEWORK:VUE',\n            },\n          },\n          {\n            title: 'JavaScript',\n            route: {\n              to: 'ROUTE:FRAMEWORK:JAVASCRIPT',\n            },\n          },\n        ],\n      },\n    ]),\n    [components]\n  );\n\n  const all: Array<any> = items\n    .map((item) => {\n\n      if (!item.items) return null;\n\n      return (item.items || []).map((subItem) => ({ ...subItem, category: item.title }));\n    })\n    .flat();\n\n  // TODO: route service\n  const index = all.findIndex(({ route }) => router.location.path === router.path(route.to, route.params));\n\n  const next = all[index + 1];\n\n  const prev = all[index - 1];\n\n  const classes = Utils.classes({\n    [styles['layout-default']]: true,\n  });\n\n  return (\n    <div className={classes}>\n      <FrameworkSelector />\n      <PlusGrid wrap=\"off\">\n        <PlusGridItem xs=\"auto\">\n          <Sidebar items={items} />\n        </PlusGridItem>\n        <PlusGridItem xs=\"grow\">\n          {/* TODO: use box */}\n          <div className={styles['layout-default__content']}>\n            {children}\n            <Section size=\"page\">\n              <PlusGrid justify=\"between\">\n                <PlusGridItem xs=\"auto\">\n                  {!!prev && (\n                    <Link {...prev.route}>\n                      PREV\n                      <br />\n                      {prev.title}\n                      <br />\n                      {prev.category}\n                    </Link>\n                  )}\n                </PlusGridItem>\n                <PlusGridItem xs=\"auto\">\n                  {!!next && (\n                    <Link {...next.route}>\n                      NEXT\n                      <br />\n                      {next.title}\n                      <br />\n                      {next.category}\n                    </Link>\n                  )}\n                </PlusGridItem>\n              </PlusGrid>\n            </Section>\n          </div>\n        </PlusGridItem>\n      </PlusGrid>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}