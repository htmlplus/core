{"ast":null,"code":"import classNames from 'classnames';\nexport const classes = classNames;\nexport const capitalize = input => !input ? input : input.replace(/^\\w/, char => char.toUpperCase());\nexport const render = (items, level = 0) => {\n  return items.map(item => {\n    if (Array.isArray(item)) {\n      return render(item.filter(item => item !== null), level + 1);\n    } else {\n      if (typeof item === 'undefined') return null;\n      let space = '';\n\n      for (let i = 0; i < level; i++) space += '  ';\n\n      return space + item;\n    }\n  }).filter(item => item !== null).join('\\n');\n};","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/utils/utils.ts"],"names":["classNames","classes","capitalize","input","replace","char","toUpperCase","render","items","level","map","item","Array","isArray","filter","space","i","join"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,OAAO,GAAGD,UAAhB;AAEP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAmB,CAACA,KAAD,GAASA,KAAT,GAAiBA,KAAK,CAACC,OAAN,CAAc,KAAd,EAAsBC,IAAD,IAAUA,IAAI,CAACC,WAAL,EAA/B,CAAvD;AAEP,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,KAAK,GAAG,CAAhB,KAAsB;AAExC,SAAOD,KAAK,CACPE,GADE,CACGC,IAAD,IAAU;AAEX,QAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AAErB,aAAOJ,MAAM,CAACI,IAAI,CAACG,MAAL,CAAaH,IAAD,IAAUA,IAAI,KAAK,IAA/B,CAAD,EAAuCF,KAAK,GAAG,CAA/C,CAAb;AACH,KAHD,MAIK;AAED,UAAI,OAAOE,IAAP,KAAgB,WAApB,EAAiC,OAAO,IAAP;AAEjC,UAAII,KAAK,GAAG,EAAZ;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAApB,EAA2BO,CAAC,EAA5B,EAAgCD,KAAK,IAAI,IAAT;;AAEhC,aAAOA,KAAK,GAAGJ,IAAf;AACH;AACJ,GAjBE,EAkBFG,MAlBE,CAkBMH,IAAD,IAAUA,IAAI,KAAK,IAlBxB,EAmBFM,IAnBE,CAmBG,IAnBH,CAAP;AAoBH,CAtBM","sourcesContent":["import classNames from 'classnames';\n\nexport const classes = classNames;\n\nexport const capitalize = (input: string) => !input ? input : input.replace(/^\\w/, (char) => char.toUpperCase());\n\nexport const render = (items, level = 0) => {\n\n    return items\n        .map((item) => {\n\n            if (Array.isArray(item)) {\n\n                return render(item.filter((item) => item !== null), level + 1);\n            }\n            else {\n\n                if (typeof item === 'undefined') return null;\n\n                let space = '';\n\n                for (let i = 0; i < level; i++) space += '  ';\n\n                return space + item;\n            }\n        })\n        .filter((item) => item !== null)\n        .join('\\n');\n}"]},"metadata":{},"sourceType":"module"}