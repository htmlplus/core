{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\sidebar\\\\sidebar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n// TODO\nimport React, { useMemo, useState } from 'react';\nimport { FrameworkSelector, Link, Text } from '@app/components';\nimport { useRouter } from '@app/hooks';\nimport { Utils } from '@app/utils';\nexport const Sidebar = props => {\n  _s();\n\n  const {\n    items = []\n  } = props;\n  const router = useRouter();\n  const {\n    0: current,\n    1: setCurrent\n  } = useState([]);\n  const actives = useMemo(() => {\n    const run = (input, ...parent) => {\n      if (Array.isArray(input)) {\n        let result = [];\n        input.map(item => {\n          const items = run(item, ...parent);\n          if (items.length) result = items;\n        });\n        return result;\n      } else if (input.items) {\n        return run(input.items, input, ...parent);\n      } else {\n        const route = input.route;\n        if (!route) return [];\n        if (router.isActive(route.to, route.params)) return [input, ...parent];\n        return [];\n      }\n    };\n\n    const result = run(items, null).filter(item => item);\n    setCurrent(result);\n    return result;\n  }, [items, router.asPath]);\n\n  const isActive = item => actives.some(active => item === active);\n\n  const isExpand = parent => {\n    if (!parent) return true;\n    return current.some(item => item === parent);\n  };\n\n  const toggle = (item, ...parents) => {\n    const indexOf = current.findIndex(x => x === item);\n\n    if (indexOf !== -1) {\n      setCurrent([...current.slice(indexOf + 1)]);\n    } else {\n      setCurrent([item, ...parents]);\n    }\n  };\n\n  const menu = (items, level = 0, ...parents) => {\n    return __jsx(\"ul\", {\n      className: Utils.classes({\n        ['sidebar__menu']: true,\n        [`sidebar__menu--level-${level}`]: true,\n        ['sidebar__menu--collapsed']: !isExpand(parents[0])\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, items.map(item => __jsx(\"li\", {\n      key: item.title,\n      className: Utils.classes({\n        'sidebar__menu__item': true,\n        'sidebar__menu__item--active': isActive(item)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, __jsx(Text, {\n      size: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, item.route ? __jsx(Link, _extends({}, item.route, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }), item.title) : __jsx(\"div\", {\n      onClick: () => toggle(item, ...parents),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 73\n      }\n    }, item.title)), !!item.items && !!item.items.length && menu(item.items, level + 1, item, ...parents))));\n  };\n\n  const classes = Utils.classes('sidebar');\n  return __jsx(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"framework-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(FrameworkSelector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), menu(items));\n};\n\n_s(Sidebar, \"iXinJxfEj3MGB4sDJ9ThAwvRkvI=\", false, function () {\n  return [useRouter];\n});\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/sidebar/sidebar.tsx"],"names":["React","useMemo","useState","FrameworkSelector","Link","Text","useRouter","Utils","Sidebar","props","items","router","current","setCurrent","actives","run","input","parent","Array","isArray","result","map","item","length","route","isActive","to","params","filter","asPath","some","active","isExpand","toggle","parents","indexOf","findIndex","x","slice","menu","level","classes","title"],"mappings":"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","sourcesContent":["// TODO\nimport React, { useMemo, useState } from 'react';\nimport { FrameworkSelector, Link, Text } from '@app/components';\nimport { useRouter } from '@app/hooks';\nimport { Utils } from '@app/utils';\nimport { SidebarItem, SidebarProps } from './sidebar.types';\n\nexport const Sidebar: React.FC<SidebarProps> = (props) => {\n\n  const { items = [] } = props;\n\n  const router = useRouter();\n\n  const [current, setCurrent] = useState([]);\n\n  const actives = useMemo(\n    () => {\n\n      const run = (input, ...parent) => {\n\n        if (Array.isArray(input)) {\n\n          let result = [];\n\n          input.map((item) => {\n\n            const items = run(item, ...parent);\n\n            if (items.length) result = items;\n          });\n\n          return result;\n        }\n        else if (input.items) {\n\n          return run(input.items, input, ...parent);\n        }\n        else {\n\n          const route = input.route;\n\n          if (!route) return [];\n\n          if (router.isActive(route.to, route.params)) return [input, ...parent];\n\n          return [];\n        }\n      }\n\n      const result = run(items, null).filter((item) => item);\n\n      setCurrent(result);\n\n      return result;\n    },\n    [items, router.asPath]\n  );\n\n  const isActive = (item) => actives.some((active) => item === active);\n\n  const isExpand = (parent) => {\n\n    if (!parent) return true;\n\n    return current.some((item) => item === parent);\n  }\n\n  const toggle = (item, ...parents) => {\n\n    const indexOf = current.findIndex((x) => x === item);\n\n    if (indexOf !== -1) {\n\n      setCurrent([...current.slice(indexOf + 1)]);\n    }\n    else {\n\n      setCurrent([item, ...parents]);\n    }\n  }\n\n  const menu = (items: Array<SidebarItem>, level = 0, ...parents) => {\n    return (\n      <ul\n        className={Utils.classes({\n          ['sidebar__menu']: true,\n          [`sidebar__menu--level-${level}`]: true,\n          ['sidebar__menu--collapsed']: !isExpand(parents[0])\n        })}\n      >\n        {items.map((item) => (\n          <li\n            key={item.title}\n            className={Utils.classes({\n              'sidebar__menu__item': true,\n              'sidebar__menu__item--active': isActive(item)\n            })}\n          >\n            <Text size=\"body\">\n              {item.route ? <Link {...item.route}>{item.title}</Link> : <div onClick={() => toggle(item, ...parents)}>{item.title}</div>}\n            </Text>\n            {!!item.items && !!item.items.length && menu(item.items, level + 1, item, ...parents)}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const classes = Utils.classes(\n    'sidebar'\n  );\n\n  return (\n    <div className={classes}>\n      <div className=\"framework-selector\">\n        <FrameworkSelector />\n      </div>\n      {menu(items)}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}