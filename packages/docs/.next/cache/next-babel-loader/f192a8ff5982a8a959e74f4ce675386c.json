{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\example\\\\example.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport { Code, PlusTabs, PlusTabsBar, PlusTabsTab, PlusTabsPanels, PlusTabsPanel } from 'components';\nimport { Utils } from 'utils';\nimport { ExampleLanguage } from './example.types';\nimport styles from './example.module.scss';\nexport const Example = ({\n  value\n}) => {\n  _s();\n\n  const code = value.code || {};\n  const style = useMemo(() => {\n    let rules = code.style || '';\n    let className = `.ex-${value.key}`;\n\n    try {\n      var classLen = className.length,\n          char,\n          nextChar,\n          isAt,\n          isIn;\n      className += ' ';\n      rules = rules.replace(/\\/\\*(?:(?!\\*\\/)[\\s\\S])*\\*\\/|[\\r\\n\\t]+/g, '');\n      rules = rules.replace(/}(\\s*)@/g, '}@');\n      rules = rules.replace(/}(\\s*)}/g, '}}');\n\n      for (var i = 0; i < rules.length - 2; i++) {\n        char = rules[i];\n        nextChar = rules[i + 1];\n        if (char === '@') isAt = true;\n        if (!isAt && char === '{') isIn = true;\n        if (isIn && char === '}') isIn = false;\n\n        if (!isIn && nextChar !== '@' && nextChar !== '}' && (char === '}' || char === ',' || (char === '{' || char === ';') && isAt)) {\n          rules = rules.slice(0, i + 1) + className + rules.slice(i + 1);\n          i += classLen;\n          isAt = false;\n        }\n      }\n\n      ;\n      if (rules.indexOf(className) !== 0 && rules.indexOf('@') !== 0) rules = className + rules;\n      return rules;\n    } catch {}\n  }, [value.key, code.style]);\n  const tabs = useMemo(() => {\n    const tabs = [];\n    Object.keys(code).map(key => {\n      const tab = {\n        key,\n        title: Utils.toCapitalCase(key)\n      };\n\n      if (key === 'preview') {\n        tab.content = () => __jsx(\"div\", {\n          className: `ex-${value.key}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }, code[key](), style && __jsx(\"style\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }, style));\n      } else {\n        const language = ExampleLanguage[key];\n\n        tab.content = () => __jsx(Code, {\n          language: language,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 31\n          }\n        }, code[key]);\n      }\n\n      tabs.push(tab);\n    });\n    return tabs;\n  }, [code]);\n  const classes = Utils.classes({\n    [styles.example]: true\n  });\n  return __jsx(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, (value.links || []).map(link => __jsx(\"a\", {\n    key: link.key,\n    href: link.path,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"GO TO \", link.value)), __jsx(PlusTabs, {\n    value: \"preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(PlusTabsBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, tabs.map(item => __jsx(PlusTabsTab, {\n    key: item.key,\n    disabled: !item.content,\n    value: item.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, item.title))), __jsx(PlusTabsPanels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, tabs.map(item => __jsx(PlusTabsPanel, {\n    key: item.key,\n    value: item.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, item.content && item.content())))));\n};\n\n_s(Example, \"ymTbDij4saewB8pUBS4wb4K9iJI=\");\n\n_c = Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/example/example.tsx"],"names":["React","useMemo","Code","PlusTabs","PlusTabsBar","PlusTabsTab","PlusTabsPanels","PlusTabsPanel","Utils","ExampleLanguage","styles","Example","value","code","style","rules","className","key","classLen","length","char","nextChar","isAt","isIn","replace","i","slice","indexOf","tabs","Object","keys","map","tab","title","toCapitalCase","content","language","push","classes","example","links","link","path","item"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport { Code, PlusTabs, PlusTabsBar, PlusTabsTab, PlusTabsPanels, PlusTabsPanel } from 'components';\nimport { Utils } from 'utils';\nimport { ExampleProps, ExampleLanguage } from './example.types';\nimport styles from './example.module.scss';\n\nexport const Example: React.FC<ExampleProps> = ({ value }) => {\n\n  const code = value.code || {};\n\n  const style = useMemo(\n    () => {\n\n      let rules = code.style || '';\n\n      let className = `.ex-${value.key}`;\n\n      try { var classLen = className.length, char, nextChar, isAt, isIn; className += ' '; rules = rules.replace(/\\/\\*(?:(?!\\*\\/)[\\s\\S])*\\*\\/|[\\r\\n\\t]+/g, ''); rules = rules.replace(/}(\\s*)@/g, '}@'); rules = rules.replace(/}(\\s*)}/g, '}}'); for (var i = 0; i < rules.length - 2; i++) { char = rules[i]; nextChar = rules[i + 1]; if (char === '@') isAt = true; if (!isAt && char === '{') isIn = true; if (isIn && char === '}') isIn = false; if (!isIn && nextChar !== '@' && nextChar !== '}' && (char === '}' || char === ',' || ((char === '{' || char === ';') && isAt))) { rules = rules.slice(0, i + 1) + className + rules.slice(i + 1); i += classLen; isAt = false; } }; if (rules.indexOf(className) !== 0 && rules.indexOf('@') !== 0) rules = className + rules; return rules; } catch { }\n    },\n    [value.key, code.style]\n  );\n\n  const tabs = useMemo(\n    () => {\n\n      const tabs = [];\n\n      Object.keys(code).map((key) => {\n\n        const tab: any = {\n          key,\n          title: Utils.toCapitalCase(key)\n        };\n\n        if (key === 'preview') {\n\n          tab.content = () => (\n            <div className={`ex-${value.key}`}>\n              {code[key]()}\n              {style && <style>{style}</style>}\n            </div>\n          )\n        }\n        else {\n\n          const language = ExampleLanguage[key as keyof typeof ExampleLanguage];\n\n          tab.content = () => <Code language={language}>{code[key]}</Code>\n        }\n\n        tabs.push(tab);\n      });\n\n      return tabs;\n    },\n    [code]\n  );\n\n  const classes = Utils.classes({\n    [styles.example]: true,\n  });\n\n  return (\n    <div className={classes}>\n      {(value.links || []).map((link: any) => (\n        <a\n          key={link.key}\n          href={link.path}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GO TO {link.value}\n        </a>\n      ))}\n      <PlusTabs value=\"preview\">\n        <PlusTabsBar>\n          {tabs.map((item: any) => (\n            <PlusTabsTab key={item.key} disabled={!item.content} value={item.key}>\n              {item.title}\n            </PlusTabsTab>\n          ))}\n        </PlusTabsBar>\n        <PlusTabsPanels>\n          {tabs.map((item: any) => (\n            <PlusTabsPanel key={item.key} value={item.key}>\n              {item.content && item.content()}\n            </PlusTabsPanel>\n          ))}\n        </PlusTabsPanels>\n      </PlusTabs>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}