{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\mine\\\\htmlplus\\\\core\\\\packages\\\\docs\\\\src\\\\components\\\\button\\\\button.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from './button.module.scss';\nimport { Utils } from \"../../utils\";\nimport { Text } from \"../text\";\n\nconst sizeToTextSize = size => {\n  const map = {\n    xl: 'header',\n    lg: 'title',\n    md: 'body',\n    sm: 'subtitle',\n    xs: 'label'\n  };\n  return map[size];\n};\n\nexport const Button = ({\n  children,\n  icon,\n  onClick,\n  size = 'md'\n}) => {\n  const classes = Utils.classes({\n    [styles.button]: true,\n    [styles['button--icon']]: icon,\n    [styles[`button--icon--size-${size}`]]: icon && !!size\n  });\n  return __jsx(\"button\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, icon ? children : __jsx(Text, {\n    size: sizeToTextSize(size),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, children));\n};","map":{"version":3,"sources":["C:/projects/mine/htmlplus/core/packages/docs/src/components/button/button.tsx"],"names":["React","styles","Utils","Text","sizeToTextSize","size","map","xl","lg","md","sm","xs","Button","children","icon","onClick","classes","button"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,IAAT,QAAgC,SAAhC;;AAKA,MAAMC,cAA8C,GAAIC,IAAD,IAAU;AAC/D,QAAMC,GAAG,GAAG;AACVC,IAAAA,EAAE,EAAE,QADM;AAEVC,IAAAA,EAAE,EAAE,OAFM;AAGVC,IAAAA,EAAE,EAAE,MAHM;AAIVC,IAAAA,EAAE,EAAE,UAJM;AAKVC,IAAAA,EAAE,EAAE;AALM,GAAZ;AAOA,SAAOL,GAAG,CAACD,IAAD,CAAV;AACD,CATD;;AAWA,OAAO,MAAMO,MAA6B,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,OAAlB;AAA2BV,EAAAA,IAAI,GAAG;AAAlC,CAAD,KAA8C;AACzF,QAAMW,OAAO,GAAGd,KAAK,CAACc,OAAN,CAAc;AAC5B,KAACf,MAAM,CAACgB,MAAR,GAAiB,IADW;AAE5B,KAAChB,MAAM,CAAC,cAAD,CAAP,GAA0Ba,IAFE;AAG5B,KAACb,MAAM,CAAE,sBAAqBI,IAAK,EAA5B,CAAP,GAAwCS,IAAI,IAAI,CAAC,CAACT;AAHtB,GAAd,CAAhB;AAMA,SACE;AAAQ,IAAA,SAAS,EAAEW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,GACHD,QADG,GAGH,MAAC,IAAD;AAAM,IAAA,IAAI,EAAET,cAAc,CAACC,IAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,QADH,CAJJ,CADF;AAWD,CAlBM","sourcesContent":["import React from 'react';\nimport { ButtonProps } from \"./button.types\";\nimport styles from './button.module.scss';\nimport { Utils } from \"../../utils\";\nimport { Text, TextProps } from \"../text\";\n\ntype ButtonSize = ButtonProps['size'];\ntype TextSize = TextProps['size'];\n\nconst sizeToTextSize: (size: ButtonSize) => TextSize = (size) => {\n  const map = {\n    xl: 'header',\n    lg: 'title',\n    md: 'body',\n    sm: 'subtitle',\n    xs: 'label',\n  };\n  return map[size] as TextSize;\n};\n\nexport const Button: React.FC<ButtonProps> = ({ children, icon, onClick, size = 'md' }) => {\n  const classes = Utils.classes({\n    [styles.button]: true,\n    [styles['button--icon']]: icon,\n    [styles[`button--icon--size-${size}`]]: icon && !!size,\n  });\n\n  return (\n    <button className={classes}>\n      {icon ? (\n        children\n      ) : (\n        <Text size={sizeToTextSize(size)}>\n          {children}\n        </Text>\n      )}\n    </button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}