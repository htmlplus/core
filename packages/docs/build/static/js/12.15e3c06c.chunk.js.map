{"version":3,"sources":["views/framework/angular/angular.tsx"],"names":["FrameworkAngular","constant","href","language","join"],"mappings":"yHAAA,mDAuIeA,UAlIoB,WAE/B,OACI,kBAAC,IAAD,KACI,kBAAC,OAAD,gBAGA,kBAAC,OAAD,sJAEKC,IAFL,2VAKA,kBAAC,OAAD,sQAGA,kBAAC,OAAD,2QAGA,kBAAC,OAAD,kJAEI,uBAAGC,KAAMD,KAAT,iCAFJ,0SAKA,kBAAC,OAAD,uDACiBA,IADjB,iCAGA,kBAAC,OAAD,CAAME,SAAS,QACV,CAAC,eAAD,OACkBF,MACjBG,KAAK,OAEX,kBAAC,OAAD,yDAGA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,yCAA4CF,IAA+C,KAC3F,GACA,2BACFG,KAAK,OAEX,kBAAC,OAAD,gCAGA,kBAAC,OAAD,sKAGA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,wDACFC,KAAK,OAEX,kBAAC,OAAD,8MAKA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,kDACA,8EACA,GACA,gDACA,4DACA,GACA,yDAA4DF,IAA+C,KAC3G,GACA,gCACA,uBACA,IACA,GACA,2BACA,iCACA,sCACA,GACA,yDACFG,KAAK,OAEX,kBAAC,OAAD,UAGA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,6DACA,oEACA,GACA,kDACA,GACA,cACA,mCACA,+BACA,oBACA,gCACA,uCACA,KACA,6BACFC,KAAK,OAEX,kBAAC,OAAD,8CAGA,kBAAC,OAAD,uDACiBH,IADjB,0HAGA,kBAAC,OAAD,CAAME,SAAS,QACV,CAAC,eAAD,OACkBF,MACjBG,KAAK,OAEX,kBAAC,OAAD,kLAGA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,2CAA8CF,IAA0C,KACxF,GACA,cACA,SACA,gBACA,gCACA,QACA,SACA,KACA,8BACFG,KAAK","file":"static/js/12.15e3c06c.chunk.js","sourcesContent":["import React from 'react';\nimport * as constant from 'src/constant';\nimport { Code, Text } from 'src/components';\nimport { LayoutDefault } from 'src/layouts';\n\nconst FrameworkAngular: React.FC = () => {\n\n    return (\n        <LayoutDefault>\n            <Text>\n                Angular\n            </Text>\n            <Text>\n                جهت استفاده از کامپوننت های\n                {constant.PLATFORM_NAME}\n                در برنامه های مبتنی بر کتابخانه انگولار به دو روش زیر میتوان عمل کرد\n            </Text>\n            <Text>\n                1- استفاده مستقیم از وب کامپوننت ها - پیشنهاد نمی شود\n            </Text>\n            <Text>\n                2- استفاده از کتابخانه مخصوص انگولار - پیشنهاد می شود\n            </Text>\n            <Text>\n                در روش اول ما بطور مستقیم از\n                <a href={constant.WEB_COMPONENT_REFERENCE}>standard HTML Custom Elements</a>\n                استفاده میکنیم. جهت استفاده از این روش مراحل زیر را طی کنید\n            </Text>\n            <Text>\n                1- نصب پکیج {constant.PLATFORM_NAME} توسط npm\n            </Text>\n            <Code language=\"html\">\n                {[\n                    `npm install ${constant.FRAMEWORK_ANGULAR_PACKAGE_NAME}`,\n                ].join('\\n')}\n            </Code>\n            <Text>\n                2- Bind the custom elements to the window object\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'import { defineCustomElements } from \\'' + constant.FRAMEWORK_JAVASCRIPT_PACKAGE_IMPORT + '\\';',\n                    '',\n                    'defineCustomElements();',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                Edge and IE11 polyfills\n            </Text>\n            <Text>\n                If you want your custom elements to be able to work on older browsers, you should add the applyPolyfills() that surround the defineCustomElements() function.\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'applyPolyfills().then(() => defineCustomElements());',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                و در نهایت فایل\n                main.ts\n                به شکل زیر در خواهد آمد\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'import { enableProdMode } from \\'@angular/core\\';',\n                    'import { platformBrowserDynamic } from \\'@angular/platform-browser-dynamic\\';',\n                    '',\n                    'import { AppModule } from \\'./app/app.module\\';',\n                    'import { environment } from \\'./environments/environment\\';',\n                    '',\n                    'import { applyPolyfills, defineCustomElements } from \\'' + constant.FRAMEWORK_JAVASCRIPT_PACKAGE_IMPORT + '\\';',\n                    '',\n                    'if (environment.production) {',\n                    '   enableProdMode();',\n                    '}',\n                    '',\n                    'platformBrowserDynamic()',\n                    '   .bootstrapModule(AppModule)',\n                    '   .catch(err => console.log(err));',\n                    '',\n                    'applyPolyfills().then(() =>  defineCustomElements());',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                s\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'import { BrowserModule } from \\'@angular/platform-browser\\';',\n                    'import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from \\'@angular/core\\';',\n                    '',\n                    'import { AppComponent } from \\'./app.component\\';',\n                    '',\n                    '@NgModule({',\n                    '   declarations: [AppComponent],',\n                    '   imports: [BrowserModule],',\n                    '   providers: [],',\n                    '   bootstrap: [AppComponent],',\n                    '   schemas: [CUSTOM_ELEMENTS_SCHEMA]',\n                    '})',\n                    'export class AppModule {}',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                روش دوم\n            </Text>\n            <Text>\n                1- نصب پکیج {constant.PLATFORM_NAME} مخصوص انگولار توسط نود\n            </Text>\n            <Code language=\"html\">\n                {[\n                    `npm install ${constant.FRAMEWORK_ANGULAR_PACKAGE_NAME}`,\n                ].join('\\n')}\n            </Code>\n            <Text>\n                2- استفاده در کامپوننت های انگولار\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'import { ComponentLibraryModule } from \\'' + constant.FRAMEWORK_ANGULAR_PACKAGE_NAME + '\\';',\n                    '',\n                    '@NgModule({',\n                    '   ...',\n                    '   imports: [',\n                    '       ComponentLibraryModule',\n                    '   ],',\n                    '   ...',\n                    '})',\n                    'export class AppModule { }'\n                ].join('\\n')}\n            </Code>\n        </LayoutDefault>\n    )\n}\n\nexport default FrameworkAngular;\n"],"sourceRoot":""}