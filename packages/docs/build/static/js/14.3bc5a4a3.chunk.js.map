{"version":3,"sources":["views/framework/react/react.tsx"],"names":["FrameworkReact","constant","href","language","join"],"mappings":"yHAAA,mDAiLeA,UA5KkB,WAE7B,OACI,kBAAC,IAAD,KACI,kBAAC,OAAD,cAGA,kBAAC,OAAD,sJAEKC,IAFL,yUAKA,kBAAC,OAAD,sQAGA,kBAAC,OAAD,yPAGA,kBAAC,OAAD,kJAEI,uBAAGC,KAAMD,KAAT,iCAFJ,0SAKA,kBAAC,OAAD,uDACiBA,IADjB,iCAGA,kBAAC,OAAD,CAAME,SAAS,QACV,CAAC,eAAD,OACkBF,MACjBG,KAAK,OAEX,kBAAC,OAAD,yDAGA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,yCAA4CF,IAA+C,KAC3F,GACA,2BACFG,KAAK,OAEX,kBAAC,OAAD,gCAGA,kBAAC,OAAD,sKAGA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,wDACFC,KAAK,OAEX,kBAAC,OAAD,+MAKA,kBAAC,OAAD,CAAMD,SAAS,OACV,CACG,6BACA,oCACA,2BACA,yDAA4DF,IAA+C,KAC3G,GACA,wDACA,GACA,8DACFG,KAAK,OAEX,kBAAC,OAAD,gKAGA,kBAAC,OAAD,CAAMD,SAAS,OACV,CACG,6BACA,GACA,kCACA,GACA,uBACFC,KAAK,OAEX,kBAAC,OAAD,6GAGA,kBAAC,OAAD,CAAMD,SAAS,OACV,CACG,uBACA,KACA,+BACFC,KAAK,OAEX,kBAAC,OAAD,yDAGA,kBAAC,OAAD,CAAMD,SAAS,OACV,CACG,oDACA,GACA,sBACA,GACA,kCACA,GACA,yDACA,GACA,sBACA,GACA,8DACA,GACA,8EACA,YACA,GACA,sCACA,IACA,GACA,uBACFC,KAAK,OAEX,kBAAC,OAAD,kQAGI,uBAAGF,KAAMD,KAAT,iCAHJ,igCAYA,kBAAC,OAAD,uDACiBA,IADjB,wGAGA,kBAAC,OAAD,CAAME,SAAS,QACV,CACG,eAAiBF,KACnBG,KAAK,OAEX,kBAAC,OAAD,gKAGA,kBAAC,OAAD,CAAMD,SAAS,OACV,CACG,6BACA,6BAAgCF,IAAwC,KACxE,GACA,iCACA,GACA,uBACFG,KAAK,OAEX,kBAAC,OAAD,6GAGA,kBAAC,OAAD,CAAMD,SAAS,OACV,CACG,sBACA,KACA,8BACFC,KAAK,OAEX,kBAAC,OAAD,yDAGA,kBAAC,OAAD,CAAMD,SAAS,OACV,CACG,gEACFC,KAAK","file":"static/js/14.3bc5a4a3.chunk.js","sourcesContent":["import React from 'react';\nimport * as constant from 'src/constant';\nimport { Code, Text } from 'src/components';\nimport { LayoutDefault } from 'src/layouts';\n\nconst FrameworkReact: React.FC = () => {\n\n    return (\n        <LayoutDefault>\n            <Text>\n                React\n            </Text>\n            <Text>\n                جهت استفاده از کامپوننت های\n                {constant.PLATFORM_NAME}\n                در برنامه های مبتنی بر کتابخانه ریکت به دو روش زیر میتوان عمل کرد\n            </Text>\n            <Text>\n                1- استفاده مستقیم از وب کامپوننت ها - پیشنهاد نمی شود\n            </Text>\n            <Text>\n                2- استفاده از کتابخانه مخصوص ریکت - پیشنهاد می شود\n            </Text>\n            <Text>\n                در روش اول ما بطور مستقیم از\n                <a href={constant.WEB_COMPONENT_REFERENCE}>standard HTML Custom Elements</a>\n                استفاده میکنیم. جهت استفاده از این روش مراحل زیر را طی کنید\n            </Text>\n            <Text>\n                1- نصب پکیج {constant.PLATFORM_NAME} توسط npm\n            </Text>\n            <Code language=\"html\">\n                {[\n                    `npm install ${constant.FRAMEWORK_JAVASCRIPT_PACKAGE_NAME}`,\n                ].join('\\n')}\n            </Code>\n            <Text>\n                2- Bind the custom elements to the window object\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'import { defineCustomElements } from \\'' + constant.FRAMEWORK_JAVASCRIPT_PACKAGE_IMPORT + '\\';',\n                    '',\n                    'defineCustomElements();',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                Edge and IE11 polyfills\n            </Text>\n            <Text>\n                If you want your custom elements to be able to work on older browsers, you should add the applyPolyfills() that surround the defineCustomElements() function.\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'applyPolyfills().then(() => defineCustomElements());',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                و در نهایت فایل\n                index.js\n                به شکل زیر در خواهد آمد\n            </Text>\n            <Code language=\"jsx\">\n                {[\n                    'import React from \\'react\\';',\n                    'import ReactDOM from \\'react-dom\\';',\n                    'import App from \\'./App\\';',\n                    'import { applyPolyfills, defineCustomElements } from \\'' + constant.FRAMEWORK_JAVASCRIPT_PACKAGE_IMPORT + '\\';',\n                    '',\n                    'applyPolyfills().then(() =>  defineCustomElements());',\n                    '',\n                    'ReactDOM.render(<App />, document.getElementById(\\'root\\'));',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                3- استفاده در کامپوننت های ریکت\n            </Text>\n            <Code language=\"jsx\">\n                {[\n                    'import React from \\'react\\';',\n                    '',\n                    'const App = () => <hp-switch/>;',\n                    '',\n                    'export default App;'\n                ].join('\\n')}\n            </Code>\n            <Text>\n                مقدار دهی به پراپ ها\n            </Text>\n            <Code language=\"jsx\">\n                {[\n                    '<hp-switch reverse/>',\n                    'Or',\n                    '<hp-switch reverse={true}/>'\n                ].join('\\n')}\n            </Code>\n            <Text>\n                رویدادها\n            </Text>\n            <Code language=\"jsx\">\n                {[\n                    'import React, { useEffect, useRef } from \\'react\\';',\n                    '',\n                    'const App = () => {',\n                    '',\n                    '  const element = useRef(null);',\n                    '',\n                    '  const callback = () => alert(\\'The switch toggled!\\');',\n                    '',\n                    '  useEffect(() => {',\n                    '',\n                    '    element.current.addEventListener(\\'hpChange\\', callback);',\n                    '',\n                    '    return () => element.current.removeEventListener(\\'hpChange\\', callback);',\n                    '  }, []);',\n                    '',\n                    '  return <hp-switch ref={element}/>',\n                    '}',\n                    '',\n                    'export default App;'\n                ].join('\\n')}\n            </Code>\n            <Text>\n                روش دوم\n                بزرگترین نقص حال حاضر ریکت در هنگام کار با\n                <a href={constant.WEB_COMPONENT_REFERENCE}>standard HTML Custom Elements</a>\n                این است که خصوصیاتی که حاوی داده های\n                non-scalar\n                هستند (یعنی داده هایی که رشته یا عدد نیستند) و همچنین\n                custom events\n                ها\n                به درستی منتقل نمی شوند .\n                به همین دلیل ما راه دوم را پیشنهاد میکنیم. جهت استفاده از این روش مراحل زیر را طی کنید\n            </Text>\n            <Text>\n                1- نصب پکیج {constant.PLATFORM_NAME} مخصوص ریکت توسط نود\n            </Text>\n            <Code language=\"html\">\n                {[\n                    'npm install ' + constant.FRAMEWORK_REACT_PACKAGE_NAME,\n                ].join('\\n')}\n            </Code>\n            <Text>\n                2- استفاده در کامپوننت های ریکت\n            </Text>\n            <Code language=\"jsx\">\n                {[\n                    'import React from \\'react\\';',\n                    'import { HpSwitch } from \\'' + constant.FRAMEWORK_REACT_PACKAGE_NAME + '\\';',\n                    '',\n                    'const App = () => <HpSwitch/>;',\n                    '',\n                    'export default App;'\n                ].join('\\n')}\n            </Code>\n            <Text>\n                مقدار دهی به پراپ ها\n            </Text>\n            <Code language=\"jsx\">\n                {[\n                    '<HpSwitch reverse/>',\n                    'Or',\n                    '<HpSwitch reverse={true}/>'\n                ].join('\\n')}\n            </Code>\n            <Text>\n                رویدادها\n            </Text>\n            <Code language=\"jsx\">\n                {[\n                    '<HpSwitch onHpChange={() => alert(\\'The switch toggled!\\')} />'\n                ].join('\\n')}\n            </Code>\n        </LayoutDefault>\n    )\n}\n\nexport default FrameworkReact;\n"],"sourceRoot":""}