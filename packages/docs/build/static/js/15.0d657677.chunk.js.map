{"version":3,"sources":["views/framework/vue/vue.tsx"],"names":["FrameworkVue","constant","language","join","href"],"mappings":"yHAAA,mDAmHeA,UA9GgB,WAE3B,OACI,kBAAC,IAAD,KACI,kBAAC,OAAD,YAGA,kBAAC,OAAD,osBAGA,kBAAC,OAAD,uDACiBC,IADjB,gDAGA,kBAAC,OAAD,CAAMC,SAAS,QACV,CACG,eAAiBD,KACnBE,KAAK,OAEX,kBAAC,OAAD,yDAGA,kBAAC,OAAD,CAAMD,SAAS,MAAM,CACjB,yCAA4CD,IAAwC,KACpF,GACA,2BACFE,KAAK,OAEP,kBAAC,OAAD,gCAGA,kBAAC,OAAD,sKAGA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,wDACFC,KAAK,OAEX,kBAAC,OAAD,gEAC4D,uBAAGC,KAAMH,KAA0CA,KAD/G,qDAEuDA,IAFvD,mEAG0DA,IAH1D,KAKA,kBAAC,OAAD,CAAMC,SAAS,MACV,CACG,kCAAoCD,IAA+B,YACrEE,KAAK,OAEX,kBAAC,OAAD,8MAKA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,yBACA,+BACA,yDAA4DD,IAAwC,KACpG,GACA,kCAAoCA,IAA+B,WACnE,GACA,uDACA,GACA,YACA,wBACA,sBACFE,KAAK,OAEX,kBAAC,OAAD,yJAEKF,IAFL,wnBAKA,kBAAC,OAAD,CAAMC,SAAS,QACV,CACG,gBACFC,KAAK,OAEX,kBAAC,OAAD,6GAGA,kBAAC,OAAD,CAAMD,SAAS,OACV,CACG,uBACA,KACA,gCACFC,KAAK,OAEX,kBAAC,OAAD,yDAGA,kBAAC,OAAD,CAAMD,SAAS,MACV,CACG,aACA,qCACA,cACA,GACA,WACA,sBACA,oBACA,wDACA,WACA,QACA,cACFC,KAAK","file":"static/js/15.0d657677.chunk.js","sourcesContent":["import React from 'react';\nimport * as constant from 'src/constant';\nimport { Code, Text } from 'src/components';\nimport { LayoutDefault } from 'src/layouts';\n\nconst FrameworkVue: React.FC = () => {\n\n    return (\n        <LayoutDefault>\n            <Text>\n                Vue\n            </Text>\n            <Text>\n                ویو یکی از فریم ورکهایی است که با وب کامپوننت ها سازگاری کامل دارد. برای استفاده از وب کامپوننت ها داخل اپلیکیشن ویو مراحل زیر رادنبال کنید\n            </Text>\n            <Text>\n                1- نصب پکیج {constant.PLATFORM_NAME} توسط نود\n            </Text>\n            <Code language=\"html\">\n                {[\n                    'npm install ' + constant.FRAMEWORK_VUE_PACKAGE_NAME,\n                ].join('\\n')}\n            </Code>\n            <Text>\n                2- Bind the custom elements to the window object\n            </Text>\n            <Code language=\"js\">{[\n                'import { defineCustomElements } from \\'' + constant.FRAMEWORK_VUE_PACKAGE_IMPORT + '\\';',\n                '',\n                'defineCustomElements();',\n            ].join('\\n')}\n            </Code>\n            <Text>\n                Edge and IE11 polyfills\n            </Text>\n            <Text>\n                If you want your custom elements to be able to work on older browsers, you should add the applyPolyfills() that surround the defineCustomElements() function.\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'applyPolyfills().then(() => defineCustomElements());',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                3- telling Vue to ignore the custom element tags more = <a href={constant.FRAMEWORK_VUE_IGNORED_ELEMENTS}>{constant.FRAMEWORK_VUE_IGNORED_ELEMENTS}</a>\n                Tell Vue to ignore all components defined in the '{constant.FRAMEWORK_VUE_PACKAGE_NAME}' package.\n                The regex assumes all components names are prefixed '{constant.PLATFORM_TAG_PREFIX}'\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'Vue.config.ignoredElements = [/' + constant.PLATFORM_TAG_PREFIX + '-\\\\w*/];',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                و در نهایت فایل\n                main.js\n                به شکل زیر در خواهد آمد\n            </Text>\n            <Code language=\"js\">\n                {[\n                    'import Vue from \\'vue\\';',\n                    'import App from \\'./App.vue\\';',\n                    'import { applyPolyfills, defineCustomElements } from \\'' + constant.FRAMEWORK_VUE_PACKAGE_IMPORT + '\\';',\n                    '',\n                    'Vue.config.ignoredElements = [/' + constant.PLATFORM_TAG_PREFIX + '-\\\\w*/];',\n                    '',\n                    'applyPolyfills().then(() => defineCustomElements());',\n                    '',\n                    'new Vue({',\n                    '  render: h => h(App)',\n                    '}).$mount(\\'#app\\');',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                4- تمامی کامپوننت های موجود در\n                {constant.PLATFORM_NAME}\n                مانند یک تگ محلی(مثل دیو و ویدئو و ...) در پروژه ویو قابل دسترس خواهند بود. کد زیر را در سکشن تمپلیت ویو اضافه کنید و نتیجه را ببینید\n            </Text>\n            <Code language=\"html\">\n                {[\n                    '<hp-switch/>',\n                ].join('\\n')}\n            </Code>\n            <Text>\n                مقدار دهی به پراپ ها\n            </Text>\n            <Code language=\"jsx\">\n                {[\n                    '<hp-switch reverse/>',\n                    'Or',\n                    '<hp-switch :reverse=\"true\"/>'\n                ].join('\\n')}\n            </Code>\n            <Text>\n                رویدادها\n            </Text>\n            <Code language=\"js\">\n                {[\n                    '<template>',\n                    '   <hp-switch @hpChange=\"change\"/>',\n                    '</template>',\n                    '',\n                    '<script>',\n                    '   export default {',\n                    '       methods: {',\n                    '           change: () => alert(\\'The switch toggled!\\')',\n                    '       }',\n                    '   };',\n                    '</script>'\n                ].join('\\n')}\n            </Code>\n        </LayoutDefault >\n    )\n}\n\nexport default FrameworkVue;"],"sourceRoot":""}