{"version":3,"sources":["../../core/dist/esm/index-b4553237.js","services/markup/markup.ts","services/router/router.tsx","../../core/dist/esm lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../../core/dist/esm/loader.js","../../ports/react/loader/index.js","views/component/details/details.route.ts","views/framework/angular/angular.route.ts","views/framework/javascript/javascript.route.ts","views/framework/overview/overview.route.ts","views/framework/react/react.route.ts","views/framework/vue/vue.route.ts","views/home/home.route.ts","views/root/root.tsx","../../core/dist/esm/polyfills/index.js","index.tsx"],"names":["scopeId","hostTagName","queuePending","win","window","doc","document","head","plt","$flags$","$resourcesUrl$","jmp","h","raf","requestAnimationFrame","ael","el","eventName","listener","opts","addEventListener","rel","removeEventListener","ce","CustomEvent","promiseResolve","v","Promise","resolve","supportsConstructibleStylesheets","CSSStyleSheet","e","HYDRATED_CSS","XLINK_NS","rootAppliedStyles","WeakMap","registerStyle","cssText","allowCS","style","styles","get","replace","set","attachStyles","hostRef","cmpMeta","$cmpMeta$","elm","$hostElement$","flags","endAttachStyles","$tagName$","styleContainerNode","mode","hostElm","getScopeId","nodeType","styleElm","appliedStyles","Set","has","createElement","innerHTML","insertBefore","querySelector","add","adoptedStyleSheets","includes","addStyle","shadowRoot","getRootNode","classList","cmp","EMPTY_OBJ","isComplexType","o","nodeName","vnodeData","child","key","simple","lastSimple","vNodeChildren","walk","c","i","length","Array","isArray","String","$text$","push","newVNode","children","classData","className","class","Object","keys","filter","k","join","vdomFnUtils","vnode","$attrs$","$children$","$key$","tag","text","$tag$","$elm$","Host","forEach","cb","map","convertToPublic","convertToPrivate","node","vattrs","vchildren","vkey","vname","$name$","vtag","vtext","assign","name","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses","parseClassList","newClasses","remove","prop","removeProperty","setProperty","isComplex","tagName","n","xlink","getAttribute","removeAttributeNS","removeAttribute","setAttributeNS","setAttribute","slice","parseClassListRegex","value","split","updateElement","oldVnode","newVnode","isSvgMode","host","oldVnodeAttrs","newVnodeAttrs","undefined","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","createTextNode","appendChild","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","callNodeRefs","updateChildren","oldCh","newCh","elmToMove","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","isSameVnode","patch","nextSibling","parentNode","vnode1","vnode2","oldVNode","oldChildren","newChildren","textContent","data","vNode","ref","renderVdom","renderFnResults","$vnode$","rootVnode","$attrsToReflect$","propName","attribute","getElement","getHostRef","createEvent","emit","detail","emitEvent","bubbles","composed","cancelable","ev","dispatchEvent","attachToAncestor","ancestorComponent","$onRenderResolve$","r","scheduleUpdate","isInitialLoad","$ancestorComponent$","writeTask","dispatchHooks","promise","endSchedule","instance","$lazyInstance$","safeCall","then","updateComponent","a","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","all","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","nextTick","who","documentElement","namespace","method","arg","thenFn","setValue","newVal","propValue","propType","oldVal","$instanceValues$","$members$","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","watchers","members","entries","prototype","memberFlags","defineProperty","this","configurable","enumerable","attrNameToPropName","Map","attributeChangedCallback","attrName","_oldValue","observedAttributes","m","initializeComponent","hmrVersionId","loadModule","endLoad","isProxied","endNewInstance","fireConnectedCallback","endRegisterStyles","schedule","connectedCallback","endConnected","hasOwnProperty","disconnectedCallback","bootstrapLazy","lazyBundles","appLoadFallback","options","endBootstrap","cmpTags","exclude","customElements","metaCharset","visibilityStyle","deferredConnectedCallbacks","isBootstrapping","URL","resourcesUrl","baseURI","href","lazyBundle","compactMeta","$listeners$","HostElement","self","registerHost","attachShadow","clearTimeout","$onReadyPromise$","HTMLElement","$lazyBundleId$","define","firstChild","setTimeout","hostRefs","registerInstance","lazyInstance","console","error","cmpModules","exportName","bundleId","module","importedModule","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","performance","now","parse","marked","routes","register","route","toPath","to","state","find","path","generatePath","useRouter","result","location","useLocation","match","matchPath","pathname","Link","webpackAsyncContext","req","__webpack_require__","Error","code","ids","id","exports","defineCustomElements","Reflect","construct","constructor","setPrototypeOf","load","Router","exact","Loading","Component","Lazy","React","lazy","Root","fallback","promises","Element","closest","matches","startsWith","endsWith","NodeList","fetch","u","searchParams","checkIfURLIsSupported","applyPolyfills","ReactDOM","StrictMode","getElementById"],"mappings":"2WAEIA,EACAC,E,wFAEAC,GAAe,EACbC,EAAwB,qBAAXC,OAAyBA,OAAS,GAC/CC,EAAMF,EAAIG,UAAY,CAAEC,KAAM,IAC9BC,EAAM,CACRC,QAAS,EACTC,eAAgB,GAChBC,IAAK,SAAAC,GAAC,OAAIA,KACVC,IAAK,SAAAD,GAAC,OAAIE,sBAAsBF,IAChCG,IAAK,SAACC,EAAIC,EAAWC,EAAUC,GAA1B,OAAmCH,EAAGI,iBAAiBH,EAAWC,EAAUC,IACjFE,IAAK,SAACL,EAAIC,EAAWC,EAAUC,GAA1B,OAAmCH,EAAGM,oBAAoBL,EAAWC,EAAUC,IACpFI,GAAI,SAACN,EAAWE,GAAZ,OAAqB,IAAIK,YAAYP,EAAWE,KAElDM,EAAiB,SAACC,GAAD,OAAOC,QAAQC,QAAQF,IACxCG,EAAmD,WACjD,IAEI,OADA,IAAIC,eACG,EAEX,MAAOC,IACP,OAAO,EAN0C,GASnDC,EAAe,mDACfC,EAAW,+BAeXC,EAAoB,IAAIC,QACxBC,EAAgB,SAACpC,EAASqC,EAASC,GACrC,IAAIC,EAAQC,GAAOC,IAAIzC,GACnB6B,GAAoCS,GACpCC,EAASA,GAAS,IAAIT,eAChBY,QAAQL,GAGdE,EAAQF,EAEZG,GAAOG,IAAI3C,EAASuC,IAmClBK,EAAe,SAACC,GAClB,IAAMC,EAAUD,EAAQE,UAClBC,EAAMH,EAAQI,cACdC,EAAQJ,EAAQrC,QAChB0C,GAA6CL,EAAQM,UA7DhD,cA8DLpD,EAtCO,SAACqD,EAAoBP,EAASQ,EAAMC,GACjD,IAAIvD,EAAUwD,EAAWV,GACrBP,EAAQC,GAAOC,IAAIzC,GAIvB,GADAqD,EAAqD,KAAhCA,EAAmBI,SAAyCJ,EAAqBhD,EAClGkC,EACA,GAAqB,kBAAVA,EAAoB,CAC3Bc,EAAqBA,EAAmB9C,MAAQ8C,EAChD,IACIK,EADAC,EAAgBzB,EAAkBO,IAAIY,GAErCM,GACDzB,EAAkBS,IAAIU,EAAqBM,EAAgB,IAAIC,KAE9DD,EAAcE,IAAI7D,MAGX0D,EAAWrD,EAAIyD,cAAc,UACpBC,UAAYxB,EAEzBc,EAAmBW,aAAaN,EAAUL,EAAmBY,cAAc,SAE3EN,GACAA,EAAcO,IAAIlE,SAInBqD,EAAmBc,mBAAmBC,SAAS7B,KACtDc,EAAmBc,mBAAnB,sBAA4Cd,EAAmBc,oBAA/D,CAAmF5B,KAG3F,OAAOvC,EAOSqE,CAAUrB,EAAIsB,WAAatB,EAAIsB,WAAatB,EAAIuB,cAAezB,GAClE,GAARI,IAQDF,EAAI,QAAUhD,EACdgD,EAAIwB,UAAUN,IAAIlE,EAAU,OAEhCmD,KAEEK,EAAa,SAACiB,EAAKnB,GAAN,MAAe,MAAUmB,EAAIrB,WAQ1CsB,EAAY,GAEZC,EAAgB,SAACC,GAGnB,MAAa,YADbA,SAAWA,IACoB,aAANA,GAavBhE,EAAI,SAACiE,EAAUC,GAA2B,IAC5C,IAAIC,EAAQ,KACRC,EAAM,KACNC,GAAS,EACTC,GAAa,EACbC,EAAgB,GACdC,EAAO,SAAPA,EAAQC,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAEE,OAAQD,IAC1BP,EAAQM,EAAEC,GACNE,MAAMC,QAAQV,GACdK,EAAKL,GAES,MAATA,GAAkC,mBAAVA,KACxBE,EAA6B,oBAAbJ,IAA4BF,EAAcI,MAC3DA,EAAQW,OAAOX,IAEfE,GAAUC,EAEVC,EAAcA,EAAcI,OAAS,GAAGI,QAAUZ,EAIlDI,EAAcS,KAAKX,EAASY,EAAS,KAAMd,GAASA,GAExDG,EAAaD,IAxBmB,mBAAba,EAAa,iCAAbA,EAAa,kBA6B5C,GADAV,EAAKU,GACDhB,EAAW,CAENA,EAAUE,MACXA,EAAMF,EAAUE,KAGhB,IAAMe,EAAYjB,EAAUkB,WAAalB,EAAUmB,MAC/CF,IACAjB,EAAUmB,MACe,kBAAdF,EACDA,EACAG,OAAOC,KAAKJ,GACTK,QAAO,SAAAC,GAAC,OAAIN,EAAUM,MACtBC,KAAK,MAI9B,GAAyB,oBAAbzB,EAER,OAAOA,EAAuB,OAAdC,EAAqB,GAAKA,EAAWK,EAAeoB,GAExE,IAAMC,EAAQX,EAAShB,EAAU,MAQjC,OAPA2B,EAAMC,QAAU3B,EACZK,EAAcI,OAAS,IACvBiB,EAAME,WAAavB,GAGnBqB,EAAMG,MAAQ3B,EAEXwB,GAELX,EAAW,SAACe,EAAKC,GACnB,IAAML,EAAQ,CACV/F,QAAS,EACTqG,MAAOF,EACPjB,OAAQkB,EACRE,MAAO,KACPL,WAAY,KAGZF,QAAgB,KAGhBA,MAAc,MAElB,OAAOA,GAELQ,EAAO,GAEPT,EAAc,CAChBU,QAAS,SAACnB,EAAUoB,GAAX,OAAkBpB,EAASqB,IAAIC,GAAiBH,QAAQC,IACjEC,IAAK,SAACrB,EAAUoB,GAAX,OAAkBpB,EAASqB,IAAIC,GAAiBD,IAAID,GAAIC,IAAIE,KAE/DD,EAAkB,SAACE,GAAD,MAAW,CAC/BC,OAAQD,EAAKb,QACbe,UAAWF,EAAKZ,WAChBe,KAAMH,EAAKX,MACXe,MAAOJ,EAAKK,OACZC,KAAMN,EAAKR,MACXe,MAAOP,EAAK3B,SAEV0B,EAAmB,SAACC,GACtB,GAAyB,oBAAdA,EAAKM,KAAqB,CACjC,IAAM9C,EAAYoB,OAAO4B,OAAO,GAAIR,EAAKC,QAOzC,OANID,EAAKG,OACL3C,EAAUE,IAAMsC,EAAKG,MAErBH,EAAKI,QACL5C,EAAUiD,KAAOT,EAAKI,OAEnB9G,EAAC,WAAD,GAAE0G,EAAKM,KAAM9C,GAAb,mBAA4BwC,EAAKE,WAAa,MAEzD,IAAMhB,EAAQX,EAASyB,EAAKM,KAAMN,EAAKO,OAKvC,OAJArB,EAAMC,QAAUa,EAAKC,OACrBf,EAAME,WAAaY,EAAKE,UACxBhB,EAAMG,MAAQW,EAAKG,KACnBjB,EAAMmB,OAASL,EAAKI,MACblB,GAULwB,EAAc,SAAChF,EAAKiF,EAAYC,EAAUC,EAAUC,EAAOlF,GAC7D,GAAIgF,IAAaC,EAAU,CACvB,IAAIE,EAASC,GAAkBtF,EAAKiF,GAChCM,EAAKN,EAAWO,cACpB,GAAoB,UAAfP,EAAwB,CACzB,IAAMzD,EAAYxB,EAAIwB,UAChBiE,EAAaC,EAAeR,GAC5BS,EAAaD,EAAeP,GAClC3D,EAAUoE,OAAV,MAAApE,EAAS,YAAWiE,EAAWrC,QAAO,SAAAf,GAAC,OAAIA,IAAMsD,EAAWvE,SAASiB,QACrEb,EAAUN,IAAV,MAAAM,EAAS,YAAQmE,EAAWvC,QAAO,SAAAf,GAAC,OAAIA,IAAMoD,EAAWrE,SAASiB,aAEjE,GAAoB,UAAf4C,EAAwB,CAG1B,IAAK,IAAMY,KAAQX,EACVC,GAA8B,MAAlBA,EAASU,KACjBA,EAAKzE,SAAS,KACfpB,EAAIT,MAAMuG,eAAeD,GAGzB7F,EAAIT,MAAMsG,GAAQ,IAKlC,IAAK,IAAMA,KAAQV,EACVD,GAAYC,EAASU,KAAUX,EAASW,KACpCA,EAAKzE,SAAS,KACfpB,EAAIT,MAAMwG,YAAYF,EAAMV,EAASU,IAGrC7F,EAAIT,MAAMsG,GAAQV,EAASU,SAKtC,GAAoB,QAAfZ,QAEL,GAAoB,QAAfA,EAEFE,GACAA,EAASnF,QAGZ,GAAQqF,GAA8B,MAAlBJ,EAAW,IAAgC,MAAlBA,EAAW,GAqCxD,CAED,IAAMe,EAAYrE,EAAcwD,GAChC,IAAKE,GAAWW,GAA0B,OAAbb,KAAwBC,EACjD,IACI,GAAKpF,EAAIiG,QAAQ7E,SAAS,KAYtBpB,EAAIiF,GAAcE,MAZU,CAC5B,IAAIe,EAAgB,MAAZf,EAAmB,GAAKA,EAEb,SAAfF,EACAI,GAAS,EAGQ,MAAZH,GAAoBlF,EAAIiF,IAAeiB,IAC5ClG,EAAIiF,GAAciB,IAO9B,MAAOnH,IASX,IAAIoH,GAAQ,EAEJZ,KAAQA,EAAKA,EAAG7F,QAAQ,YAAa,OACrCuF,EAAaM,EACbY,GAAQ,GAGA,MAAZhB,IAAiC,IAAbA,GACH,IAAbA,GAAuD,KAAjCnF,EAAIoG,aAAanB,KAClCkB,EACDnG,EAAIqG,kBAAkBpH,EAAUgG,GAGhCjF,EAAIsG,gBAAgBrB,MAIrBI,GAAkB,EAARnF,GAA0BkF,KAAWY,IACtDb,GAAwB,IAAbA,EAAoB,GAAKA,EAC/BgB,EACDnG,EAAIuG,eAAetH,EAAUgG,EAAYE,GAGzCnF,EAAIwG,aAAavB,EAAYE,SA5EjCF,EARkB,MAAlBA,EAAW,GAQEA,EAAWwB,MAAM,GAEzBnB,GAAkBnI,EAAKoI,GAKfA,EAAGkB,MAAM,GAQTlB,EAAG,GAAKN,EAAWwB,MAAM,GAEtCvB,GACA1H,EAAIa,IAAI2B,EAAKiF,EAAYC,GAAU,GAEnCC,GACA3H,EAAIO,IAAIiC,EAAKiF,EAAYE,GAAU,KA6D7CuB,EAAsB,KACtBhB,EAAiB,SAACiB,GAAD,OAAaA,EAAaA,EAAMC,MAAMF,GAAjB,IACtCG,EAAgB,SAACC,EAAUC,EAAUC,EAAW/B,GAIlD,IAAMjF,EAAkC,KAA5B+G,EAAShD,MAAMtD,UAA0CsG,EAAShD,MAAMkD,KAAOF,EAAShD,MAAMkD,KAAOF,EAAShD,MACpHmD,EAAiBJ,GAAYA,EAASrD,SAAY/B,EAClDyF,EAAgBJ,EAAStD,SAAW/B,EAGtC,IAAKuD,KAAciC,EACTjC,KAAckC,GAChBnC,EAAYhF,EAAKiF,EAAYiC,EAAcjC,QAAamC,EAAWJ,EAAWD,EAAStJ,SAKnG,IAAKwH,KAAckC,EACfnC,EAAYhF,EAAKiF,EAAYiC,EAAcjC,GAAakC,EAAclC,GAAa+B,EAAWD,EAAStJ,UAGzG4J,EAAY,SAAZA,EAAaC,EAAgBC,EAAgBC,EAAYC,GAE3D,IAEIzH,EACA0H,EAHA7E,EAAW0E,EAAe7D,WAAW8D,GACrClF,EAAI,EAGR,GAAyB,OAApBO,EAASF,OAEV3C,EAAM6C,EAASkB,MAAQ1G,EAAIsK,eAAe9E,EAASF,aAcnD,GAVA3C,EAAM6C,EAASkB,MAAU1G,EAAIyD,cAAe+B,EAASiB,OAGjD+C,EAAc,KAAMhE,GArahB,GAgHU,MAuTP7F,GAAYgD,EAAI,UAAYhD,GAGnCgD,EAAIwB,UAAUN,IAAKlB,EAAI,QAAUhD,GAEjC6F,EAASa,WACT,IAAKpB,EAAI,EAAGA,EAAIO,EAASa,WAAWnB,SAAUD,GAE1CoF,EAAYL,EAAUC,EAAgBzE,EAAUP,KAI5CtC,EAAI4H,YAAYF,GAKhC,OAAO1H,GAEL6H,EAAY,SAACJ,EAAWK,EAAQC,EAAaC,EAAQC,EAAUC,GACjE,IACIR,EADAS,EAAiBV,EAKrB,IAHKU,EAAa7G,YAAc6G,EAAalC,UAAYhJ,IACrDkL,EAAeA,EAAa7G,YAEzB2G,GAAYC,IAAUD,EACrBD,EAAOC,KACPP,EAAYL,EAAU,KAAMU,EAAaE,MAErCD,EAAOC,GAAUlE,MAAQ2D,EACzBS,EAAanH,aAAa0G,EAAYI,KAKhDM,EAAe,SAACJ,EAAQC,EAAUC,EAAQ1E,EAAOxD,GACnD,KAAOiI,GAAYC,IAAUD,GACpBzE,EAAQwE,EAAOC,MAChBjI,EAAMwD,EAAMO,MACZsE,EAAa7E,GAEbxD,EAAI4F,WAIV0C,EAAiB,SAACb,EAAWc,EAAO1F,EAAU2F,GAahD,IAZA,IAUIlE,EACAmE,EAXAC,EAAc,EACdC,EAAc,EACdC,EAAW,EACXtG,EAAI,EACJuG,EAAYN,EAAMhG,OAAS,EAC3BuG,EAAgBP,EAAM,GACtBQ,EAAcR,EAAMM,GACpBG,EAAYR,EAAMjG,OAAS,EAC3B0G,EAAgBT,EAAM,GACtBU,EAAcV,EAAMQ,GAGjBN,GAAeG,GAAaF,GAAeK,GAC9C,GAAqB,MAAjBF,EAEAA,EAAgBP,IAAQG,QAEvB,GAAmB,MAAfK,EACLA,EAAcR,IAAQM,QAErB,GAAqB,MAAjBI,EACLA,EAAgBT,IAAQG,QAEvB,GAAmB,MAAfO,EACLA,EAAcV,IAAQQ,QAErB,GAAIG,EAAYL,EAAeG,GAChCG,EAAMN,EAAeG,GACrBH,EAAgBP,IAAQG,GACxBO,EAAgBT,IAAQG,QAEvB,GAAIQ,EAAYJ,EAAaG,GAC9BE,EAAML,EAAaG,GACnBH,EAAcR,IAAQM,GACtBK,EAAcV,IAAQQ,QAErB,GAAIG,EAAYL,EAAeI,GAChCE,EAAMN,EAAeI,GACrBzB,EAAUzG,aAAa8H,EAAc/E,MAAOgF,EAAYhF,MAAMsF,aAC9DP,EAAgBP,IAAQG,GACxBQ,EAAcV,IAAQQ,QAErB,GAAIG,EAAYJ,EAAaE,GAC9BG,EAAML,EAAaE,GACnBxB,EAAUzG,aAAa+H,EAAYhF,MAAO+E,EAAc/E,OACxDgF,EAAcR,IAAQM,GACtBI,EAAgBT,IAAQG,OAEvB,CAIG,IAFJC,GAAY,EAEHtG,EAAIoG,EAAapG,GAAKuG,IAAavG,EACpC,GAAIiG,EAAMjG,IAAyB,OAAnBiG,EAAMjG,GAAGqB,OAAkB4E,EAAMjG,GAAGqB,QAAUsF,EAActF,MAAO,CAC/EiF,EAAWtG,EACX,MAIPsG,GAAY,IACbH,EAAYF,EAAMK,IACJ9E,QAAUmF,EAAcnF,MAClCQ,EAAO+C,EAAUkB,GAASA,EAAMI,GAAc9F,EAAU+F,IAGxDQ,EAAMX,EAAWQ,GACjBV,EAAMK,QAAYxB,EAClB9C,EAAOmE,EAAU1E,OAErBkF,EAAgBT,IAAQG,KAIxBrE,EAAO+C,EAAUkB,GAASA,EAAMI,GAAc9F,EAAU8F,GACxDM,EAAgBT,IAAQG,IAExBrE,GAEIwE,EAAc/E,MAAMuF,WAAWtI,aAAasD,EAAMwE,EAAc/E,OAK5E2E,EAAcG,EACdhB,EAAUJ,EAAmC,MAAxBe,EAAMQ,EAAY,GAAa,KAAOR,EAAMQ,EAAY,GAAGjF,MAAOlB,EAAU2F,EAAOG,EAAaK,GAE/GL,EAAcK,GACpBZ,EAAaG,EAAOG,EAAaG,IAGnCM,EAAc,SAACI,EAAQC,GAGzB,OAAID,EAAOzF,QAAU0F,EAAO1F,OAEbyF,EAAO5F,QAAU6F,EAAO7F,OAKrCyF,EAAQ,SAACK,EAAU5G,GACrB,IAAM7C,EAAO6C,EAASkB,MAAQ0F,EAAS1F,MACjC2F,EAAcD,EAAS/F,WACvBiG,EAAc9G,EAASa,WACvBE,EAAMf,EAASiB,MACfD,EAAOhB,EAASF,OACR,OAATkB,GAGgB,SAARD,GAMDiD,EAAc4C,EAAU5G,GAxkBxB,GA2kBa,OAAhB6G,GAAwC,OAAhBC,EAEzBrB,EAAetI,EAAK0J,EAAa7G,EAAU8G,GAEtB,OAAhBA,GAEoB,OAApBF,EAAS9G,SAEV3C,EAAI4J,YAAc,IAGtB/B,EAAU7H,EAAK,KAAM6C,EAAU8G,EAAa,EAAGA,EAAYpH,OAAS,IAE9C,OAAhBmH,GAENtB,EAAasB,EAAa,EAAGA,EAAYnH,OAAS,IAGhDkH,EAAS9G,SAAWkB,IAG1B7D,EAAI6J,KAAOhG,IAGbwE,EAAe,SAAfA,EAAgByB,GAEdA,EAAMrG,SAAWqG,EAAMrG,QAAQsG,KAAOD,EAAMrG,QAAQsG,IAAI,MACxDD,EAAMpG,YAAcoG,EAAMpG,WAAWS,IAAIkE,IAG3C2B,EAAa,SAACnK,EAASoK,GACzB,IA5ZY3F,EA4ZN/D,EAAUV,EAAQI,cAClBH,EAAUD,EAAQE,UAClB0J,EAAW5J,EAAQqK,SAAWrH,EAAS,KAAM,MAC7CsH,GA/ZM7F,EA+Za2F,IA/ZI3F,EAAKR,QAAUE,EA+ZAiG,EAAkBrM,EAAE,KAAM,KAAMqM,GAC5EhN,EAAcsD,EAAQ0F,QACjBnG,EAAQsK,mBACTD,EAAU1G,QAAU0G,EAAU1G,SAAW,GACzC3D,EAAQsK,iBAAiBjG,KAAI,mCAAEkG,EAAF,KAAYC,EAAZ,YAA4BH,EAAU1G,QAAQ6G,GAAa/J,EAAQ8J,OAEpGF,EAAUrG,MAAQ,KAClBqG,EAAU1M,SAAW,EACrBoC,EAAQqK,QAAUC,EAClBA,EAAUpG,MAAQ0F,EAAS1F,MAAUxD,EAAQe,YAAcf,EAEvDvD,EAAUuD,EAAQ,QAGtB6I,EAAMK,EAAUU,IAEdI,EAAa,SAACR,GAAD,OAAWS,GAAWT,GAAK9J,eACxCwK,EAAc,SAACV,EAAKhF,EAAM7E,GAC5B,IAAMF,EAAMuK,EAAWR,GACvB,MAAO,CACHW,KAAM,SAACC,GACH,OAAOC,EAAU5K,EAAK+E,EAAM,CACxB8F,WAAoB,EAAR3K,GACZ4K,YAAqB,EAAR5K,GACb6K,cAAuB,EAAR7K,GACfyK,cAKVC,EAAY,SAAC5K,EAAK+E,EAAM5G,GAC1B,IAAM6M,EAAKxN,EAAIe,GAAGwG,EAAM5G,GAExB,OADA6B,EAAIiL,cAAcD,GACXA,GAELE,EAAmB,SAACrL,EAASsL,GAC1BA,IAAsBtL,EAAQuL,mBAAqBD,EAAkB,QACtEA,EAAkB,OAAOvI,KAAK,IAAIjE,SAAQ,SAAA0M,GAAC,OAAKxL,EAAQuL,kBAAoBC,OAG9EC,EAAiB,SAACzL,EAAS0L,GAI7B,GAFI1L,EAAQpC,SAAW,KAEA,EAAlBoC,EAAQpC,SAAb,CAIAyN,EAAiBrL,EAASA,EAAQ2L,qBAKlC,OAAQC,IADS,kBAAMC,EAAc7L,EAAS0L,MAP1C1L,EAAQpC,SAAW,KAUrBiO,EAAgB,SAAC7L,EAAS0L,GAC5B,IAEII,EAFEC,GAA2C/L,EAAQE,UAAUK,UA1oBxD,cA2oBLyL,EAAYhM,EAAQiM,eAQ1B,OANIP,IAEII,EAAUI,GAASF,EAAU,sBAGrCD,IACOI,GAAKL,GAAS,kBAAMM,GAAgBpM,EAASgM,EAAUN,OAE5DU,GAAe,uCAAG,WAAOpM,EAASgM,EAAUN,GAA1B,yBAAAW,EAAA,sDAEdlM,EAAMH,EAAQI,cACmBJ,EAAQE,UAAUK,UAAnD+L,EAxpBK,aAypBLC,EAAKpM,EAAI,QACVuL,GAED3L,EAAaC,GAEsBA,EAAQE,UAAUK,UAAnDiM,EA9pBK,aAqqBCrC,EAAWnK,EAASyM,GAAWzM,EAASgM,IAI/CO,IAIDA,EAAGjI,KAAI,SAAAD,GAAE,OAAIA,OACblE,EAAI,aAAUoH,GAElBiF,IACAF,IAEUI,EAAmBvM,EAAI,OACvBwM,EAAa,kBAAMC,GAAoB5M,IACb,IAA5B0M,EAAiBhK,OACjBiK,KAGA7N,QAAQ+N,IAAIH,GAAkBP,KAAKQ,GACnC3M,EAAQpC,SAAW,EACnB8O,EAAiBhK,OAAS,GAtCd,4CAAH,0DA0Cf+J,GAAa,SAACzM,EAASgM,GACzB,IACIA,EAAYA,EAASc,SAEjB9M,EAAQpC,UAAW,GAGnBoC,EAAQpC,SAAW,EAG3B,MAAOsB,GACH6N,GAAa7N,GAEjB,OAAO8M,GAELY,GAAsB,SAAC5M,GACTA,EAAQE,UAAUK,UAAlC,IACMJ,EAAMH,EAAQI,cACd4M,EAjtBK,aAktBLhB,EAAYhM,EAAQiM,eACpBX,EAAoBtL,EAAQ2L,oBACV,GAAlB3L,EAAQpC,QAkBVoP,KAjBAhN,EAAQpC,SAAW,GAGfqP,GAAgB9M,GAGhB+L,GAASF,EAAU,oBAEvBgB,IAEIhN,EAAQkN,iBAAiB/M,GACpBmL,GACD6B,MAUJnN,EAAQuL,oBACRvL,EAAQuL,oBACRvL,EAAQuL,uBAAoBhE,GAEV,IAAlBvH,EAAQpC,SACRwP,IAAS,kBAAM3B,EAAezL,GAAS,MAE3CA,EAAQpC,UAAW,KAMrBuP,GAAa,SAACE,GAIZJ,GAAgBzP,EAAI8P,iBAExBF,IAAS,kBAAMrC,EAAUzN,EAAK,UAAW,CAAEwN,OAAQ,CAAEyC,UA7xBvC,kBA+xBZrB,GAAW,SAACF,EAAUwB,EAAQC,GAChC,GAAIzB,GAAYA,EAASwB,GACrB,IACI,OAAOxB,EAASwB,GAAQC,GAE5B,MAAOvO,GACH6N,GAAa7N,KAKnBiN,GAAO,SAACL,EAAS4B,GACnB,OAAO5B,GAAWA,EAAQK,KAAOL,EAAQK,KAAKuB,GAAUA,KAEtDT,GAAkB,SAAC9M,GAAD,OAAWA,EAAIwB,UAAUN,IAAI,aAsB/CsM,GAAW,SAACzD,EAAKM,EAAUoD,EAAQ3N,GAErC,IAvBwB4N,EAAWC,EAuB7B9N,EAAU2K,GAAWT,GACrB6D,EAAS/N,EAAQgO,iBAAiBpO,IAAI4K,GACtCnK,EAAQL,EAAQpC,QAChBoO,EAAYhM,EAAQiM,eAE1B,GA5BwB4B,EA2BID,EA3BOE,EA2BC7N,EAAQgO,UAAUzD,GAAU,GAAhEoD,EAzBiB,MAAbC,GAAsB/L,EAAc+L,GAgBjCA,EAfa,EAAXC,EAGoB,UAAdD,IAA8C,KAAdA,KAAsBA,GAEjD,EAAXC,EAGMjL,OAAOgL,GAGXA,KAcK,EAARxN,SAAsDkH,IAAXwG,IAAyBH,IAAWG,IAGnF/N,EAAQgO,iBAAiBlO,IAAI0K,EAAUoD,GAClC5B,GAAU,CAEX,GAAK/L,EAAQiO,YAAsB,IAAR7N,EAAgC,CACvD,IAAM8N,EAAelO,EAAQiO,WAAW1D,GACpC2D,GAEAA,EAAa7J,KAAI,SAAA8J,GACb,IAEIpC,EAASoC,GAAiBR,EAAQG,EAAQvD,GAE9C,MAAOtL,GACH6N,GAAa7N,OAKyC,KAAxD,GAARmB,IAKFoL,EAAezL,GAAS,KAKlCqO,GAAiB,SAACC,EAAMrO,EAASI,GACnC,GAAKJ,EAAQgO,UAAW,CACfK,EAAKC,WACNtO,EAAQiO,WAAaI,EAAKC,UAG9B,IAAMC,EAAUnL,OAAOoL,QAAQxO,EAAQgO,WACjCS,EAAYJ,EAAKI,UAkBvB,GAjBAF,EAAQlK,KAAI,YAAiC,uBAA/Bc,EAA+B,KAAlBuJ,EAAkB,wBACrB,GAAdA,GAA0C,EAARtO,GAA6C,GAAdsO,IAEnEtL,OAAOuL,eAAeF,EAAWtJ,EAAY,CACzCxF,IADyC,WAGrC,OArDD4K,EAqDuBpF,EArDVuF,GAqDIkE,MArDYb,iBAAiBpO,IAAI4K,GAAxD,IAAMA,GAuDH1K,IALyC,SAKrCwF,GAEAqI,GAASkB,KAAMzJ,EAAYE,EAAUrF,IAEzC6O,cAAc,EACdC,YAAY,OAIT,EAAR1O,EAAuC,CAC1C,IAAM2O,EAAqB,IAAIC,IAC/BP,EAAUQ,yBAA2B,SAAUC,EAAUC,EAAW9J,GAAU,WAC1E3H,EAAIG,KAAI,WACJ,IAAM0M,EAAWwE,EAAmBpP,IAAIuP,GACxC,EAAK3E,IAAyB,OAAblF,GAA+C,mBAAnB,EAAKkF,KAAkClF,MAK5FgJ,EAAKe,mBAAqBb,EACrBjL,QAAO,+CAAmB,GAAnB,KAAc,MACrBe,KAAI,YAAmB,uBAAjBkG,EAAiB,KAAP8E,EAAO,KAClBH,EAAWG,EAAE,IAAM9E,EAKzB,OAJAwE,EAAmBlP,IAAIqP,EAAU3E,GACrB,IAAP8E,EAAE,IACHrP,EAAQsK,iBAAiBxH,KAAK,CAACyH,EAAU2E,IAEtCA,MAInB,OAAOb,GAELiB,GAAmB,uCAAG,WAAOpP,EAAKH,EAASC,EAASuP,EAAclB,GAA5C,2BAAAjC,EAAA,yDAEsC,KAAtC,GAAlBrM,EAAQpC,SAFU,oBAKhBoC,EAAQpC,SAAW,KAInB0Q,EAAOmB,GAAWxP,IACTkM,KAVO,uBAYNuD,EAh4BP,aAo3Ba,SAaCpB,EAbD,OAaZA,EAbY,OAcZoB,IAdY,OAgBVpB,EAAKqB,YAKH1P,EAAQiO,WAAaI,EAAKC,SAE9BF,GAAeC,EAAMrO,EAAS,GAC9BqO,EAAKqB,WAAY,GAE+B1P,EAAQM,UAAtDqP,EAr5BH,aA05BC5P,EAAQpC,SAAW,EAMvB,IACI,IAAI0Q,EAAKtO,GAEb,MAAOd,GACH6N,GAAa7N,GAGbc,EAAQpC,UAAW,EAGnBoC,EAAQpC,SAAW,IAEvBgS,IACAC,GAAsB7P,EAAQiM,gBAE7BqC,EAAK5O,QAEFA,EAAQ4O,EAAK5O,MACXvC,EAAUwD,EAAWV,GACtBN,GAAOqB,IAAI7D,KAC2C8C,EAAQM,UAAzDuP,EAp7BP,aAq7BCvQ,EAAcpC,EAASuC,KAA4B,EAAlBO,EAAQrC,UACzCkS,MA3DY,QAgElBxE,EAAoBtL,EAAQ2L,oBAC5BoE,EAAW,kBAAMtE,EAAezL,GAAS,IAC1CsL,GAAqBA,EAAkB,QAOxCA,EAAkB,QAAQvI,KAAKgN,GAG/BA,IA5EoB,4CAAH,8DA+EnBF,GAAwB,SAAC7D,GAEvBE,GAASF,EAAU,sBAGrBgE,GAAoB,SAAC7P,GACvB,GAAkD,KAA/B,EAAdxC,EAAIC,SAA4C,CACjD,IAAMoC,EAAU2K,GAAWxK,GACrBF,EAAUD,EAAQE,UAClB+P,GAA+ChQ,EAAQM,UAn9BtD,cAo9BP,GAAwB,EAAlBP,EAAQpC,QAoCViS,GAAsB7P,EAAQiM,oBApCa,CAE3CjM,EAAQpC,SAAW,EAKf,IADA,IAAI0N,EAAoBnL,EAChBmL,EAAoBA,EAAkB7B,YAAc6B,EAAkBlE,MAG1E,GACIkE,EAAkB,OAAQ,CAG1BD,EAAiBrL,EAAUA,EAAQ2L,oBAAsBL,GACzD,MAMPrL,EAAQgO,WACT5K,OAAOoL,QAAQxO,EAAQgO,WAAW3J,KAAI,YAAiC,uBAA/Bc,EAA+B,KACnE,GAAkB,GADiD,wBAChCjF,EAAI+P,eAAe9K,GAAa,CAC/D,IAAM0B,EAAQ3G,EAAIiF,UACXjF,EAAIiF,GACXjF,EAAIiF,GAAc0B,MAK1ByI,GAAoBpP,EAAKH,EAASC,GAO1CgQ,MAGFE,GAAuB,SAAChQ,GAC1B,GAAkD,KAA/B,EAAdxC,EAAIC,SAA4C,CACjD,IACMoO,EADUrB,GAAWxK,GACD8L,eAEtBC,GAASF,EAAU,0BAIzBoE,GAAgB,SAACC,GAA8B,IAS7CC,EAT4BC,EAAiB,uDAAP,GACpCC,EAvgCK,aAwgCLC,EAAU,GACVC,EAAUH,EAAQG,SAAW,GAC7BC,EAAiBrT,EAAIqT,eACrBjT,EAAOF,EAAIE,KACXkT,EAA4BlT,EAAK0D,cAAc,iBAC/CyP,EAAgCrT,EAAIyD,cAAc,SAClD6P,EAA6B,GAE/BC,GAAkB,EACtB1N,OAAO4B,OAAOtH,EAAK4S,GACnB5S,EAAIE,eAAiB,IAAImT,IAAIT,EAAQU,cAAgB,KAAMzT,EAAI0T,SAASC,KACxEd,EAAY/L,KAAI,SAAA8M,GAAU,OAAIA,EAAW,GAAG9M,KAAI,SAAA+M,GAC5C,IAAMpR,EAAU,CACZrC,QAASyT,EAAY,GACrB9Q,UAAW8Q,EAAY,GACvBpD,UAAWoD,EAAY,GACvBC,YAAaD,EAAY,IAGzBpR,EAAQgO,UAAYoD,EAAY,GAGhCpR,EAAQsK,iBAAmB,GAG3BtK,EAAQiO,WAAa,GAEzB,IAAM9H,EAAWnG,EAAQM,UACnBgR,EAAW,kDAEb,WAAYC,GAAM,iCAEd,cAAMA,GACNA,EAAO,eACPC,GAAaD,EAAMvR,GACI,EAAlBA,EAAQrC,SAOD4T,EAAKE,aAAa,CAAEjR,KAAM,SAZxB,EAFL,gEAmBO,WACZ6P,IACAqB,aAAarB,GACbA,EAAkB,MAElBS,EAEAD,EAA2B/N,KAAK8L,MAGhClR,EAAIG,KAAI,kBAAMkS,GAAkB,QA7B3B,6CAgCU,WACnBrS,EAAIG,KAAI,kBAAMqS,GAAqB,QAjC1B,yCAoCT,OAAOxF,GAAWkE,MAAM+C,qBApCf,eAAiBC,cAuClC5R,EAAQ6R,eAAiBV,EAAW,GAC/BV,EAAQnP,SAAS6E,IAAauK,EAAe/Q,IAAIwG,KAClDqK,EAAQ1N,KAAKqD,GACbuK,EAAeoB,OAAO3L,EAASiI,GAAekD,EAAatR,EAAS,WAIxE4Q,EAAgB3P,UAAYuP,EAAUtR,EACtC0R,EAAgBlK,aAAa,cAAe,IAC5CjJ,EAAKyD,aAAa0P,EAAiBD,EAAcA,EAAYpH,YAAc9L,EAAKsU,YAGpFjB,GAAkB,EACdD,EAA2BpO,OAC3BoO,EAA2BxM,KAAI,SAAA8C,GAAI,OAAIA,EAAK4I,uBAIxCrS,EAAIG,KAAI,kBAAOwS,EAAkB2B,WAAW9E,GAAY,OAIhEqD,KAEE0B,GAAW,IAAI5S,QACfqL,GAAa,SAACT,GAAD,OAASgI,GAAStS,IAAIsK,IACnCiI,GAAmB,SAACC,EAAcpS,GAAf,OAA2BkS,GAASpS,IAAKE,EAAQiM,eAAiBmG,EAAepS,IACpGyR,GAAe,SAACtR,EAAKF,GACvB,IAAMD,EAAU,CACZpC,QAAS,EACTwC,cAAeD,EACfD,UAAWD,EACX+N,iBAAkB,IAAIiB,KAO1B,OAJIjP,EAAQ4R,iBAAmB,IAAI9S,SAAQ,SAAA0M,GAAC,OAAKxL,EAAQkN,iBAAmB1B,KACxErL,EAAI,OAAS,GACbA,EAAI,QAAU,GAEX+R,GAASpS,IAAIK,EAAKH,IAEvByF,GAAoB,SAACtF,EAAKiF,GAAN,OAAqBA,KAAcjF,GACvD4M,GAAe,SAAC7N,GAAD,OAAOmT,QAAQC,MAAMpT,IACpCqT,GAA2B,IAAItD,IAC/BQ,GAAa,SAACxP,EAASD,EAASwP,GAElC,IAAMgD,EAAavS,EAAQM,UAAUV,QAAQ,KAAM,KAC7C4S,EAAWxS,EAAQ6R,eACnBY,EAAUH,GAAW3S,IAAI6S,GAC/B,OAAIC,EACOA,EAAOF,GAEX,kBAIFC,EAJE,cAIyBtG,MAAK,SAAAwG,GAIjC,OAFIJ,GAAWzS,IAAI2S,EAAUE,GAEtBA,EAAeH,KACvBzF,KAEDpN,GAAS,IAAIsP,IACb2D,GAAgB,GAChBC,GAAiB,GACjBC,GAAY,SAACC,EAAOC,GAAR,OAAkB,SAAC3O,GACjC0O,EAAMhQ,KAAKsB,GACNhH,IACDA,GAAe,EACX2V,GAAuB,EAAdrV,EAAIC,QACbwP,GAAS6F,IAGTtV,EAAIK,IAAIiV,OAIdC,GAAU,SAACH,GACb,IAAK,IAAItQ,EAAI,EAAGA,EAAIsQ,EAAMrQ,OAAQD,IAC9B,IACIsQ,EAAMtQ,GAAG0Q,YAAYC,OAEzB,MAAOlU,GACH6N,GAAa7N,GAGrB6T,EAAMrQ,OAAS,GAEbuQ,GAAQ,SAARA,IAIFC,GAAQN,IAGJM,GAAQL,KACHxV,EAAeuV,GAAclQ,OAAS,IAGvC/E,EAAIK,IAAIiV,IAId7F,GAAyB,SAAC/I,GAAD,OAAQzF,IAAiBuN,KAAK9H,IACvDuH,GAA0BkH,GAAUD,IAAgB,I,2XCjtC7CQ,E,OAAQC,E,+BCQRC,EAA8B,GAO9BC,EAAW,SAACC,GAErBF,EAAOxQ,KAAK0Q,IAGHC,EAAS,SAACC,GAA4B,IAAhBC,EAAe,uDAAP,GAEjCH,EAAQF,EAAOM,MAAK,SAACJ,GAAD,OAAWA,EAAMvO,OAASyO,KAE9CG,EAAOL,EAAQM,YAAaN,EAAMK,KAAgBF,GAASD,EAEjE,OAAOG,GAEEE,EAAY,WAErB,IAAMC,EAAc,CAChBP,UAKEQ,EAAWC,cAwBjB,OAtBA9Q,OAAOuL,eACHqF,EACA,QACA,CACIrU,IADJ,WAGQ,IAAK,IAAI6C,EAAI,EAAGA,EAAI8Q,EAAO7Q,OAAQD,IAAK,CAEpC,IAAMgR,EAAQF,EAAO9Q,GAEf2R,EAAQC,YAAUH,EAASI,SAAUb,GAE3C,GAAIW,EAAO,OAAOA,EAGtB,MAAO,IAEXrF,YAAY,EACZD,cAAc,IAIfmF,GAGEM,EAA8C,SAAC,GAA6B,IAA3BtR,EAA0B,EAA1BA,SAAU0Q,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAExE,OAAO,kBAAC,IAAD,CAAUD,GAAID,EAAOC,EAAIC,IAAS3Q,K,uDCnE7C,IAAIqB,EAAM,CACT,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,6BAA8B,CAC7B,GACA,KAGF,SAASkQ,EAAoBC,GAC5B,IAAIC,EAAoB3S,EAAEuC,EAAKmQ,GAC9B,OAAO3V,QAAQC,UAAUoN,MAAK,WAC7B,IAAIjN,EAAI,IAAIyV,MAAM,uBAAyBF,EAAM,KAEjD,MADAvV,EAAE0V,KAAO,mBACH1V,KAIR,IAAI2V,EAAMvQ,EAAImQ,GAAMK,EAAKD,EAAI,GAC7B,OAAOH,EAAoBxV,EAAE2V,EAAI,IAAI1I,MAAK,WACzC,OAAOuI,EAAoBI,MAG7BN,EAAoBlR,KAAO,WAC1B,OAAOD,OAAOC,KAAKgB,IAEpBkQ,EAAoBM,GAAK,GACzBpC,EAAOqC,QAAUP,G,wFC/BXQ,EAAuB,SAAC1X,EAAKiT,GACjC,MAAsB,qBAAXhT,OAA+BuB,QAAQC,UAJzCH,cAKSuN,MAAK,WACvB,OAAOiE,YAAc,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,UAAU,CAAC,MAAQ,CAAC,GAAG,SAAW,CAAC,KAAK,UAAY,CAAC,KAAK,CAAC,EAAE,gBAAgB,CAAC,MAAQ,CAAC,GAAG,OAAS,CAAC,MAAM,CAAC,EAAE,iBAAiB,CAAC,UAAY,CAAC,GAAG,OAAS,CAAC,MAAM,CAAC,EAAE,cAAc,CAAC,SAAW,CAAC,KAAK,MAAQ,CAAC,GAAG,OAAS,CAAC,MAAM,CAAC,EAAE,cAAc,CAAC,KAAO,CAAC,KAAK,QAAU,CAAC,KAAK,QAAU,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,UAAU,CAAC,aAAe,CAAC,EAAE,iBAAiB,eAAiB,CAAC,EAAE,oBAAoB,eAAiB,CAAC,EAAE,oBAAoB,eAAiB,CAAC,EAAE,oBAAoB,eAAiB,CAAC,EAAE,oBAAoB,eAAiB,CAAC,EAAE,oBAAoB,WAAa,CAAC,EAAE,eAAe,aAAe,CAAC,EAAE,kBAAkB,aAAe,CAAC,EAAE,kBAAkB,aAAe,CAAC,EAAE,kBAAkB,aAAe,CAAC,EAAE,kBAAkB,aAAe,CAAC,EAAE,kBAAkB,OAAS,CAAC,GAAG,QAAU,CAAC,EAAE,YAAY,QAAU,CAAC,EAAE,YAAY,QAAU,CAAC,GAAG,UAAY,CAAC,EAAE,cAAc,UAAY,CAAC,EAAE,cAAc,UAAY,CAAC,EAAE,cAAc,UAAY,CAAC,EAAE,cAAc,UAAY,CAAC,EAAE,cAAc,QAAU,CAAC,GAAG,SAAW,CAAC,GAAG,KAAO,CAAC,GAAG,OAAS,CAAC,EAAE,WAAW,OAAS,CAAC,EAAE,WAAW,OAAS,CAAC,EAAE,WAAW,OAAS,CAAC,EAAE,WAAW,OAAS,CAAC,EAAE,aAAa,CAAC,EAAE,eAAe,CAAC,UAAY,CAAC,IAAI,cAAc,YAAc,CAAC,IAAI,iBAAiB,YAAc,CAAC,IAAI,iBAAiB,YAAc,CAAC,IAAI,iBAAiB,YAAc,CAAC,IAAI,iBAAiB,YAAc,CAAC,IAAI,iBAAiB,GAAK,CAAC,KAAK,GAAK,CAAC,KAAK,GAAK,CAAC,KAAK,GAAK,CAAC,KAAK,GAAK,CAAC,KAAK,OAAS,CAAC,IAAI,WAAW,OAAS,CAAC,IAAI,WAAW,OAAS,CAAC,IAAI,WAAW,OAAS,CAAC,IAAI,WAAW,OAAS,CAAC,IAAI,WAAW,SAAW,CAAC,IAAI,cAAc,SAAW,CAAC,IAAI,cAAc,SAAW,CAAC,IAAI,cAAc,SAAW,CAAC,IAAI,cAAc,WAAa,CAAC,IAAI,gBAAgB,WAAa,CAAC,IAAI,gBAAgB,WAAa,CAAC,IAAI,gBAAgB,SAAW,CAAC,IAAI,aAAa,SAAW,CAAC,IAAI,aAAa,SAAW,CAAC,IAAI,aAAa,SAAW,CAAC,IAAI,aAAa,SAAW,CAAC,IAAI,aAAa,QAAU,CAAC,IAAI,YAAY,QAAU,CAAC,IAAI,YAAY,QAAU,CAAC,IAAI,YAAY,QAAU,CAAC,IAAI,YAAY,QAAU,CAAC,IAAI,gBAAgB,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,MAAQ,CAAC,GAAG,WAAa,CAAC,GAAG,QAAU,CAAC,GAAG,SAAW,CAAC,GAAG,WAAa,CAAC,GAAG,KAAO,CAAC,KAAK,QAAU,CAAC,KAAK,WAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,QAAU,CAAC,KAAK,SAAW,CAAC,KAAK,MAAQ,CAAC,KAAK,QAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,EAAE,kBAAkB,CAAC,QAAU,CAAC,IAAI,SAAW,CAAC,IAAI,UAAY,CAAC,IAAI,YAAc,CAAC,SAAUG,QCXl6E,WAAe,GAAI,qBAAuBhT,aAAU,IAAWA,OAAO0X,cAAW,IAAW1X,OAAOoT,eAAgB,CAAE,IAAItE,EAAIwF,YAAatU,OAAOsU,YAAc,WAAc,OAAOoD,QAAQC,UAAU7I,EAAG,GAAIwC,KAAKsG,cAAgBtD,YAAYnD,UAAYrC,EAAEqC,UAAWmD,YAAYnD,UAAUyG,YAActD,YAAaxO,OAAO+R,eAAevD,YAAaxF,IAA3V,G,WCCMoH,EAA6B,CAC/BvO,KAAM,0BACN4O,KAAM,kBACNuB,KAAM,kBAAM,6DAGhBC,IAAO9B,SAASC,GCNhB,IAAMA,EAA6B,CAC/BvO,KAAM,0BACN4O,KAAM,qBACNuB,KAAM,kBAAM,8DAGhBC,IAAO9B,SAASC,GCNhB,IAAMA,EAA6B,CAC/BvO,KAAM,6BACN4O,KAAM,wBACNuB,KAAM,kBAAM,8DAGhBC,IAAO9B,SAASC,GCNhB,IAAMA,EAA6B,CAC/BvO,KAAM,2BACN4O,KAAM,sBACNuB,KAAM,kBAAM,6DAGhBC,IAAO9B,SAASC,GCNhB,IAAMA,EAA6B,CAC/BvO,KAAM,wBACN4O,KAAM,mBACNuB,KAAM,kBAAM,8DAGhBC,IAAO9B,SAASC,GCNhB,IAAMA,EAA6B,CAC/BvO,KAAM,sBACN4O,KAAM,iBACNuB,KAAM,kBAAM,8DAGhBC,IAAO9B,SAASC,GCNhB,IAAMA,EAA6B,CAC/BvO,KAAM,aACN4O,KAAM,IACNyB,OAAO,EACPF,KAAM,kBAAM,iCAGhBC,IAAO9B,SAASC,G,mBCLV+B,EAAoB,kBAAM,6CAE1BC,EAAsC,SAAC,GAAe,IAAb3O,EAAY,EAAZA,MAErC4O,EAAOC,IAAMC,KAAK9O,GAExB,OAAO,kBAAC4O,EAAD,OAmBIG,EAhBQ,WACnB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKP,IAAO/B,OAAOjP,KAAI,SAACmP,GAAD,OACf,kBAAC,IAAD,eAAOtR,IAAKsR,EAAMvO,MAAQuO,EAAMK,MAAUL,GACtC,kBAAC,WAAD,CAAUqC,SAAU,kBAAC,EAAD,OAChB,kBAAC,EAAD,CAAWhP,MAAO2M,EAAM4B,gBCpB7C,WACL,IAAIU,EAAW,GACf,GAAsB,qBAAXxY,OAAwB,CACjC,IAAID,EAAMC,OAELD,EAAIqT,kBACNrT,EAAI0Y,SAAa1Y,EAAI0Y,QAAQtH,UAAUuH,SAAY3Y,EAAI0Y,QAAQtH,UAAUwH,SAAY5Y,EAAI0Y,QAAQtH,UAAU3I,QAAWzI,EAAI0Y,QAAQtH,UAAUhN,cAC7IqU,EAAShT,KAAK,mCAcd,oBAAsBM,OAAO4B,QAAW5B,OAAOoL,SAC9C9L,MAAM+L,UAAUmF,MAASlR,MAAM+L,UAAUnN,UACzCsB,OAAO6L,UAAUyH,YAAetT,OAAO6L,UAAU0H,YACjD9Y,EAAI+Y,UAAa/Y,EAAI+Y,SAAS3H,UAAUtK,UACxC9G,EAAIgZ,OAfP,WACE,IACE,IAAIC,EAAI,IAAIvF,IAAI,IAAK,YAErB,OADAuF,EAAEjC,SAAW,QACM,mBAAXiC,EAAEpF,MAA8BoF,EAAEC,aAC1C,MAAOtX,GACP,OAAO,GAURuX,IACiB,oBAAXnX,SAEPyW,EAAShT,KAAK,mCAGlB,OAAOjE,QAAQ+N,IAAIkJ,IC1BrBW,GAAiBvK,MAAK,kBAAM6I,OAE5B2B,IAAS7J,OACL,kBAAC,IAAM8J,WAAP,KACI,kBAAC,EAAD,OAEJnZ,SAASoZ,eAAe,W","file":"static/js/main.d6076fae.chunk.js","sourcesContent":["const NAMESPACE = 'htmlplus';\n\nlet scopeId;\nlet hostTagName;\nlet isSvgMode = false;\nlet queuePending = false;\nconst win = typeof window !== 'undefined' ? window : {};\nconst doc = win.document || { head: {} };\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: h => h(),\n    raf: h => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructibleStylesheets =  /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return true;\n        }\n        catch (e) { }\n        return false;\n    })()\n    ;\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\nconst createTime = (fnName, tagName = '') => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst rootAppliedStyles = new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructibleStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        style.replace(cssText);\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n    let scopeId = getScopeId(cmpMeta);\n    let style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if ( !styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle( elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta);\n    if ( flags & 10 /* needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + ( cmp.$tagName$);\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\nconst isDef = (v) => v != null;\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let key = null;\n    let simple = false;\n    let lastSimple = false;\n    let vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        // normalize class / classname attributes\n        if ( vnodeData.key) {\n            key = vnodeData.key;\n        }\n        {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter(k => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    if ( typeof nodeName === 'function') {\n        // nodeName is a functional component\n        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    {\n        vnode.$key$ = key;\n    }\n    return vnode;\n};\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    {\n        vnode.$key$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\nconst isHost = (node) => node && node.$tag$ === Host;\nconst vdomFnUtils = {\n    forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n    map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),\n};\nconst convertToPublic = (node) => ({\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$,\n});\nconst convertToPrivate = (node) => {\n    if (typeof node.vtag === 'function') {\n        const vnodeData = Object.assign({}, node.vattrs);\n        if (node.vkey) {\n            vnodeData.key = node.vkey;\n        }\n        if (node.vname) {\n            vnodeData.name = node.vname;\n        }\n        return h(node.vtag, vnodeData, ...(node.vchildren || []));\n    }\n    const vnode = newVNode(node.vtag, node.vtext);\n    vnode.$attrs$ = node.vattrs;\n    vnode.$children$ = node.vchildren;\n    vnode.$key$ = node.vkey;\n    vnode.$name$ = node.vname;\n    return vnode;\n};\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if ( memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter(c => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter(c => c && !oldClasses.includes(c)));\n        }\n        else if ( memberName === 'style') {\n            // update style attribute, css properties and values\n            {\n                for (const prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if ( prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (const prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if ( prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if ( memberName === 'key')\n            ;\n        else if ( memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if ( ( !isProp ) && memberName[0] === 'o' && memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        let n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                            // tslint:disable-next-line: triple-equals\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            let xlink = false;\n            {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    if ( xlink) {\n                        elm.removeAttributeNS(XLINK_NS, memberName);\n                    }\n                    else {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if ( xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    let newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    if ( newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else {\n        // create element\n        elm = newVNode.$elm$ = ( doc.createElement( newVNode.$tag$));\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if ( isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n    }\n    return elm;\n};\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = ( parentElm);\n    let childNode;\n    if ( containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode,  before);\n            }\n        }\n    }\n};\nconst removeVnodes = (vnodes, startIdx, endIdx, vnode, elm) => {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            callNodeRefs(vnode);\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let idxInOld = 0;\n    let i = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    let elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // Vnode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            patch(oldStartVnode, newEndVnode);\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            patch(oldEndVnode, newStartVnode);\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // createKeyToOldIdx\n            idxInOld = -1;\n            {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if ( idxInOld >= 0) {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld);\n                }\n                else {\n                    patch(elmToMove, newStartVnode);\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // new element\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if ( newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\nconst isSameVnode = (vnode1, vnode2) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (vnode1.$tag$ === vnode2.$tag$) {\n        {\n            return vnode1.$key$ === vnode2.$key$;\n        }\n    }\n    return false;\n};\nconst patch = (oldVNode, newVNode) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    if ( text === null) {\n        // element node\n        {\n            if ( tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if ( oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if ( oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if ( oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n    }\n    else if ( oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nconst callNodeRefs = (vNode) => {\n    {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(callNodeRefs);\n    }\n};\nconst renderVdom = (hostRef, renderFnResults) => {\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    if ( cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = ( hostElm.shadowRoot || hostElm );\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n};\nconst getElement = (ref) => ( getHostRef(ref).$hostElement$ );\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* Bubbles */),\n                composed: !!(flags & 2 /* Composed */),\n                cancelable: !!(flags & 1 /* Cancellable */),\n                detail,\n            });\n        },\n    };\n};\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if ( ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise(r => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    {\n        hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n    }\n    if ( hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return  writeTask(dispatch) ;\n};\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance =  hostRef.$lazyInstance$ ;\n    let promise;\n    if (isInitialLoad) {\n        {\n            promise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    endSchedule();\n    return then(promise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    // updateComponent\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if ( isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        {\n            // looks like we've got child nodes to render into this host element\n            // or we need to update the css class/attrs on the host element\n            // DOM WRITE!\n            {\n                renderVdom(hostRef, callRender(hostRef, instance));\n            }\n        }\n    }\n    if ( rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map(cb => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        const childrenPromises = elm['s-p'];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nconst callRender = (hostRef, instance) => {\n    try {\n        instance =  instance.render() ;\n        {\n            hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n        }\n        {\n            hostRef.$flags$ |= 2 /* hasRendered */;\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n    return instance;\n};\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const instance =  hostRef.$lazyInstance$ ;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        {\n            safeCall(instance, 'componentDidLoad');\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        endPostUpdate();\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n};\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nconst then = (promise, thenFn) => {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nconst addHydratedFlag = (elm) => ( elm.classList.add('hydrated') );\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if ( propType & 4 /* Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if ( propType & 1 /* String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance =  hostRef.$lazyInstance$ ;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    if (( !(flags & 8 /* isConstructingInstance */) || oldVal === undefined) && newVal !== oldVal) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if ( instance) {\n            // get an array of method names of watch functions to call\n            if ( cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n                const watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map(watchMethodName => {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e);\n                        }\n                    });\n                }\n            }\n            if ( (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    if ( cmpMeta.$members$) {\n        if ( Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        const prototype = Cstr.prototype;\n        members.map(([memberName, [memberFlags]]) => {\n            if ( (memberFlags & 31 /* Prop */ || (( flags & 2 /* proxyState */) && memberFlags & 32 /* State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n        });\n        if ( ( flags & 1 /* isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                plt.jmp(() => {\n                    const propName = attrNameToPropName.get(attrName);\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(([_, m]) => m[0] & 15 /* HasAttribute */) // filter to only keep props that should match attributes\n                .map(([propName, m]) => {\n                const attrName = m[1] || propName;\n                attrNameToPropName.set(attrName, propName);\n                if ( m[0] & 512 /* ReflectAttr */) {\n                    cmpMeta.$attrsToReflect$.push([propName, attrName]);\n                }\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId, Cstr) => {\n    // initializeComponent\n    if ( (hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n        {\n            // we haven't initialized this element yet\n            hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime();\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if ( !Cstr.isProxied) {\n                // we'eve never proxied this Constructor before\n                // let's add the getters/setters to its prototype before\n                // the first time we create an instance of the implementation\n                {\n                    cmpMeta.$watchers$ = Cstr.watchers;\n                }\n                proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            {\n                hostRef.$flags$ |= 8 /* isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            {\n                hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n            }\n            {\n                hostRef.$flags$ |= 128 /* isWatchReady */;\n            }\n            endNewInstance();\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        if ( Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            const scopeId = getScopeId(cmpMeta);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if ( ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the intial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst fireConnectedCallback = (instance) => {\n    {\n        safeCall(instance, 'connectedCallback');\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* hasConnected */;\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (\n                        ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if ( cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // fire off connectedCallback() on component instance\n            fireConnectedCallback(hostRef.$lazyInstance$);\n        }\n        endConnected();\n    }\n};\nconst disconnectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const instance =  hostRef.$lazyInstance$ ;\n        {\n            safeCall(instance, 'disconnectedCallback');\n        }\n    }\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    const endBootstrap = createTime();\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    let appLoadFallback;\n    let isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    lazyBundles.map(lazyBundle => lazyBundle[1].map(compactMeta => {\n        const cmpMeta = {\n            $flags$: compactMeta[0],\n            $tagName$: compactMeta[1],\n            $members$: compactMeta[2],\n            $listeners$: compactMeta[3],\n        };\n        {\n            cmpMeta.$members$ = compactMeta[2];\n        }\n        {\n            cmpMeta.$attrsToReflect$ = [];\n        }\n        {\n            cmpMeta.$watchers$ = {};\n        }\n        const tagName =  cmpMeta.$tagName$;\n        const HostElement = class extends HTMLElement {\n            // StencilLazyHost\n            constructor(self) {\n                // @ts-ignore\n                super(self);\n                self = this;\n                registerHost(self, cmpMeta);\n                if ( cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n                    // this component is using shadow dom\n                    // and this browser supports shadow dom\n                    // add the read-only property \"shadowRoot\" to the host element\n                    // adding the shadow root build conditionals to minimize runtime\n                    {\n                        {\n                            self.attachShadow({ mode: 'open' });\n                        }\n                    }\n                }\n            }\n            connectedCallback() {\n                if (appLoadFallback) {\n                    clearTimeout(appLoadFallback);\n                    appLoadFallback = null;\n                }\n                if (isBootstrapping) {\n                    // connectedCallback will be processed once all components have been registered\n                    deferredConnectedCallbacks.push(this);\n                }\n                else {\n                    plt.jmp(() => connectedCallback(this));\n                }\n            }\n            disconnectedCallback() {\n                plt.jmp(() => disconnectedCallback(this));\n            }\n            componentOnReady() {\n                return getHostRef(this).$onReadyPromise$;\n            }\n        };\n        cmpMeta.$lazyBundleId$ = lazyBundle[0];\n        if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n            cmpTags.push(tagName);\n            customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n        }\n    }));\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map(host => host.connectedCallback());\n    }\n    else {\n        {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst hostRefs = new WeakMap();\nconst getHostRef = (ref) => hostRefs.get(ref);\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\nconst registerHost = (elm, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onReadyPromise$ = new Promise(r => (hostRef.$onReadyResolve$ = r));\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    return hostRefs.set(elm, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e) => console.error(e);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    const module =  cmpModules.get(bundleId) ;\n    if (module) {\n        return module[exportName];\n    }\n    return import(\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${ ''}`).then(importedModule => {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = new Map();\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst flush = () => {\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = /*@__PURE__*/ (cb) => promiseResolve().then(cb);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\n\nexport { Host as H, bootstrapLazy as b, createEvent as c, getElement as g, h, promiseResolve as p, registerInstance as r };\n","import * as marked from 'marked';\n\nexport const parse = marked['default'];","import React from 'react';\nimport {\n    Link as LinkCore,\n    RouteProps,\n    generatePath,\n    matchPath,\n    // useHistory,\n    useLocation\n} from 'react-router-dom';\n\nexport const routes: Array<RouteOptions> = [];\n\nexport interface RouteOptions extends RouteProps {\n    load?: () => Promise<{ default: React.ComponentType<any> }>;\n    name?: string;\n}\n\nexport const register = (route: RouteOptions) => {\n\n    routes.push(route);\n}\n\nexport const toPath = (to: string, state = {}) => {\n\n    const route = routes.find((route) => route.name === to);\n\n    const path = route ? generatePath(route.path as string, state) : to;\n\n    return path;\n}\nexport const useRouter = () => {\n\n    const result: any = {\n        toPath\n    };\n\n    // const history = useHistory();\n\n    const location = useLocation();\n\n    Object.defineProperty(\n        result,\n        'match',\n        {\n            get() {\n\n                for (let i = 0; i < routes.length; i++) {\n\n                    const route = routes[i];\n\n                    const match = matchPath(location.pathname, route);\n\n                    if (match) return match;\n                }\n\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        }\n    );\n\n    return result;\n};\n\nexport const Link: React.FC<{ to: string, state?: any }> = ({ children, to, state }) => {\n\n    return <LinkCore to={toPath(to, state)}>{children}</LinkCore>\n}","var map = {\n\t\"./hp-dialog.entry.js\": [\n\t\t47,\n\t\t9\n\t],\n\t\"./hp-grid_2.entry.js\": [\n\t\t48,\n\t\t11\n\t],\n\t\"./hp-switch.entry.js\": [\n\t\t49,\n\t\t17\n\t],\n\t\"./hp-tabs_5.entry.js\": [\n\t\t51,\n\t\t10\n\t],\n\t\"./tunnel-consumer.entry.js\": [\n\t\t50,\n\t\t18\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 41;\nmodule.exports = webpackAsyncContext;","import { p as promiseResolve, b as bootstrapLazy } from './index-b4553237.js';\n\n/*\n Stencil Client Patch Esm v2.0.3 | MIT Licensed | https://stenciljs.com\n */\nconst patchEsm = () => {\n    return promiseResolve();\n};\n\nconst defineCustomElements = (win, options) => {\n  if (typeof window === 'undefined') return Promise.resolve();\n  return patchEsm().then(() => {\n  return bootstrapLazy([[\"hp-tabs_5\",[[1,\"hp-tabs\",{\"value\":[1],\"vertical\":[516],\"connector\":[1]}],[1,\"hp-tabs-panel\",{\"value\":[1],\"active\":[32]}],[1,\"hp-tabs-panels\",{\"connector\":[1],\"active\":[32]}],[1,\"hp-tabs-tab\",{\"disabled\":[516],\"value\":[1],\"active\":[32]}],[1,\"hp-tabs-bar\",{\"grow\":[516],\"justify\":[513],\"reverse\":[516]}]]],[\"hp-grid_2\",[[1,\"hp-grid\",{\"alignContent\":[1,\"align-content\"],\"alignContentXs\":[1,\"align-content-xs\"],\"alignContentSm\":[1,\"align-content-sm\"],\"alignContentMd\":[1,\"align-content-md\"],\"alignContentLg\":[1,\"align-content-lg\"],\"alignContentXl\":[1,\"align-content-xl\"],\"alignItems\":[1,\"align-items\"],\"alignItemsXs\":[1,\"align-items-xs\"],\"alignItemsSm\":[1,\"align-items-sm\"],\"alignItemsMd\":[1,\"align-items-md\"],\"alignItemsLg\":[1,\"align-items-lg\"],\"alignItemsXl\":[1,\"align-items-xl\"],\"gutter\":[1],\"gutterX\":[1,\"gutter-x\"],\"gutterY\":[1,\"gutter-y\"],\"justify\":[1],\"justifyXs\":[1,\"justify-xs\"],\"justifySm\":[1,\"justify-sm\"],\"justifyMd\":[1,\"justify-md\"],\"justifyLg\":[1,\"justify-lg\"],\"justifyXl\":[1,\"justify-xl\"],\"reverse\":[4],\"vertical\":[4],\"wrap\":[1],\"wrapXs\":[1,\"wrap-xs\"],\"wrapSm\":[1,\"wrap-sm\"],\"wrapMd\":[1,\"wrap-md\"],\"wrapLg\":[1,\"wrap-lg\"],\"wrapXl\":[1,\"wrap-xl\"]}],[1,\"hp-grid-item\",{\"alignSelf\":[513,\"align-self\"],\"alignSelfXs\":[513,\"align-self-xs\"],\"alignSelfSm\":[513,\"align-self-sm\"],\"alignSelfMd\":[513,\"align-self-md\"],\"alignSelfLg\":[513,\"align-self-lg\"],\"alignSelfXl\":[513,\"align-self-xl\"],\"xs\":[513],\"sm\":[513],\"md\":[513],\"lg\":[513],\"xl\":[513],\"hideXs\":[516,\"hide-xs\"],\"hideSm\":[516,\"hide-sm\"],\"hideMd\":[516,\"hide-md\"],\"hideLg\":[516,\"hide-lg\"],\"hideXl\":[516,\"hide-xl\"],\"hideXsUp\":[516,\"hide-xs-up\"],\"hideSmUp\":[516,\"hide-sm-up\"],\"hideMdUp\":[516,\"hide-md-up\"],\"hideLgUp\":[516,\"hide-lg-up\"],\"hideSmDown\":[516,\"hide-sm-down\"],\"hideMdDown\":[516,\"hide-md-down\"],\"hideLgDown\":[516,\"hide-lg-down\"],\"offsetXs\":[513,\"offset-xs\"],\"offsetSm\":[513,\"offset-sm\"],\"offsetMd\":[513,\"offset-md\"],\"offsetLg\":[513,\"offset-lg\"],\"offsetXl\":[513,\"offset-xl\"],\"orderXs\":[513,\"order-xs\"],\"orderSm\":[513,\"order-sm\"],\"orderMd\":[513,\"order-md\"],\"orderLg\":[513,\"order-lg\"],\"orderXl\":[513,\"order-xl\"]}]]],[\"hp-dialog\",[[1,\"hp-dialog\",{\"align\":[1],\"fullscreen\":[4],\"justify\":[1],\"keyboard\":[4],\"persistent\":[4],\"open\":[516],\"overlay\":[516],\"scrollable\":[4]}]]],[\"hp-switch\",[[1,\"hp-switch\",{\"checked\":[516],\"disabled\":[516],\"inset\":[516],\"reverse\":[516]}]]],[\"tunnel-consumer\",[[0,\"tunnel-consumer\",{\"context\":[16],\"renderer\":[16],\"subscribe\":[16],\"unsubscribe\":[32]}]]]], options);\n  });\n};\n\nexport { defineCustomElements };\n","\n(function () { if (\"undefined\" !== typeof window && void 0 !== window.Reflect && void 0 !== window.customElements) { var a = HTMLElement; window.HTMLElement = function () { return Reflect.construct(a, [], this.constructor) }; HTMLElement.prototype = a.prototype; HTMLElement.prototype.constructor = HTMLElement; Object.setPrototypeOf(HTMLElement, a) } })();\nexport * from '@htmlplus/core/dist/esm/polyfills/index.js';\nexport * from '@htmlplus/core/dist/esm/loader.js';\n","import { Router } from 'src/services';\n\nconst route: Router.RouteOptions = {\n    name: 'ROUTE:COMPONENT:DETAILS',\n    path: '/component/:key',\n    load: () => import('./details'),\n};\n\nRouter.register(route);","import { Router } from 'src/services';\n\nconst route: Router.RouteOptions = {\n    name: 'ROUTE:FRAMEWORK:ANGULAR',\n    path: '/framework/angular',\n    load: () => import('./angular'),\n};\n\nRouter.register(route);","import { Router } from 'src/services';\n\nconst route: Router.RouteOptions = {\n    name: 'ROUTE:FRAMEWORK:JAVASCRIPT',\n    path: '/framework/javascript',\n    load: () => import('./javascript'),\n};\n\nRouter.register(route);","import { Router } from 'src/services';\n\nconst route: Router.RouteOptions = {\n    name: 'ROUTE:FRAMEWORK:OVERVIEW',\n    path: '/framework/overview',\n    load: () => import('./overview'),\n};\n\nRouter.register(route);","import { Router } from 'src/services';\n\nconst route: Router.RouteOptions = {\n    name: 'ROUTE:FRAMEWORK:REACT',\n    path: '/framework/react',\n    load: () => import('./react'),\n};\n\nRouter.register(route);","import { Router } from 'src/services';\n\nconst route: Router.RouteOptions = {\n    name: 'ROUTE:FRAMEWORK:VUE',\n    path: '/framework/vue',\n    load: () => import('./vue'),\n};\n\nRouter.register(route);","import { Router } from 'src/services';\n\nconst route: Router.RouteOptions = {\n    name: 'ROUTE:HOME',\n    path: '/',\n    exact: true,\n    load: () => import('./home'),\n};\n\nRouter.register(route);","import React, { Suspense } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Router } from 'src/services';\n\nconst Loading: React.FC = () => <span>Loading...</span>;\n\nconst Component: React.FC<{ value: any }> = ({ value }) => {\n\n    const Lazy = React.lazy(value);\n\n    return <Lazy />\n};\n\nconst Root: React.FC = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                {Router.routes.map((route: any) => (\n                    <Route key={route.name || route.path} {...route}>\n                        <Suspense fallback={<Loading />}>\n                            <Component value={route.load} />\n                        </Suspense>\n                    </Route>\n                ))}\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Root;\n","export function applyPolyfills() {\n  var promises = [];\n  if (typeof window !== 'undefined') {\n    var win = window;\n\n    if (!win.customElements ||\n      (win.Element && (!win.Element.prototype.closest || !win.Element.prototype.matches || !win.Element.prototype.remove || !win.Element.prototype.getRootNode))) {\n      promises.push(import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js'));\n    }\n\n    function checkIfURLIsSupported() {\n      try {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        return (u.href === 'http://a/c%20d') && u.searchParams;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    if (\n      'function' !== typeof Object.assign || !Object.entries ||\n      !Array.prototype.find || !Array.prototype.includes ||\n      !String.prototype.startsWith || !String.prototype.endsWith ||\n      (win.NodeList && !win.NodeList.prototype.forEach) ||\n      !win.fetch ||\n      !checkIfURLIsSupported() ||\n      typeof WeakMap == 'undefined'\n    ) {\n      promises.push(import(/* webpackChunkName: \"polyfills-core-js\" */ './core-js.js'));\n    }\n  }\n  return Promise.all(promises);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyPolyfills, defineCustomElements } from '@htmlplus/react/loader';\nimport './views';\nimport Root from './views/root/root';\n\napplyPolyfills().then(() => defineCustomElements());\n\nReactDOM.render(\n    <React.StrictMode>\n        <Root />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}